TITLE: Using Prefix Option to Avoid Tailwind Class Conflicts
DESCRIPTION: Example demonstrating how to prefix all Tailwind-generated classes and CSS variables to avoid conflicts with existing class names in a project.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_31

LANGUAGE: css
CODE:
@import "tailwindcss" prefix(tw);

LANGUAGE: css
CODE:
@layer theme {
  :root {
    --tw-color-red-500: oklch(0.637 0.237 25.331);
  }
}

@layer utilities {
  .tw\:text-red-500 {
    color: var(--tw-color-red-500);
  }
}

----------------------------------------

TITLE: Updating PostCSS Configuration for Tailwind CSS v4
DESCRIPTION: Changes required in the PostCSS configuration file when upgrading to Tailwind CSS v4. Removes postcss-import and autoprefixer, and updates the Tailwind CSS plugin.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_1

LANGUAGE: js
CODE:
export default {
  plugins: {
    "@tailwindcss/postcss": {},
  },
};

----------------------------------------

TITLE: Creating a Reusable React Component with Tailwind CSS
DESCRIPTION: A React component for displaying vacation card information that uses Tailwind CSS classes for styling. The component accepts props for image, text content, and URL to create a consistent card layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_25

LANGUAGE: jsx
CODE:
export function VacationCard({ img, imgAlt, eyebrow, title, pricing, url }) {
  return (
    <div>
      <img className="rounded-lg" src={img} alt={imgAlt} />
      <div className="mt-4">
        <div className="text-xs font-bold text-sky-500">{eyebrow}</div>
        <div className="mt-1 font-bold text-gray-700">
          <a href={url} className="hover:underline">
            {title}
          </a>
        </div>
        <div className="mt-2 text-sm text-gray-600">{pricing}</div>
      </div>
    </div>
  );
}

----------------------------------------

TITLE: Creating a Responsive Card Layout with Tailwind CSS
DESCRIPTION: Implements a responsive card layout that changes from stacked to side-by-side at larger screen sizes using Tailwind CSS utility classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="mx-auto max-w-md overflow-hidden rounded-xl bg-white shadow-md md:max-w-2xl">
  <div class="md:flex">
    <div class="md:shrink-0">
      <img
        class="h-48 w-full object-cover md:h-full md:w-48"
        src="/img/building.jpg"
        alt="Modern building architecture"
      />
    </div>
    <div class="p-8">
      <div class="text-sm font-semibold tracking-wide text-indigo-500 uppercase">Company retreats</div>
      <a href="#" class="mt-1 block text-lg leading-tight font-medium text-black hover:underline">
        Incredible accommodation for your team
      </a>
      <p class="mt-2 text-gray-500">
        Looking to take your team away on a retreat to enjoy awesome food and take in some sunshine? We have a list of
        places to do just that.
      </p>
    </div>
  </div>
</div>

----------------------------------------

TITLE: Transitioning Components with Headless UI - React JavaScript
DESCRIPTION: Use this snippet to transition HTML elements or components with the `Transition` component using the new data attribute methods in Headless UI. It is suitable for toggling visibility animations, requiring `useState` and components from `@headlessui/react`.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2024-06-21-headless-ui-v2-1/index.mdx#2025-04-18_snippet_2

LANGUAGE: JavaScript
CODE:
import { Transition } from "@headlessui/react";
import { useState } from "react";

function Example() {
  const [isShowing, setIsShowing] = useState(false);

  return (
    <>
      <button onClick={() => setIsShowing((isShowing) => !isShowing)}>Toggle</button>
      // [!code highlight:6]
      <Transition show={isShowing}>
        <div className="transition duration-300 data-[closed]:opacity-0">I will fade in and out</div>
      </Transition>
    </>
  );
}

----------------------------------------

TITLE: Using Absolute Positioning in Tailwind CSS
DESCRIPTION: Example demonstrating how absolute positioning removes elements from the normal document flow. Absolute elements are positioned relative to their nearest positioned ancestor, and sibling elements ignore their presence.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/position.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:absolute] -->
<div class="static ...">
  <!-- Static parent -->
  <div class="static ..."><p>Static child</p></div>
  <div class="inline-block ..."><p>Static sibling</p></div>
  <!-- Static parent -->
  <div class="absolute ..."><p>Absolute child</p></div>
  <div class="inline-block ..."><p>Static sibling</p></div>
</div>

----------------------------------------

TITLE: Using CSS Calc with Arbitrary Values in HTML
DESCRIPTION: This snippet demonstrates using the `calc()` function to set maximum height dynamically with the class `max-h-[calc(100dvh-(--spacing(6))]`, integrating Tailwind CSS with CSS custom properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_14

LANGUAGE: html
CODE:
<div class="max-h-[calc(100dvh-(--spacing(6))]">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Updating Tailwind CSS to Latest Version (Shell)
DESCRIPTION: This shell command updates Tailwind CSS to the latest version using npm. It's a straightforward way to ensure that your project is using the most recent features and fixes available.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_30

LANGUAGE: sh
CODE:
npm install -D tailwindcss@latest

----------------------------------------

TITLE: Nesting Multiple Tailwind Variants in CSS
DESCRIPTION: This CSS snippet illustrates how to apply multiple variants simultaneously using nesting. It applies the `hover` variant within the `dark` variant, changing the background color to black when both conditions are met.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_5

LANGUAGE: css
CODE:
/* [!code filename:app.css] */
.my-element {
  background: white;

  /* [!code highlight:6] */
  @variant dark {
    @variant hover {
      background: black;
    }
  }
}

LANGUAGE: css
CODE:
/* [!code filename:Compiled CSS] */
.my-element {
  background: white;

  /* [!code highlight:7] */
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background: black;
      }
    }
  }
}

----------------------------------------

TITLE: Using Relative Positioning in Tailwind CSS
DESCRIPTION: Example showing how relative positioning creates a positioning context for absolute children while keeping the element in the normal document flow. Offset properties are calculated relative to the element's normal position.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/position.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:relative] -->
<div class="relative ...">
  <p>Relative parent</p>
  <div class="absolute bottom-0 left-0 ...">
    <p>Absolute child</p>
  </div>
</div>

----------------------------------------

TITLE: Styling Form Input with Tailwind CSS Variants in HTML
DESCRIPTION: This code snippet demonstrates how to apply Tailwind CSS classes to style a form input element in various states, including invalid, focused, and disabled. It uses pseudo-class variants to apply specific styles for each state.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_8

LANGUAGE: HTML
CODE:
<input
  type="text"
  value="tbone"
  disabled
  class="invalid:border-pink-500 invalid:text-pink-600 focus:border-sky-500 focus:outline focus:outline-sky-500 focus:invalid:border-pink-500 focus:invalid:outline-pink-500 disabled:border-gray-200 disabled:bg-gray-50 disabled:text-gray-500 disabled:shadow-none dark:disabled:border-gray-700 dark:disabled:bg-gray-800/20 ..."
/>

----------------------------------------

TITLE: Installing Tailwind CSS v4.0 with npm and PostCSS
DESCRIPTION: Three-step installation process for Tailwind CSS v4.0 showing the npm installation command, PostCSS plugin configuration, and the simplified one-line CSS import.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_1

LANGUAGE: shell
CODE:
npm i tailwindcss @tailwindcss/postcss;

LANGUAGE: js
CODE:
export default {
  plugins: ["@tailwindcss/postcss"],
};

LANGUAGE: css
CODE:
@import "tailwindcss";

----------------------------------------

TITLE: Implementing a Chat Notification Card with Tailwind CSS in HTML
DESCRIPTION: This snippet demonstrates how to create a chat notification card using Tailwind CSS utility classes. It includes styling for layout, colors, typography, and responsive design.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_0

LANGUAGE: HTML
CODE:
<!-- prettier-ignore -->
<div class="mx-auto flex max-w-sm items-center gap-x-4 rounded-xl bg-white p-6 shadow-lg outline outline-black/5 dark:bg-slate-800 dark:shadow-none dark:-outline-offset-1 dark:outline-white/10">
  <img class="size-12 shrink-0" src="/img/logo.svg" alt="ChitChat Logo" />
  <div>
    <div class="text-xl font-medium text-black dark:text-white">ChitChat</div>
    <p class="text-gray-500 dark:text-gray-400">You have a new message!</p>
  </div>
</div>

----------------------------------------

TITLE: Implementing Screen Reader Visibility with TailwindCSS
DESCRIPTION: Explains how to use `sr-only` to ensure an element is only accessible to screen readers, and `not-sr-only` for reversing this effect on larger screens. This is essential for accessibility in HTML documents.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/display.mdx#2025-04-18_snippet_10

LANGUAGE: HTML
CODE:
<a href="#">
  <svg><!-- ... --></svg>
  <span class="sr-only">Settings</span>
</a>

LANGUAGE: HTML
CODE:
<a href="#">
  <svg><!-- ... --></svg>
  <span class="sr-only sm:not-sr-only">Settings</span>
</a>

----------------------------------------

TITLE: Rendering Tailwind CSS Pseudo-Class and Pseudo-Element Reference Table in HTML
DESCRIPTION: This HTML snippet renders a table that maps Tailwind CSS utility classes to their corresponding CSS pseudo-class and pseudo-element selectors. Each row contains a link to the documentation and the CSS equivalent of the Tailwind class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_72

LANGUAGE: HTML
CODE:
<tr>
  <td>
    <a href="#nth-last-of-type" className="whitespace-nowrap">
      nth-last-of-type-[<span className="text-gray-400">...</span>]
    </a>
  </td>
  <td>
    <code className="whitespace-nowrap before:content-none after:content-none">
      <span className="text-gray-400">&</span>:nth-last-of-type(<span className="text-gray-400">...</span>)
    </code>
  </td>
</tr>
<!-- Additional table rows omitted for brevity -->
<tr>
  <td>
    <a href="#responsive-breakpoints" className="whitespace-nowrap">
      sm
    </a>
  </td>
  <td>

----------------------------------------

TITLE: Basic Hover State in Tailwind CSS
DESCRIPTION: Example showing how to apply background color change on hover using the hover: prefix with a Tailwind utility class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- [!code classes:hover:bg-sky-700] -->
<button class="bg-sky-500 hover:bg-sky-700 ...">Save changes</button>

----------------------------------------

TITLE: Implementing Tabs Component in React with Headless UI
DESCRIPTION: Example of using the new Tab component from Headless UI v1.4 in React. The component provides accessible tab functionality with Tab.Group, Tab.List, Tab, Tab.Panels, and Tab.Panel components.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-4/index.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { Tab } from '@headlessui/react'

function MyTabs() {
  return (
    <Tab.Group>
      <Tab.List>
        <Tab>Tab 1</Tab>
        <Tab>Tab 2</Tab>
        <Tab>Tab 3</Tab>
      </Tab.List>
      <Tab.Panels>
        <Tab.Panel>Content 1</Tab.Panel>
        <Tab.Panel>Content 2</Tab.Panel>
        <Tab.Panel>Content 3</Tab.Panel>
      </Tab.Panels>
    </Tab.Group>
  )
}

----------------------------------------

TITLE: Using Arbitrary Variants in Tailwind CSS
DESCRIPTION: Shows how to use arbitrary variants to create custom selector variants directly in HTML, including stacking with built-in variants.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_66

LANGUAGE: svelte
CODE:
<ul role="list">
  {#each items as item}
    <li class="[&.is-dragging]:cursor-grabbing">{item}</li>
  {/each}
</ul>

----------------------------------------

TITLE: Using Arbitrary Values in CSS Utility
DESCRIPTION: This CSS snippet demonstrates how to support arbitrary values within a CSS utility. The `--value([{type}])` syntax enables users to specify any value of a supported type (in this case, integer) using square brackets.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_14

LANGUAGE: css
CODE:
/* [!code filename:CSS] */
@utility tab-* {
  tab-size: --value([integer]);
}

----------------------------------------

TITLE: Styling for Dark Mode in Tailwind CSS
DESCRIPTION: Illustrates how to use the dark: prefix to apply styles specifically for dark mode. The example includes multiple dark mode styles for a card component.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_8

LANGUAGE: html
CODE:
<div class="bg-white dark:bg-gray-800 rounded-lg px-6 py-8 ring shadow-xl ring-gray-900/5">
  <div>
    <span class="inline-flex items-center justify-center rounded-md bg-indigo-500 p-2 shadow-lg">
      <svg
        class="h-6 w-6 text-white"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        aria-hidden="true"
      >
        <!-- ... -->
      </svg>
    </span>
  </div>
  <h3 class="text-gray-900 dark:text-white mt-5 text-base font-medium tracking-tight ">Writes upside-down</h3>
  <p class="text-gray-500 dark:text-gray-400 mt-2 text-sm ">
    The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.
  </p>
</div>

----------------------------------------

TITLE: Implementing Simplified Transition in Headless UI - React JavaScript
DESCRIPTION: This snippet demonstrates using the new `transition` prop in Headless UI v2.1 for React. It simplifies adding transitions to components by utilizing new data attributes to define transition stages. This requires importing components from `@headlessui/react`.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2024-06-21-headless-ui-v2-1/index.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { Menu, MenuButton, MenuItem, MenuItems } from "@headlessui/react";

function Example() {
  return (
    <Menu>
      <MenuButton>My account</MenuButton>
      <MenuItems
        // [!code highlight:7]
        transition
        className={`
          transition ease-out
          data-[closed]:scale-95 data-[closed]:opacity-0
          data-[enter]:duration-200 data-[leave]:duration-300
        `}
      >
        {/* Menu items… */}
      </MenuItems>
    </Menu>
  );
}

----------------------------------------

TITLE: Removing Default Breakpoints in Tailwind
DESCRIPTION: Shows how to remove default breakpoints using the initial keyword and theme variables.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_9

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --breakpoint-2xl: initial;
}

----------------------------------------

TITLE: Container Query Styling with Tailwind CSS
DESCRIPTION: This example shows how to use container queries in Tailwind CSS to style elements based on the width of a parent container rather than the viewport. It changes the flex direction at different container sizes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_35

LANGUAGE: html
CODE:
<div class="@container">
  <div class="flex flex-col @md:flex-row">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Targeting Child Elements with Arbitrary Variants in Tailwind CSS
DESCRIPTION: Demonstrates how to use arbitrary variants to target all child elements of a container, applying multiple style utilities to each child element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_22

LANGUAGE: html
CODE:
<!-- [!code word:[&>*\]\:p-4] -->
<!-- [!code word:[&>*\]\:bg-white] -->
<!-- [!code word:[&>*\]\:rounded-lg] -->
<!-- [!code word:[&>*\]\:shadow] -->
<ul role="list" class="space-y-4 [&>*]:rounded-lg [&>*]:bg-white [&>*]:p-4 [&>*]:shadow">
  <li class="flex">
    <img class="h-10 w-10 rounded-full" src="..." alt="" />
    <div class="ml-3 overflow-hidden">
      <p class="text-sm font-medium text-slate-900">Kristen Ramos</p>
      <p class="truncate text-sm text-slate-500">kristen.ramos@example.com</p>
    </div>
  </li>
  <!-- ... -->
</ul>

----------------------------------------

TITLE: Using Inline Styles in JSX with Tailwind CSS
DESCRIPTION: This snippet shows how to use inline styles in a React functional component `BrandedButton`, allowing the background and text colors to be set dynamically based on props. This is useful for using values from external sources.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_20

LANGUAGE: jsx
CODE:
export function BrandedButton({ buttonColor, textColor, children }) {
  return (
    <button
      style={{
        // [!code highlight:3]
        backgroundColor: buttonColor,
        color: textColor,
      }}
      className="rounded-md px-3 py-1.5 font-medium"
    >
      {children}
    </button>
  );
}

----------------------------------------

TITLE: Using place-items-center in Tailwind CSS Grid
DESCRIPTION: Example of using place-items-center to position grid items at the center of their grid areas on both axes. This creates a layout where items are centered horizontally and vertically within their respective cells.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-items.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="grid h-56 grid-cols-3 place-items-center gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
  <div>06</div>
</div>

----------------------------------------

TITLE: Styling Parent Based on Child State: HTML/CSS
DESCRIPTION: This snippet demonstrates the use of the :has() pseudo-class to style parent labels based on the checked state of radio button inputs. When a radio input is checked, the parent label receives specific background, text, and ring styles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-4/index.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<label class="has-[:checked]:bg-indigo-50 has-[:checked]:text-indigo-900 has-[:checked]:ring-indigo-500 ...">
  <svg fill="currentColor">
    <!-- ... -->
  </svg>
  Google Pay
  <input type="radio" class="accent-indigo-500 ..." />
</label>

----------------------------------------

TITLE: Calculating Values in CSS Utility
DESCRIPTION: This CSS snippet illustrates value calculations in a CSS utility, for example, translating a bare integer to a percentage. It supports multiple declarations to handle each type of value differently.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_16

LANGUAGE: css
CODE:
/* [!code filename:CSS] */
@utility opacity-* {
  opacity: --value([percentage]);
  /* [!code highlight:2] */
  opacity: calc(--value(integer) * 1%);
  /* prettier-ignore */
  opacity: --value(--opacity-*);
}

----------------------------------------

TITLE: Implementing Custom CSS Button with Tailwind Variables
DESCRIPTION: Example of creating a custom button class using Tailwind CSS variables and layers. This shows how to maintain design consistency while creating reusable CSS components.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_26

LANGUAGE: html
CODE:
<button class="btn-primary">Save changes</button>

LANGUAGE: css
CODE:
@import "tailwindcss";

@layer components {
  .btn-primary {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-violet-500);
    padding-inline: --spacing(5);
    padding-block: --spacing(2);
    font-weight: var(--font-weight-semibold);
    color: var(--color-white);
    box-shadow: var(--shadow-md);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-700);
      }
    }
  }
}

----------------------------------------

TITLE: Implementing Basic Scale Utilities in Tailwind CSS
DESCRIPTION: Example showing how to use basic scale utilities to resize elements proportionally. Uses classes like scale-75, scale-100, and scale-125 to scale images to different percentages of their original size.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scale.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<img class="scale-75 ..." src="/img/mountains.jpg" />
<img class="scale-100 ..." src="/img/mountains.jpg" />
<img class="scale-125 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Shorthand Syntax for Custom Variants in CSS
DESCRIPTION: This CSS snippet shows how to use the shorthand syntax for creating custom variants when nesting is not required. It provides a more concise way to define simple custom variants.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_23

LANGUAGE: css
CODE:
@custom-variant theme-midnight (&:where([data-theme="midnight"] *));

----------------------------------------

TITLE: Custom Base Styles in TailwindCSS
DESCRIPTION: Demonstrates adding custom base styles using the @layer directive for specific HTML elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_2

LANGUAGE: css
CODE:
@layer base {
  h1 {
    font-size: var(--text-2xl);
  }

  h2 {
    font-size: var(--text-xl);
  }
}

----------------------------------------

TITLE: Implementing @starting-style for Element Transitions in HTML
DESCRIPTION: This snippet demonstrates how to use the @starting-style directive in Tailwind CSS to set the initial opacity of a popover element. The popover starts with opacity 0 and transitions to full opacity when opened.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_49

LANGUAGE: html
CODE:
<!-- [!code classes:starting:open:opacity-0] -->
<div>
  <button popovertarget="my-popover">Check for updates</button>
  <div popover id="my-popover" class="opacity-0 starting:open:opacity-0 ...">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Adding a Complex Custom Utility in CSS
DESCRIPTION: This CSS snippet showcases adding a more complex custom utility with nesting. It defines a `scrollbar-hidden` utility that hides the scrollbar in WebKit-based browsers, allowing for more advanced styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_9

LANGUAGE: css
CODE:
/* [!code filename:CSS] */
@utility scrollbar-hidden {
  &::-webkit-scrollbar {
    display: none;
  }
}

----------------------------------------

TITLE: Generated CSS for Hover State in Tailwind
DESCRIPTION: Shows the CSS generated by Tailwind for the hover:bg-sky-700 class. It uses the :hover pseudo-class to apply the background color change.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_3

LANGUAGE: css
CODE:
.hover\:bg-sky-700 {
  &:hover {
    background-color: var(--color-sky-700);
  }
}

----------------------------------------

TITLE: Background Size Contain Example (Tailwind CSS)
DESCRIPTION: This example demonstrates how to use the `bg-contain` utility class in Tailwind CSS to scale a background image to fit within the container without cropping.  The image will be scaled to the largest size that fits without exceeding the container's boundaries. It uses `bg-[url(...)]` for setting the image and `bg-center` for centering.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-size.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
"<div class=\"bg-[url(/img/mountains.jpg)] bg-contain bg-center\"></div>"

----------------------------------------

TITLE: Form Validation with user-valid and user-invalid Variants in Tailwind CSS
DESCRIPTION: Shows how to use the new user-valid and user-invalid variants for form validation styling that only applies after user interaction, preventing premature error states on page load.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_22

LANGUAGE: html
CODE:
<input required class="border user-valid:border-green-500" />
<input required class="border user-invalid:border-red-500" />

----------------------------------------

TITLE: Handling Conflicting Utility Classes in Tailwind CSS
DESCRIPTION: Example showing how conflicting utility classes are resolved in Tailwind CSS, where later classes in the stylesheet take precedence regardless of HTML order.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_27

LANGUAGE: html
CODE:
<!-- prettier-ignore -->
<div class="grid flex">
  <!-- ... -->
</div>

LANGUAGE: css
CODE:
.flex {
  display: flex;
}
.grid {
  display: grid;
}

----------------------------------------

TITLE: HTML Class Sorting with Prettier
DESCRIPTION: This snippet demonstrates the Prettier plugin's ability to automatically sort Tailwind CSS classes in HTML files according to a recommended order. It takes unsorted classes as input and outputs the same classes in a sorted format, improving code readability and maintainability. The prettier-ignore comment prevents Prettier from formatting the 'before' example.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/editor-setup.mdx#2025-04-18_snippet_0

LANGUAGE: HTML
CODE:
<!-- [!code filename:HTML] -->
<!-- Before -->
<!-- prettier-ignore -->
<button class="text-white px-4 sm:px-8 py-2 sm:py-3 bg-sky-700 hover:bg-sky-800">Submit</button>

<!-- After -->
<button class="bg-sky-700 px-4 py-2 text-white hover:bg-sky-800 sm:px-8 sm:py-3">Submit</button>

----------------------------------------

TITLE: Correct Usage of Responsive Classes for Mobile-First Design in HTML
DESCRIPTION: Shows the correct way to implement mobile-first design by using unprefixed utilities for mobile and overriding them at larger breakpoints.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="text-center sm:text-left"></div>

----------------------------------------

TITLE: Using Complex Selectors in HTML with Tailwind CSS
DESCRIPTION: This snippet illustrates how to handle complex selectors in Tailwind CSS, combining conditions like dark mode and hover states. The class `dark:lg:data-current:hover:bg-indigo-600` changes the button's background color based on these states.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_17

LANGUAGE: html
CODE:
<button class="dark:lg:data-current:hover:bg-indigo-600 ...">
  <!-- ... -->
</button>

----------------------------------------

TITLE: Combining Variants in Tailwind CSS
DESCRIPTION: Shows how to stack multiple variants in Tailwind, such as combining disabled: and hover: to apply styles under specific conditions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<button class="bg-sky-500 disabled:hover:bg-sky-500 ...">Save changes</button>

----------------------------------------

TITLE: React JSX Example with Tailwind CSS Rounded Corners Classes
DESCRIPTION: This JSX code demonstrates how to use Tailwind CSS classes to apply border radius to individual corners of elements: top-left (rounded-tl-lg), top-right (rounded-tr-lg), bottom-right (rounded-br-lg), and bottom-left (rounded-bl-lg). It uses flex utility classes for layout and assigns a different rounded corner to each div with a background color.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_7

LANGUAGE: jsx
CODE:
{
    <div className="flex flex-col items-center justify-around gap-4 text-center text-sm leading-6 font-bold text-white sm:flex-row">
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-tl-lg</p>
        <div className="size-16 rounded-tl-lg bg-pink-500 p-4"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-tr-lg</p>
        <div className="size-16 rounded-tr-lg bg-pink-500 p-4"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-br-lg</p>
        <div className="size-16 rounded-br-lg bg-pink-500 p-4"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-bl-lg</p>
        <div className="size-16 rounded-bl-lg bg-pink-500 p-4"></div>
      </div>
    </div>
  }

----------------------------------------

TITLE: Customizing Dark Mode Behavior in Tailwind CSS
DESCRIPTION: This CSS snippet allows the customization of the dark mode behavior by defining a custom variant selector. By replacing the default usage of `prefers-color-scheme`, it enables developers to control the application of dark utilities using specific CSS selectors or data attributes for theme control.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/dark-mode.mdx#2025-04-18_snippet_1

LANGUAGE: css
CODE:
@import \"tailwindcss\";\n\n@custom-variant dark (&:where(.dark, .dark *));

LANGUAGE: css
CODE:
@import \"tailwindcss\";\n\n@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

----------------------------------------

TITLE: Using Multiple Arguments in CSS Utility
DESCRIPTION: This CSS snippet demonstrates using multiple arguments within the `--value()` function. This approach simplifies resolving values when different cases don't require separate treatments.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_17

LANGUAGE: css
CODE:
/* [!code filename:CSS] */
@theme {
  --tab-size-github: 8;
}

@utility tab-* {
  /* [!code highlight:2] */
  /* prettier-ignore */
  tab-size: --value(--tab-size-*, integer, [integer]);
}

@utility opacity-* {
  opacity: calc(--value(integer) * 1%);
  /* [!code highlight:2] */
  /* prettier-ignore */
  opacity: --value(--opacity-*, [percentage]);
}

----------------------------------------

TITLE: Dynamically Compiling CSS Classes in JSX with Tailwind CSS
DESCRIPTION: This snippet shows a React functional component `Button` that dynamically applies Tailwind's utility classes based on the size prop. It uses Tailwind's flexible class generation approach to customize styles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_16

LANGUAGE: jsx
CODE:
// [!code filename:Button.jsx]
// [!code word:px-4]
// [!code word:py-2]
// [!code word:rounded-md]
// [!code word:text-base]
// [!code word:px-5]
// [!code word:py-3]
// [!code word:rounded-lg]
// [!code word:text-lg]
// [!code word:font-bold]
export default function Button({ size, children }) {
  let sizeClasses = {
    md: "px-4 py-2 rounded-md text-base",
    lg: "px-5 py-3 rounded-lg text-lg",
  }[size];

  return (
    <button type="button" className={`font-bold ${sizeClasses}`}>  
      {children}
    </button>
  );
}

----------------------------------------

TITLE: Gradient Interpolation with sRGB and OKLCH in Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the `bg-linear-to-r/srgb` and `bg-linear-to-r/oklch` classes in Tailwind CSS to control the color interpolation mode for linear gradients.  The sRGB and OKLCH modifiers affect how the colors blend together in the gradient. No dependencies are required besides Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_16

LANGUAGE: html
CODE:
<div class="bg-linear-to-r/srgb from-indigo-500 to-teal-400">...</div>
<div class="bg-linear-to-r/oklch from-indigo-500 to-teal-400">...</div>

----------------------------------------

TITLE: Creating Dynamic Variants with matchVariant in Tailwind CSS
DESCRIPTION: This JavaScript snippet shows how to create a dynamic variant using the `matchVariant` plugin API. It creates a `placement-*` variant for an imaginary tooltip library.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_22

LANGUAGE: javascript
CODE:
// [!code word:js]
let plugin = require("tailwindcss/plugin");

module.exports = {
  // ...
  plugins: [
    plugin(function ({ matchVariant }) {
      matchVariant(
        "placement",
        (value) => {
          return `&[data-placement=${value}]`;
        },
        {
          values: {
            t: "top",
            r: "right",
            b: "bottom",
            l: "left",
          },
        },
      );
    }),
  ],
};

----------------------------------------

TITLE: Dark Mode Styling with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to implement dark mode styling using Tailwind CSS. It applies different background colors, text colors, and other styles for light and dark modes using the 'dark' variant.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_36

LANGUAGE: html
CODE:
<div class="bg-white dark:bg-gray-900 ...">
  <!-- ... -->
  <h3 class="text-gray-900 dark:text-white ...">Writes upside-down</h3>
  <p class="text-gray-500 dark:text-gray-400 ...">
    The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.
  </p>
</div>

----------------------------------------

TITLE: Overriding Default Theme Colors
DESCRIPTION: Clearing default color namespace and defining custom color palette using CSS variables
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-alpha/index.mdx#2025-04-18_snippet_5

LANGUAGE: css
CODE:
@theme {
  --color-*: initial;
  --color-gray-50: #f8fafc;
  --color-gray-100: #f1f5f9;
  --color-green-800: #3f6212;
}

----------------------------------------

TITLE: Updating Vue Examples to <script setup> Syntax
DESCRIPTION: This snippet demonstrates the conversion of Vue examples in Tailwind UI to utilize the <script setup> syntax, promoting simplicity and reduced boilerplate by allowing automatic registration of components and namespaced usage. Dependencies include Vue 3 and @headlessui/vue. The script requires importing components and managing state with ref. Inputs include data arrays, outputs are UI elements managed via template bindings, with the constraint of requiring Vue 3 support.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2022-05-23-headless-ui-v1-6-tailwind-ui-team-management/index.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<template>
  <Listbox as="div" v-model="selected">
    <!-- ... -->
  </Listbox>
</template>

<script setup>
  import { ref } from "vue";
  import { Listbox, ListboxButton, ListboxLabel, ListboxOption, ListboxOptions } from "@headlessui/vue";
  import { CheckIcon, SelectorIcon } from "@heroicons/vue/solid";

  const people = [
    { id: 1, name: "Wade Cooper" },
    // ...
  ];

  const selected = ref(people[3]);
</script>

----------------------------------------

TITLE: Applying Dark Mode CSS Classes in HTML
DESCRIPTION: Demonstrates using Tailwind CSS to apply dark mode styling with classes like 'dark:bg-black'. Elements styled this way will adjust their appearance based on dark mode settings.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v2/index.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<div class="bg-white dark:bg-black">
  <h1 class="text-gray-900 dark:text-white">Dark mode</h1>
  <p class="text-gray-500 dark:text-gray-300">The feature you've all been waiting for.</p>
</div>

----------------------------------------

TITLE: Using Arbitrary Color Values in HTML with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to apply a one-off color value outside of the defined theme using Tailwind CSS's arbitrary value syntax. It utilizes the class `bg-[#316ff6]` to set the button's background color to a specific hex value for the Facebook sign-in button.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_12

LANGUAGE: html
CODE:
<button class="bg-[#316ff6] ...">
  Sign in with Facebook
</button>

----------------------------------------

TITLE: Container Queries in Tailwind CSS
DESCRIPTION: This HTML code snippet demonstrates container query support in Tailwind CSS v4.0, using `@container`, `@sm:grid-cols-3`, and `@lg:grid-cols-4` classes.  The `@tailwindcss/container-queries` plugin is no longer needed.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_11

LANGUAGE: html
CODE:
<!-- [!code filename:HTML] -->
<!-- [!code classes:@container,@sm:grid-cols-3,@lg:grid-cols-4] -->
<div class="@container">
  <div class="grid grid-cols-1 @sm:grid-cols-3 @lg:grid-cols-4">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Using Important Modifier with Tailwind Classes
DESCRIPTION: Example demonstrating how to force a utility class to take precedence by adding the '!' modifier, which adds !important to all declarations in the class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_29

LANGUAGE: html
CODE:
<!-- prettier-ignore -->
<div class="bg-teal-500 bg-red-500!">
  <!-- ... -->
</div>

LANGUAGE: css
CODE:
.bg-red-500\! {
  background-color: var(--color-red-500) !important;
}
.bg-teal-500 {
  background-color: var(--color-teal-500);
}

----------------------------------------

TITLE: Styling Children with * Variant in Tailwind CSS
DESCRIPTION: New variant that allows styling direct children using utility classes, enabling flexible and conditional styling of nested elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-4/index.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div class="*:rounded-full *:border *:border-sky-100 *:bg-sky-50 *:px-2 *:py-0.5 dark:text-sky-300 dark:*:border-sky-500/15 dark:*:bg-sky-500/10">

LANGUAGE: jsx
CODE:
function Field({ children }) {
  return (
    <div className="data-[slot=description]:*:mt-4 ...">
      {children}
    </div>
  )
}

----------------------------------------

TITLE: Defining Custom Design Tokens with @theme
DESCRIPTION: The `@theme` directive is used to specify custom design tokens such as fonts, colors, and breakpoints for Tailwind projects, allowing for tailored styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/functions-and-directives.mdx#2025-04-18_snippet_1

LANGUAGE: css
CODE:
@theme {
  --font-display: "Satoshi", "sans-serif";

  --breakpoint-3xl: 120rem;

  --color-avocado-100: oklch(0.99 0 0);
  --color-avocado-200: oklch(0.98 0.04 113.22);
  --color-avocado-300: oklch(0.94 0.11 115.03);
  --color-avocado-400: oklch(0.92 0.19 114.08);
  --color-avocado-500: oklch(0.84 0.18 117.33);
  --color-avocado-600: oklch(0.53 0.12 118.34);

  --ease-fluid: cubic-bezier(0.3, 0, 0, 1);
  --ease-snappy: cubic-bezier(0.2, 0, 0, 1);

  /* ... */
}

----------------------------------------

TITLE: Styling based on Descendants of a Group - HTML
DESCRIPTION: This HTML snippet showcases how to use the 'group' class in Tailwind CSS. Elements styled based on the descendants of a parent with the 'group' class and 'group-has-*' variant are demonstrated. The snippet includes structured layout with images, text, and SVG icons.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_10

LANGUAGE: html
CODE:
<div class="group grid grid-cols-[32px_1fr_auto] items-center gap-x-4 px-4 py-4">
  <img
    class="size-[32px] rounded-full"
    src="https://spotlight.tailwindui.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Favatar.51a13c67.jpg&w=128&q=80"
    alt=""
  />
  <div class="font-semibold text-gray-900 dark:text-white">Spencer Sharp</div>
  <svg
    fill="none"
    viewBox="0 0 24 24"
    strokeWidth="1.5"
    stroke="currentColor"
    class="hidden size-4 group-has-[a]:block"
  >
    <path strokeLinecap="round" strokeLinejoin="round" d="M4.5 19.5l15-15m0 0H8.25m11.25 0v11.25" />
  </svg>
  <p class="col-start-2 text-sm">
    Product Designer at <a href="#" class="dark;text-blue-400 text-blue-500 underline">planeteria.tech</a>
  </p>
</div>

----------------------------------------

TITLE: 3D Transform Utilities in Tailwind CSS
DESCRIPTION: This HTML code demonstrates the use of 3D transform utilities such as `rotate-x-51` and `rotate-z-43` in Tailwind CSS v4.0.  The `transform-3d` class enables 3D transformations.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_14

LANGUAGE: html
CODE:
<!-- [!code classes:perspective-distant,transform-3d,rotate-x-51,rotate-z-43] -->
<div class="perspective-distant">
  <article class="rotate-x-51 rotate-z-43 transform-3d ...">
    <!-- ... -->
  </article>
</div>

----------------------------------------

TITLE: Using Modern CSS Features in Tailwind CSS v4.0
DESCRIPTION: Example showing how Tailwind CSS v4.0 leverages modern CSS features like cascade layers, registered custom properties, color-mix(), and logical properties for improved control and performance.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_0

LANGUAGE: css
CODE:
@layer theme, base, components, utilities;

@layer utilities {
  .mx-6 {
    margin-inline: calc(var(--spacing) * 6);
  }
  .bg-blue-500\/50 {
    background-color: color-mix(in oklab, var(--color-blue-500) 50%, transparent);
  }
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

----------------------------------------

TITLE: Adding a Linear Gradient Example - HTML
DESCRIPTION: This snippet provides an example of using linear gradients with Tailwind CSS utilities such as `bg-linear-to-r` to set a background gradient from cyan to blue, and other variations.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-image.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<div className="space-y-4">
      <div className="h-14 rounded-lg bg-linear-to-r from-cyan-500 to-blue-500"></div>
      <div className="h-14 rounded-lg bg-linear-to-t from-sky-500 to-indigo-500"></div>
      <div className="h-14 rounded-lg bg-linear-to-bl from-violet-500 to-fuchsia-500"></div>
      <div className="h-14 rounded-lg bg-linear-65 from-purple-500 to-pink-500"></div>
    </div>

----------------------------------------

TITLE: Overriding Default Colors in Tailwind CSS
DESCRIPTION: Shows how to override default Tailwind CSS colors by defining new theme variables with the same names using the @theme directive.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_12

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --color-gray-50: oklch(0.984 0.003 247.858);
  --color-gray-100: oklch(0.968 0.007 247.896);
  --color-gray-200: oklch(0.929 0.013 255.508);
  --color-gray-300: oklch(0.869 0.022 252.894);
  --color-gray-400: oklch(0.704 0.04 256.788);
  --color-gray-500: oklch(0.554 0.046 257.417);
  --color-gray-600: oklch(0.446 0.043 257.281);
  --color-gray-700: oklch(0.372 0.044 257.287);
  --color-gray-800: oklch(0.279 0.041 260.031);
  --color-gray-900: oklch(0.208 0.042 265.755);
  --color-gray-950: oklch(0.129 0.042 264.695);
}

----------------------------------------

TITLE: Creating Arbitrary Groups in Tailwind CSS
DESCRIPTION: This snippet showcases how to use arbitrary values in Tailwind CSS to create one-off group variants dynamically within Svelte, demonstrating the flexibility of Tailwind's styling system.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_16

LANGUAGE: html
CODE:
<CodeExampleGroup
  filenames={['HTML', 'Generated CSS']}
>
  <CodeBlock
    example={html`
      <!-- [!code classes:group-[.is-published]:block] -->
      <div class="group is-published">
        <div class="hidden group-[.is-published]:block">
          Published
        </div>
      </div>
    `}
  />
  <CodeBlock
    example={css`
      .group-\[\.is-published\]\:block {
        &:is(:where(.group):is(.is-published) *) {
          display: block;
        }
      }
    `}
  />
</CodeExampleGroup>

LANGUAGE: html
CODE:
<CodeExampleGroup
  filenames={['HTML', 'Generated CSS']}
>
  <CodeBlock
    example={html`
      <!-- [!code classes:_&] -->
      <div class="group">
        <div class="group-[:nth-of-type(3)_&]:block">
          <!-- ... -->
        </div>
      </div>
    `}
  />
  <CodeBlock
    example={css`
      .group-\[\:nth-of-type\(3\)_\&\]\:block {
        &:is(:nth-of-type(3) :where(.group) *) {
          display: block;
        }
      }
    `}
  />
</CodeExampleGroup>

----------------------------------------

TITLE: Implementing Pointer Media Queries with TailwindCSS
DESCRIPTION: Example showing how to use pointer-coarse variant for touch devices with a RAM selection interface. Demonstrates responsive design patterns for different input types.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_43

LANGUAGE: html
CODE:
<fieldset aria-label="Choose a memory option">
  <div class="flex items-center justify-between">
    <div>RAM</div>
    <a href="#"> See performance specs </a>
  </div>
  <div class="mt-4 grid grid-cols-6 gap-2 pointer-coarse:mt-6 pointer-coarse:grid-cols-3 pointer-coarse:gap-4">
    <label class="p-2 pointer-coarse:p-4 ...">
      <input type="radio" name="memory-option" value="4 GB" className="sr-only" />
      <span>4 GB</span>
    </label>
    <!-- ... -->
  </div>
</fieldset>

----------------------------------------

TITLE: Linear Gradient Masks on Elements
DESCRIPTION: Illustrates how to use Tailwind CSS's linear gradient mask utilities such as `mask-t-from-50%` and `mask-r-from-30%` to apply directional gradient masks on images. The masks define where the gradient starts and ends on each side, requiring a background image and appropriate mask classes to function. It delivers masked images revealing various opacities based on the side masking positions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="mask-t-from-50% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-r-from-30% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-l-from-50% mask-l-to-90% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-b-from-20% mask-b-to-80% bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Applying Tailwind Variants in CSS
DESCRIPTION: This CSS snippet demonstrates how to use the `@variant` directive to apply a Tailwind variant (dark) within custom CSS. It changes the background color to black when the dark variant is active, leveraging the `prefers-color-scheme` media query.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_4

LANGUAGE: css
CODE:
/* [!code filename:app.css] */
.my-element {
  background: white;

  /* [!code highlight:4] */
  @variant dark {
    background: black;
  }
}

LANGUAGE: css
CODE:
/* [!code filename:Compiled CSS] */
.my-element {
  background: white;

  /* [!code highlight:4] */
  @media (prefers-color-scheme: dark) {
    background: black;
  }
}

----------------------------------------

TITLE: Translating Elements on the y-axis Using Tailwind CSS
DESCRIPTION: This code illustrates the application of translation utilities (`translate-y-<number>` and `translate-y-<fraction>`) to reposition elements vertically. It provides visual representations of elements with applied translation classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/translate.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:-translate-y-4,translate-y-2,translate-y-1/2] -->
<img class="-translate-y-4 ..." src="/img/mountains.jpg" />
<img class="translate-y-2 ..." src="/img/mountains.jpg" />
<img class="translate-y-1/2 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Using Breakpoints in Tailwind CSS
DESCRIPTION: Demonstrates how to use breakpoint prefixes to apply styles at different screen sizes. The example shows a grid layout that changes at the 'sm' breakpoint.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<div class="grid grid-cols-2 sm:grid-cols-3">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Conditional Class Application in React with Tailwind
DESCRIPTION: An example of conditionally applying Tailwind classes in a React component based on props, which helps prevent class conflicts by ensuring only the desired class is applied.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_28

LANGUAGE: jsx
CODE:
export function Example({ gridLayout }) {
  return <div className={gridLayout ? "grid" : "flex"}>{/* ... */}</div>;
}

----------------------------------------

TITLE: Customizing Theme Variables in TailwindCSS
DESCRIPTION: Demonstrates how to customize design tokens like colors, fonts, breakpoints, and animation curves using the @theme directive.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_0

LANGUAGE: css
CODE:
@theme {
  --font-display: "Satoshi", "sans-serif";

  --breakpoint-3xl: 120rem;

  --color-avocado-100: oklch(0.99 0 0);
  --color-avocado-200: oklch(0.98 0.04 113.22);
  --color-avocado-300: oklch(0.94 0.11 115.03);
  --color-avocado-400: oklch(0.92 0.19 114.08);
  --color-avocado-500: oklch(0.84 0.18 117.33);
  --color-avocado-600: oklch(0.53 0.12 118.34);

  --ease-fluid: cubic-bezier(0.3, 0, 0, 1);
  --ease-snappy: cubic-bezier(0.2, 0, 0, 1);

  /* ... */
}

----------------------------------------

TITLE: Styling Elements with :has() in Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates how to use the has-* variant in Tailwind CSS to style a label element based on the checked state of its radio input. The classes apply different background colors, text colors, and ring styles when the input is checked, with separate styles for light and dark modes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_9

LANGUAGE: HTML
CODE:
<label
  class="has-checked:bg-indigo-50 has-checked:text-indigo-900 has-checked:ring-indigo-200 dark:has-checked:bg-indigo-950 dark:has-checked:text-indigo-200 dark:has-checked:ring-indigo-900 ..."
>
  <svg fill="currentColor">
    <!-- ... -->
  </svg>
  Google Pay
</label>

----------------------------------------

TITLE: Adding a Simple Custom Utility in CSS
DESCRIPTION: This CSS snippet shows how to add a custom utility using the `@utility` directive. It creates a `content-auto` utility that sets the `content-visibility` property to `auto`, allowing users to apply this class in their HTML.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_6

LANGUAGE: css
CODE:
/* [!code filename:CSS] */
@utility content-auto {
  content-visibility: auto;
}

----------------------------------------

TITLE: React Transition Component Implementation
DESCRIPTION: Example of implementing fade in/out transitions using the @tailwindui/react Transition component. Demonstrates state management with useState hook and transition configuration using Tailwind utility classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/utility-friendly-transitions-with-tailwindui-react/index.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
import { Transition } from "@tailwindui/react";
import { useState } from "react";

function MyComponent() {
  const [isOpen, setIsOpen] = useState(false);

  return (
    <div>
      <button onClick={() => setIsOpen(!isOpen)}>Toggle</button>
      <Transition
        show={isOpen}
        enter="transition-opacity duration-75"
        enterFrom="opacity-0"
        enterTo="opacity-100"
        leave="transition-opacity duration-150"
        leaveFrom="opacity-100"
        leaveTo="opacity-0"
      >
        {/* Will fade in and out */}
      </Transition>
    </div>
  );
}

----------------------------------------

TITLE: Creating Sticky Headers in a Scrollable List with Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates how to create sticky section headers within a scrollable list using Tailwind CSS utilities. The 'sticky' and 'top-0' classes are applied to header elements to achieve the sticky positioning effect.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/position.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<div>
  <div>
    <div class="sticky top-0 ...">A</div>
    <div>
      <div>
        <img src="/img/andrew.jpg" />
        <strong>Andrew Alfred</strong>
      </div>
      <div>
        <img src="/img/aisha.jpg" />
        <strong>Aisha Houston</strong>
      </div>
      <!-- ... -->
    </div>
  </div>
  <div>
    <div class="sticky top-0">B</div>
    <div>
      <div>
        <img src="/img/bob.jpg" />
        <strong>Bob Alfred</strong>
      </div>
      <!-- ... -->
    </div>
  </div>
  <!-- ... -->
</div>

----------------------------------------

TITLE: Default Tailwind CSS Theme Variables
DESCRIPTION: This snippet demonstrates the structure of the default theme variables in Tailwind CSS, including fonts, colors, and shadows.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_9

LANGUAGE: css
CODE:
@theme {
  /* prettier-ignore */
  --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;

  --color-red-50: oklch(0.971 0.013 17.38);
  --color-red-100: oklch(0.936 0.032 17.717);
  --color-red-200: oklch(0.885 0.062 18.334);
  /* ... */

  --shadow-2xs: 0 1px rgb(0 0 0 / 0.05);
  --shadow-xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow-sm: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  /* ... */
}

----------------------------------------

TITLE: Parent State Styling with Group Variants in HTML
DESCRIPTION: This snippet illustrates how to use the `group` class to style an element based on the state of its parent. The colors of text and icon change when the parent element is hovered over, showcasing the use of Tailwind CSS group variants.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_14

LANGUAGE: html
CODE:
<a href="#" class="group mx-auto block max-w-xs space-y-3 rounded-lg bg-white p-4 shadow-lg ring-1 ring-gray-900/5 hover:bg-sky-500 hover:ring-sky-500 dark:bg-white/5 dark:ring-white/10">
  <div class="flex items-center space-x-3">
    <svg class="h-6 w-6 stroke-sky-500 group-hover:stroke-white" fill="none" viewBox="0 0 24 24">
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
        d="M11 19H6.931A1.922 1.922 0 015 17.087V8h12.069C18.135 8 19 8.857 19 9.913V11"
      />
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
        d="M14 7.64L13.042 6c-.36-.616-1.053-1-1.806-1H7.057C5.921 5 5 5.86 5 6.92V11M17 15v4M19 17h-4"
      />
    </svg>
    <div class="text-sm font-semibold text-gray-900 group-hover:text-white dark:text-white">New project</div>
  </div>
  <p class="text-sm text-gray-500 group-hover:text-white dark:text-gray-400">
    Create a new project from a variety of starting templates.
  </p>
</a>

----------------------------------------

TITLE: Using the Custom Utility in HTML
DESCRIPTION: This HTML snippet demonstrates how to use the custom utility created with the `@utility` directive. It applies the `content-auto` class to a div element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<!-- [!code filename:HTML] -->
<!-- [!code classes:content-auto] -->
<div class="content-auto">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Applying Variants to Custom Utility in HTML
DESCRIPTION: This HTML snippet shows how to apply variants to custom utilities within HTML. It adds a `hover:content-auto` class to a div element so that when the element is hovered over, the custom utility will be applied.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_8

LANGUAGE: html
CODE:
<!-- [!code filename:HTML] -->
<!-- [!code classes:hover:content-auto] -->
<div class="hover:content-auto">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Using wrap-anywhere Utility in Flex Containers in HTML
DESCRIPTION: This code example illustrates the 'wrap-anywhere' utility, which allows mid-word line breaks within flex containers. It is suitable for use cases where 'wrap-break-word' behaves unexpectedly. Requires Tailwind CSS v4.1. The output consists of HTML elements styled with Tailwind classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<!-- [!code classes:wrap-anywhere,wrap-break-word] -->
<div class="flex max-w-sm">
  <img class="size-16 rounded-full" src="/img/profile.jpg" />
  <div class="wrap-break-word">
    <p class="font-medium">Jay Riemenschneider</p>
    <p>jason.riemenschneider@vandelayindustries.com</p>
  </div>
</div>
<div class="flex max-w-sm">
  <img class="size-16 rounded-full" src="/img/profile.jpg" />
  <div class="wrap-anywhere">
    <p class="font-medium">Jay Riemenschneider</p>
    <p>jason.riemenschneider@vandelayindustries.com</p>
  </div>
</div>

----------------------------------------

TITLE: Focus-Within State Example in TailwindCSS
DESCRIPTION: Demonstrates applying styles when an element or its descendants receive focus.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_83

LANGUAGE: html
CODE:
<div class="focus-within:shadow-lg ...">
  <input type="text" />
</div>

----------------------------------------

TITLE: Basic Letter Spacing Example in HTML with Tailwind CSS
DESCRIPTION: Demonstrates the basic usage of Tailwind's letter spacing utilities including tracking-tight, tracking-normal, and tracking-wide classes to control text spacing.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/letter-spacing.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- [!code classes:tracking-tight,tracking-normal,tracking-wide] -->
<p class="tracking-tight ...">The quick brown fox ...</p>
<p class="tracking-normal ...">The quick brown fox ...</p>
<p class="tracking-wide ...">The quick brown fox ...</p>

----------------------------------------

TITLE: Customizing Inset Shadow in Tailwind CSS Theme (JSX)
DESCRIPTION: Shows how to customize the inset shadow theme in Tailwind CSS. This component demonstrates adding a custom inset shadow named 'md' with a specific inset shadow value to the theme.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_18

LANGUAGE: jsx
CODE:
<CustomizingYourTheme
  utility="inset-shadow"
  themeKey="inset-shadow"
  name="inset box shadow"
  customName="md"
  customValue="inset 0 2px 3px rgba(0, 0, 0, 0.25)"
/>

----------------------------------------

TITLE: React Component Example with Tailwind CSS Drop Shadow Colors
DESCRIPTION: This JSX snippet showcases a React component utilizing Tailwind CSS to customize the color of drop shadows using classes like `drop-shadow-cyan-500/50` and `drop-shadow-indigo-500/50`. The `fill-cyan-500` and `fill-indigo-500` classes set the fill color of the SVG.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-drop-shadow.mdx#2025-04-18_snippet_6

LANGUAGE: JSX
CODE:
"{
    <div className=\"grid grid-cols-2 items-end p-8 max-sm:grid-cols-1\">\n      <div className=\"flex flex-col items-center\">\n        <p className=\"mb-3 text-center font-mono text-xs font-medium text-gray-500\">drop-shadow-cyan-500/50</p>\n        <svg className=\"size-28 text-gray-950/100 drop-shadow-xl drop-shadow-cyan-500/50\" viewBox=\"0 0 84 84\">\n          <path\n            d=\"M22.0992 77L2.19922 42.5L22.0992 8H61.8992L81.7992 42.5L61.8992 77H22.0992Z\"\n            className=\"fill-cyan-500\"\n          />\n        </svg>\n      </div>\n      <div className=\"flex flex-col items-center\">\n        <p className=\"mb-3 text-center font-mono text-xs font-medium text-gray-500\">drop-shadow-indigo-500/50</p>\n        <svg className=\"size-28 text-gray-950/100 drop-shadow-xl drop-shadow-indigo-500/50\" viewBox=\"0 0 84 84\">\n          <path\n            d=\"M22.0992 77L2.19922 42.5L22.0992 8H61.8992L81.7992 42.5L61.8992 77H22.0992Z\"\n            className=\"fill-indigo-500\"\n          />\n        </svg>\n      </div>\n    </div>
  }"

----------------------------------------

TITLE: Rendering a Team List with Headless UI
DESCRIPTION: This snippet illustrates how to render a list of team members using a React component. It employs the Headless UI library for dropdown functionality and provides an interactive UI with transitions. The snippet shows how to manage dynamic data from an array of member objects, ensuring each list item can display information properly. The expected input is an array of objects with 'name', 'email', and 'image' properties, and the output is a structured list of team members rendered on the UI.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/building-react-and-vue-support-for-tailwind-ui/index.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
import { Menu, Transition } from "@headlessui/react";
import { DotsVerticalIcon } from "@heroicons/react/solid";
import { Fragment } from "react";

const people = [
  {
    name: "Calvin Hawkins",
    email: "calvin.hawkins@example.com",
    image:
      "https://images.unsplash.com/photo-1491528323818-fdd1faba62cc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80",
  },
  {
    name: "Kristen Ramos",
    email: "kristen.ramos@example.com",
    image:
      "https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80",
  },
  {
    name: "Ted Fox",
    email: "ted.fox@example.com",
    image:
      "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80",
  },
];

export default function Example() {
  return (
    <ul className="divide-y divide-gray-200">
      {people.map((person) => (
        <li key={person.email} className="flex py-4">
          <img className="h-10 w-10 rounded-full" src={person.image.src} alt="" />
          <div className="ml-3">
            <p className="text-sm font-medium text-gray-900">{person.name}</p>
            <p className="text-sm text-gray-500">{person.email}</p>
          </div>
          <Menu as="div" className="relative ml-3 inline-block text-left">
            {({ open }) => (
              <>
                <div>
                  <Menu.Button className="flex items-center rounded-full bg-gray-100 text-gray-400 hover:text-gray-600 focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-gray-100 focus:outline-none">
                    <span className="sr-only">Open options</span>
                    <DotsVerticalIcon className="h-5 w-5" aria-hidden="true" />
                  </Menu.Button>
                </div>

                <Transition
                  show={open}
                  as={Fragment}
                  enter="transition ease-out duration-100"
                  enterFrom="transform opacity-0 scale-95"
                  enterTo="transform opacity-100 scale-100"
                  leave="transition ease-in duration-75"
                  leaveFrom="transform opacity-100 scale-100"
                  leaveTo="transform opacity-0 scale-95"
                >
                  <Menu.Items
                    static
                    className="ring-opacity-5 absolute right-0 mt-2 w-56 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black focus:outline-none"
                  >
                    <div className="py-1">
                      <Menu.Item>
                        {({ active }) => (
                          <a
                            href="#"
                            className={classNames(
                              active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                              "block px-4 py-2 text-sm",
                            )}
                          >
                            View details
                          </a>
                        )}
                      </Menu.Item>
                      <Menu.Item>
                        {({ active }) => (
                          <a
                            href="#"
                            className={classNames(
                              active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                              "block px-4 py-2 text-sm",
                            )}
                          >
                            Send message
                          </a>
                        )}
                      </Menu.Item>
                    </div>
                  </Menu.Items>
                </Transition>
              </>
            )}
          </Menu>
        </li>
      ))}
    </ul>
  );
}

----------------------------------------

TITLE: Using Negative Scale Values in Tailwind CSS
DESCRIPTION: Shows how to use negative scale values to mirror and scale down elements. Includes examples of negative scaling on both x and y axes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scale.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<img class="-scale-x-75 ..." src="/img/mountains.jpg" />
<img class="-scale-100 ..." src="/img/mountains.jpg" />
<img class="-scale-y-125 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Implementing Scroll-Triggered Animations in React with Framer Motion
DESCRIPTION: This snippet demonstrates how to use custom components (FadeIn and FadeInStagger) built on top of Framer Motion to create scroll-triggered entrance animations for a client list section.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2023-08-07-meet-studio-our-new-agency-template/index.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
function Clients() {
  return (
    <div className="mt-24 rounded-4xl bg-neutral-950 py-20 sm:mt-32 sm:py-32 lg:mt-56">
      <Container>
        <FadeIn className="flex items-center gap-x-8">
          <h2 className="font-display text-center text-sm font-semibold tracking-wider text-white sm:text-left">
            We've worked with hundreds of amazing people
          </h2>
          <div className="h-px flex-auto bg-neutral-800" />
        </FadeIn>
        <FadeInStagger faster>
          <ul role="list" className="mt-10 grid grid-cols-2 gap-x-8 gap-y-10 lg:grid-cols-4">
            {clients.map(([client, logo]) => (
              <li key={client}>
                <FadeIn>
                  <Image src={logo} alt={client} unoptimized />
                </FadeIn>
              </li>
            ))}
          </ul>
        </FadeInStagger>
      </Container>
    </div>
  );
}

----------------------------------------

TITLE: Basic Container Query Usage
DESCRIPTION: Demonstrates basic container query implementation using @container class and responsive variants.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_12

LANGUAGE: html
CODE:
<div class="@container">
  <div class="flex flex-col @md:flex-row">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Styling Autofilled Inputs with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the autofill variant in Tailwind CSS to style an input when it has been autofilled by the browser. It applies a yellow background to autofilled inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_105

LANGUAGE: html
CODE:
<input class="autofill:bg-yellow-200 ..." />

----------------------------------------

TITLE: Styling Hover States with Tailwind CSS
DESCRIPTION: Demonstrates how to use the hover: prefix to apply styles on hover. The example shows a button that changes background color when hovered.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<button class="bg-sky-500 hover:bg-sky-700 ...">Save changes</button>

----------------------------------------

TITLE: Stacking Arbitrary Variants in Tailwind CSS
DESCRIPTION: Demonstrates how to stack arbitrary variants with built-in variants for more complex selectors.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_67

LANGUAGE: svelte
CODE:
<ul role="list">
  {#each items as item}
    <li class="[&.is-dragging]:active:cursor-grabbing">{item}</li>
  {/each}
</ul>

----------------------------------------

TITLE: Sorting Dynamic Variants with matchVariant in Tailwind CSS
DESCRIPTION: This JavaScript snippet demonstrates how to use the `sort` function when defining a dynamic variant using `matchVariant`. It sorts the generated CSS based on the parsed integer values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_24

LANGUAGE: javascript
CODE:
// [!code word:js]
matchVariant("min", (value) => `@media (min-width: ${value})`, {
  sort(a, z) {
    return parseInt(a) - parseInt(z);
  },
});

----------------------------------------

TITLE: Implementing Horizontal Scrolling with Tailwind CSS
DESCRIPTION: This snippet shows how to create a horizontally scrollable container using the 'overflow-x-auto' utility class from Tailwind CSS. It's useful for displaying a series of items that may exceed the container's width.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overflow.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<div class="overflow-x-auto ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Arbitrary Breakpoint Values in HTML
DESCRIPTION: Shows how to use arbitrary breakpoint values with min and max variants for custom responsive styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_11

LANGUAGE: html
CODE:
<div class="max-[600px]:bg-sky-300 min-[320px]:text-center">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Targeting a Specific Breakpoint Range in HTML
DESCRIPTION: Demonstrates how to apply a utility class only within a specific breakpoint range by combining responsive and max-* variants.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div class="md:max-xl:flex">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Creating Pill Buttons in Tailwind CSS with HTML
DESCRIPTION: This snippet shows how to use the 'rounded-full' utility class in Tailwind CSS to create pill-shaped buttons. The code demonstrates the application of the 'rounded-full' class to a button element to achieve a circular border radius, providing a distinctive pill appearance. Requires Tailwind CSS for styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_10

LANGUAGE: html
CODE:
<button class="rounded-full ...">Save Changes</button>

----------------------------------------

TITLE: Overriding Tailwind CSS Default Theme Variable
DESCRIPTION: This snippet shows how to override a default theme variable, specifically the small breakpoint size.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_12

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --breakpoint-sm: 30rem;
}

----------------------------------------

TITLE: Defining Columns by Width Using Tailwind CSS in HTML
DESCRIPTION: This HTML code demonstrates setting the column width with Tailwind CSS utilities like 'columns-xs' and 'columns-sm'. The example adjusts dynamically to display ideal column sizes depending on the viewport, achieving responsive design without requiring extensive custom media queries.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/columns.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<div class="columns-3xs ...">
  <img class="aspect-3/2 ..." src="/img/mountains-1.jpg" />
  <img class="aspect-square ..." src="/img/mountains-2.jpg" />
  <img class="aspect-square ..." src="/img/mountains-3.jpg" />
  <!-- ... -->
</div>

----------------------------------------

TITLE: Extending Preflight with Custom Base Styles in CSS
DESCRIPTION: Shows how to add custom base styles on top of Preflight by using the @layer base directive to style headings and links.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_12

LANGUAGE: CSS
CODE:
@layer base {
  h1 {
    font-size: var(--text-2xl);
  }
  h2 {
    font-size: var(--text-xl);
  }
  h3 {
    font-size: var(--text-lg);
  }
  a {
    color: var(--color-blue-600);
    text-decoration-line: underline;
  }
}

----------------------------------------

TITLE: Implementing Enhanced State Attributes in React
DESCRIPTION: This snippet demonstrates how to use React Aria hooks to add enhanced state attributes like `data-hover`, `data-active`, and `data-focus` to components to improve accessibility and usability in Headless UI.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v2/index.mdx#2025-04-18_snippet_5



----------------------------------------

TITLE: Implementing Combobox with React
DESCRIPTION: Example of implementing a filterable Combobox component using Headless UI in React. Demonstrates basic string comparison filtering with a list of people names.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-5/index.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { useState } from 'react'
import { Combobox } from '@headlessui/react'

const people = [
  'Wade Cooper',
  'Arlene McCoy',
  'Devon Webb',
  'Tom Cook',
  'Tanya Fox',
  'Hellen Schmidt',
]

function MyCombobox() {
  const [selectedPerson, setSelectedPerson] = useState(people[0])
  const [query, setQuery] = useState('')

  const filteredPeople =
    query === ''
      ? people
      : people.filter((person) => {
          return person.toLowerCase().includes(query.toLowerCase())
        })

  return (
    <Combobox value={selectedPerson} onChange={setSelectedPerson}>
      <Combobox.Input onChange={(event) => setQuery(event.target.value)} />
      <Combobox.Options>
        {filteredPeople.map((person) => (
          <Combobox.Option key={person} value={person}>
            {person}
          </Combobox.Option>
        ))}
      </Combobox.Options>
    </Combobox>
  )
}

----------------------------------------

TITLE: HTML for basic box-shadow Tailwind CSS example
DESCRIPTION: This HTML snippet shows how to apply `shadow-md`, `shadow-lg`, and `shadow-xl` classes in Tailwind CSS. Each div element has a different shadow class to create varying shadow effects.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code classes:shadow-md,shadow-lg,shadow-xl] -->
<div class="shadow-md ..."></div>
<div class="shadow-lg ..."></div>
<div class="shadow-xl ..."></div>

----------------------------------------

TITLE: Custom Component Styling with Tailwind Directives
DESCRIPTION: Shows how to create custom component styles for Select2 using Tailwind's @apply directive in a separate CSS file.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_2

LANGUAGE: css
CODE:
.select2-dropdown {
  @apply rounded-b-lg shadow-md;
}
.select2-search {
  @apply rounded border border-gray-300;
}
.select2-results__group {
  @apply text-lg font-bold text-gray-900;
}
/* ... */

----------------------------------------

TITLE: Size Utilities for Width and Height in Tailwind CSS
DESCRIPTION: Introduces `size-*` utility that simultaneously sets width and height, simplifying avatar and square element styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-4/index.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<img class="size-10" ...>
<img class="size-12" ...>
<img class="size-14" ...>

----------------------------------------

TITLE: Adding Custom Utilities with @utility
DESCRIPTION: The `@utility` directive allows developers to define custom utility classes that can employ Tailwind variants, facilitating modular style management.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/functions-and-directives.mdx#2025-04-18_snippet_3

LANGUAGE: css
CODE:
@utility tab-4 {
  tab-size: 4;
}

----------------------------------------

TITLE: Basic Transition Example in HTML with Tailwind CSS
DESCRIPTION: This example demonstrates how to use Tailwind CSS transition utilities on a button element. It includes classes for transition, delay, duration, and hover effects.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-property.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<button class="bg-blue-500 transition delay-150 duration-300 ease-in-out hover:-translate-y-1 hover:scale-110 hover:bg-indigo-500 ...">
  Save Changes
</button>

----------------------------------------

TITLE: Example Usage of Color Palette in JSX
DESCRIPTION: This snippet presents a structured example of how to utilize various shades of the sky color from the Tailwind CSS palette. It creates a responsive grid layout to visually display the colors with corresponding labels.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
<Example className="flex justify-center">
  <div className="mx-auto inline-grid max-w-lg grid-cols-1 justify-center gap-3 sm:grid-cols-11 sm:flex-row">
    <div className="flex items-center gap-1.5 sm:flex-col">
      <div className="bg-sky-50"></div>
      <p className="text-center font-mono text-xs text-gray-600 dark:text-gray-400">50</p>
    </div>
    <div className="flex items-center gap-1.5 sm:flex-col">
      <div className="bg-sky-100"></div>
      <p className="text-center font-mono text-xs text-gray-600 dark:text-gray-400">100</p>
    </div>
    <div className="flex items-center gap-1.5 sm:flex-col">
      <div className="bg-sky-200"></div>
      <p className="text-center font-mono text-xs text-gray-600 dark:text-gray-400">200</p>
    </div>
    <div className="flex items-center gap-1.5 sm:flex-col">
      <div className="bg-sky-300"></div>
      <p className="text-center font-mono text-xs text-gray-600 dark:text-gray-400">300</p>
    </div>
    <div className="flex items-center gap-1.5 sm:flex-col">
      <div className="bg-sky-400"></div>
      <p className="text-center font-mono text-xs text-gray-600 dark:text-gray-400">400</p>
    </div>
    <div className="flex items-center gap-1.5 sm:flex-col">
      <div className="bg-sky-500"></div>
      <p className="text-center font-mono text-xs text-gray-600 dark:text-gray-400">500</p>
    </div>
    <div className="flex items-center gap-1.5 sm:flex-col">
      <div className="bg-sky-600"></div>
      <p className="text-center font-mono text-xs text-gray-600 dark:text-gray-400">600</p>
    </div>
    <div className="flex items-center gap-1.5 sm:flex-col">
      <div className="bg-sky-700"></div>
      <p className="text-center font-mono text-xs text-gray-600 dark:text-gray-400">700</p>
    </div>
    <div className="flex items-center gap-1.5 sm:flex-col">
      <div className="bg-sky-800"></div>
      <p className="text-center font-mono text-xs text-gray-600 dark:text-gray-400">800</p>
    </div>
    <div className="flex items-center gap-1.5 sm:flex-col">
      <div className="bg-sky-900"></div>
      <p className="text-center font-mono text-xs text-gray-600 dark:text-gray-400">900</p>
    </div>
    <div className="flex items-center gap-1.5 sm:flex-col">
      <div className="bg-sky-950"></div>
      <p className="text-center font-mono text-xs text-gray-600 dark:text-gray-400">950</p>
    </div>
  </div>
</Example>

----------------------------------------

TITLE: Basic Example Using Transition Utilities - JSX
DESCRIPTION: This snippet showcases a basic example using the 'transition-discrete' utility in a React component. It visually demonstrates how transitions can be triggered by changing properties, utilizing checkbox inputs to manage state.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-behavior.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
  <div className="flex flex-col justify-around gap-8 text-sm leading-6 font-bold text-white sm:flex-row sm:gap-0">
      <div className="flex shrink-0 flex-col items-center sm:w-1/2">
        <label className="peer mb-3 inline-flex gap-2 text-center font-mono text-xs font-medium text-gray-500 select-none dark:text-gray-400">
          <input type="checkbox" defaultChecked />
          transition-normal
        </label>
        <button className="hidden rounded-md bg-violet-500 px-4 py-2 text-sm font-semibold text-white transition-all transition-normal duration-300 not-peer-has-checked:opacity-0 peer-has-checked:block">
          I hide
        </button>
      </div>
      <div className="flex shrink-0 flex-col items-center sm:w-1/2">
        <label className="peer mb-3 inline-flex gap-2 text-center font-mono text-xs font-medium text-gray-500 select-none dark:text-gray-400">
          <input type="checkbox" defaultChecked />
          transition-discrete
        </label>
        <button className="hidden rounded-md bg-violet-500 px-4 py-2 text-sm font-semibold text-white transition-all transition-discrete duration-300 not-peer-has-checked:opacity-0 peer-has-checked:block">
          I fade out
        </button>
      </div>
    </div>

----------------------------------------

TITLE: Generated CSS for Dynamic Group Variant
DESCRIPTION: This CSS snippet shows the generated CSS for the dynamic group variant. The `display: block` style is applied when the parent has both `group` and `is-published` classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_19

LANGUAGE: css
CODE:
".group.is-published .group-\[\.is-published\]\:block {
        display: block;
      }"

----------------------------------------

TITLE: Referencing Color Variables in Tailwind CSS Theme
DESCRIPTION: Use @theme inline to define color variables that reference other existing color variables, supporting dynamic theme configurations
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_15

LANGUAGE: css
CODE:
@import "tailwindcss";

:root {
  --acme-canvas-color: oklch(0.967 0.003 264.542);
}

[data-theme="dark"] {
  --acme-canvas-color: oklch(0.21 0.034 264.665);
}

@theme inline {
  --color-canvas: var(--acme-canvas-color);
}

----------------------------------------

TITLE: Example of Using Subgrid Utility in JSX
DESCRIPTION: This snippet demonstrates how to use the 'grid-cols-subgrid' utility to reference parent column definitions within a grid layout using JSX.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-template-columns.mdx#2025-04-18_snippet_3

LANGUAGE: javascript
CODE:
<Example>
  {
    <div className="grid grid-cols-4 gap-4 rounded-lg text-center font-mono text-sm leading-6 font-bold text-white">
      <div className="rounded-lg bg-indigo-300 p-4 dark:bg-indigo-900">01</div>
      <div className="rounded-lg bg-indigo-300 p-4 dark:bg-indigo-900">02</div>
      <div className="rounded-lg bg-indigo-300 p-4 dark:bg-indigo-900">03</div>
      <div className="rounded-lg bg-indigo-300 p-4 dark:bg-indigo-900">04</div>
      <div className="rounded-lg bg-indigo-300 p-4 dark:bg-indigo-900">05</div>
      <div className="col-span-3 grid grid-cols-subgrid gap-4">
        <Stripes border className="rounded-lg p-4" />
        <div className="rounded-lg bg-pink-500 p-4">06</div>
        <Stripes border className="rounded-lg p-4" />
      </div>
    </div>
  }
</Example>

----------------------------------------

TITLE: Closing Popover Components in Vue with Headless UI
DESCRIPTION: Example showing how to close a Popover component in Vue by using PopoverButton within a PopoverPanel. Shows the component structure and import/registration pattern.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-4/index.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<template>
  <Popover>
    <PopoverButton>Solutions</PopoverButton>

    <PopoverPanel>
      <PopoverButton :as="MyLink" href="/insights">Insights</PopoverButton>
      <!-- ... -->
    </PopoverPanel>
  </Popover>
</template>

<script>
  import { Popover, PopoverButton, PopoverPanel } from '@headlessui/vue'
  import MyLink from './MyLink'

  export default {
    components: { Popover, PopoverButton, PopoverPanel, MyLink },
  }
</script>

----------------------------------------

TITLE: React Example: Negative z-index Values
DESCRIPTION: This React code uses negative z-index values in Tailwind CSS. It demonstrates how to use the `-z-10` class to position an element behind other elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/z-index.mdx#2025-04-18_snippet_2

LANGUAGE: typescript
CODE:
{
    <div className="isolate flex justify-center -space-x-3 font-mono text-sm leading-6 font-bold text-white">
      <div className="flex size-16 items-center justify-center rounded-full bg-fuchsia-500 shadow-lg outline-2 outline-white dark:outline-[#11121E]">
        01
      </div>
      <div className="flex size-16 items-center justify-center rounded-full bg-fuchsia-500 shadow-lg outline-2 outline-white dark:outline-[#11121E]">
        02
      </div>
      <div className="-z-10 flex size-16 items-center justify-center rounded-full bg-fuchsia-500 shadow-lg outline-2 outline-white dark:outline-[#11121E]">
        03
      </div>
      <div className="flex size-16 items-center justify-center rounded-full bg-fuchsia-500 shadow-lg outline-2 outline-white dark:outline-[#11121E]">
        04
      </div>
      <div className="flex size-16 items-center justify-center rounded-full bg-fuchsia-500 shadow-lg outline-2 outline-white dark:outline-[#11121E]">
        05
      </div>
    </div>
  }

----------------------------------------

TITLE: Motion-Safe Styling with Tailwind CSS
DESCRIPTION: This snippet demonstrates the use of the 'motion-safe' variant in Tailwind CSS. It applies transition and transform effects only when the user has not requested reduced motion, providing a more efficient way to handle motion preferences.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_38

LANGUAGE: html
CODE:
<button class="motion-safe:transition motion-safe:hover:-translate-x-0.5 ...">Save changes</button>

----------------------------------------

TITLE: HTML Per-Side Border Color Utilities
DESCRIPTION: This HTML snippet demonstrates the new per-side border color utilities in Tailwind CSS.  It uses `border-t-blue-500`, `border-r-pink-500`, `border-b-green-500`, and `border-l-yellow-500` classes to set the color of each border side individually.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_24

LANGUAGE: html
CODE:
<div class="border-2 border-t-blue-500 border-r-pink-500 border-b-green-500 border-l-yellow-500">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Adjusting Color Opacity with --alpha() Function in Tailwind CSS
DESCRIPTION: Illustrates the use of the --alpha() function to quickly adjust color opacity when referencing Tailwind CSS color variables in custom CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_10

LANGUAGE: css
CODE:
@import "tailwindcss";

@layer components {
  .DocSearch-Hit--Result {
    background-color: --alpha(var(--color-gray-950) / 10%);
  }
}

----------------------------------------

TITLE: Feature Detection with @supports in TailwindCSS
DESCRIPTION: Shows various ways to use @supports variants for progressive enhancement based on browser feature support.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_47

LANGUAGE: html
CODE:
<div class="flex supports-[display:grid]:grid ...">
  <!-- ... -->
</div>

LANGUAGE: html
CODE:
<div class="bg-black/75 supports-backdrop-filter:bg-black/25 supports-backdrop-filter:backdrop-blur ...">
  <!-- ... -->
</div>

LANGUAGE: html
CODE:
<div class="not-supports-[display:grid]:flex">
  <!-- ... -->
</div>

----------------------------------------

TITLE: React JSX Example with Tailwind CSS Rounded Sides Classes
DESCRIPTION: This JSX code snippet demonstrates the use of various Tailwind CSS rounded classes for rounding specific sides of an element: top (rounded-t-lg), right (rounded-r-lg), bottom (rounded-b-lg), and left (rounded-l-lg).  Flex utility classes are used to create a row of divs, each with a different rounded side and background color.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_5

LANGUAGE: jsx
CODE:
{
    <div className="flex flex-col items-center justify-around gap-4 text-center text-sm leading-6 font-bold text-white sm:flex-row">
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-t-lg</p>
        <div className="size-16 rounded-t-lg bg-blue-500 p-4"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-r-lg</p>
        <div className="size-16 rounded-r-lg bg-blue-500 p-4"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-b-lg</p>
        <div className="size-16 rounded-b-lg bg-blue-500 p-4"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-l-lg</p>
        <div className="size-16 rounded-l-lg bg-blue-500 p-4"></div>
      </div>
    </div>
  }

----------------------------------------

TITLE: Loading Post Previews with getStaticProps in Next.js
DESCRIPTION: This code snippet demonstrates how to load post previews using `getStaticProps` in a Next.js application. The posts are mapped to objects containing a title and link. The key dependency here is the `getAllPostPreviews` function, which retrieves all post previews. The function returns the post data as props for the page.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/building-the-tailwind-blog/index.mdx#2025-04-18_snippet_7

LANGUAGE: JavaScript
CODE:
import getAllPostPreviews from "@/getAllPostPreviews";

export async function getStaticProps() {
  return {
    props: {
      posts: getAllPostPreviews().map((post) => ({
        title: post.module.meta.title,
        link: post.link.substr(1),
      })),
    },
  };
}

----------------------------------------

TITLE: Reduced Motion Styling with Tailwind CSS
DESCRIPTION: This example shows how to handle reduced motion preferences using Tailwind CSS. It hides an animated spinner when the user has requested reduced motion, using the 'motion-reduce' variant.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_37

LANGUAGE: html
CODE:
<button type="button" class="bg-indigo-500 ..." disabled>
  <svg class="animate-spin motion-reduce:hidden ..." viewBox="0 0 24 24"><!-- ... --></svg>
  Processing...
</button>

----------------------------------------

TITLE: Toggling Dark Mode with JavaScript
DESCRIPTION: This JavaScript snippet provides a way to switch between light and dark modes or respect the system theme preference using `window.matchMedia()`. It updates the `html` class based on the theme stored in localStorage or falls back to the OS setting, allowing flexible theme control on the client-side.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/dark-mode.mdx#2025-04-18_snippet_3

LANGUAGE: js
CODE:
document.documentElement.classList.toggle(\n  \"dark\",\n  localStorage.theme === \"dark\" ||\n    (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches),\n);\n\nlocalStorage.theme = \"light\";\n\nlocalStorage.theme = \"dark\";\n\nlocalStorage.removeItem(\"theme\");

----------------------------------------

TITLE: Creating Accessible Dropdown Menu with Headless UI React
DESCRIPTION: Example implementation of a dropdown menu component using @headlessui/react, demonstrating keyboard navigation support, ARIA attributes, and Tailwind CSS styling integration
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-unstyled-accessible-ui-components/index.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { Menu } from "@headlessui/react";

function MyDropdown() {
  return (
    <Menu as="div" className="relative">
      <Menu.Button className="rounded bg-blue-600 px-4 py-2 text-white ...">Options</Menu.Button>
      <Menu.Items className="absolute right-0 mt-1">
        <Menu.Item>
          {({ active }) => (
            <a className={`${active && "bg-blue-500 text-white"} ...`} href="/account-settings">
              Account settings
            </a>
          )}
        </Menu.Item>
        <Menu.Item>
          {({ active }) => (
            <a className={`${active && "bg-blue-500 text-white"} ...`} href="/documentation">
              Documentation
            </a>
          )}
        </Menu.Item>
        <Menu.Item disabled>
          <span className="opacity-75 ...">Invite a friend (coming soon!)</span>
        </Menu.Item>
      </Menu.Items>
    </Menu>
  );
}

----------------------------------------

TITLE: Using the Container Utility for Responsive Layouts in HTML
DESCRIPTION: Example of using the container utility to set the maximum width of an element to match the min-width of the current breakpoint. This is useful for designing with fixed screen sizes rather than fluid viewports.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/max-width.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="container">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Mapping Props to Static Class Names in a React Button Component
DESCRIPTION: This JavaScript snippet shows how to correctly map React props to static Tailwind class names, which ensures build-time detection of classes by Tailwind. Instead of constructing classes dynamically, predefined class strings are used in a mapping object, enhancing class detection and CSS generation efficiency.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/detecting-classes-in-source-files.mdx#2025-04-18_snippet_2

LANGUAGE: JavaScript
CODE:
function Button({ color, children }) {
  const colorVariants = {
    blue: "bg-blue-600 hover:bg-blue-500",
    red: "bg-red-600 hover:bg-red-500",
  };

  return <button className={`${colorVariants[color]} ...`}>{children}</button>;
}

----------------------------------------

TITLE: Implementing Fixed-Width Table Columns with Tailwind CSS
DESCRIPTION: This example shows how to use the 'table-fixed' utility to set fixed widths for table columns, ignoring the content of the cells. It includes a full HTML structure for a responsive table.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/table-layout.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<table class="table-fixed">
  <thead>
    <tr>
      <th>Song</th>
      <th>Artist</th>
      <th>Year</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>The Sliding Mr. Bones (Next Stop, Pottersville)</td>
      <td>Malcolm Lockyer</td>
      <td>1961</td>
    </tr>
    <tr>
      <td>Witchy Woman</td>
      <td>The Eagles</td>
      <td>1972</td>
    </tr>
    <tr>
      <td>Shining Star</td>
      <td>Earth, Wind, and Fire</td>
      <td>1975</td>
    </tr>
  </tbody>
</table>

----------------------------------------

TITLE: Cropping Background to Text with Tailwind CSS
DESCRIPTION: This JSX example illustrates how to use the bg-clip-text utility in Tailwind CSS to crop a background gradient to a text shape. This requires additional styling with text-transparent to ensure the background gradient effect is visible within text boundaries. It outputs a styled paragraph with a textual gradient effect.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-clip.mdx#2025-04-18_snippet_3

LANGUAGE: JSX
CODE:
{
  <p className="bg-gradient-to-r from-pink-500 to-violet-500 bg-clip-text text-center text-4xl leading-none font-extrabold tracking-tight text-transparent sm:text-5xl">
    Hello world
  </p>
}

----------------------------------------

TITLE: Configuring Vite for Tailwind CSS v4
DESCRIPTION: Updated Vite configuration to use the new dedicated Tailwind CSS Vite plugin for improved performance and developer experience in v4.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_2

LANGUAGE: ts
CODE:
import { defineConfig } from "vite";
import tailwindcss from "@tailwindcss/vite";

export default defineConfig({
  plugins: [
    tailwindcss(),
  ],
});

----------------------------------------

TITLE: Basic Example of Gap Utilities in JSX
DESCRIPTION: This code snippet illustrates a basic example of using gap utilities in a grid layout. It demonstrates how to apply the gap utilities like gap-2 and gap-4 to manage spacing between items in a grid container. The expected output will generate a grid with specified gaps between its child items.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/gap.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<Figure>
<Example>
  {
    <div className="grid grid-cols-1">
      <Stripes border className="col-start-1 row-start-1 rounded-lg" />
      <div className="col-start-1 row-start-1 grid grid-cols-2 gap-4 rounded-lg text-center font-mono text-sm leading-6 font-bold text-white">
        <div className="rounded-lg bg-violet-500 p-4">01</div>
        <div className="rounded-lg bg-violet-500 p-4">02</div>
        <div className="rounded-lg bg-violet-500 p-4">03</div>
        <div className="rounded-lg bg-violet-500 p-4">04</div>
      </div>
    </div>
  }
</Example>

```html
<!-- [!code classes:gap-4] -->
<div class="grid grid-cols-2 gap-4">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
</div>
```
</Figure>

----------------------------------------

TITLE: Applying Responsive Width Classes in HTML
DESCRIPTION: Demonstrates how to use Tailwind CSS responsive utility classes to adjust an image's width at different breakpoints.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<img class="w-16 md:w-32 lg:w-48" src="..." />

----------------------------------------

TITLE: Using Current Color for SVG Fill
DESCRIPTION: This example demonstrates how to use the `fill-current` utility class to set the fill color of an SVG to the current text color. The SVG is placed inside a button element that changes color on hover, demonstrating how the SVG fill dynamically inherits the text color of the button.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/fill.mdx#2025-04-18_snippet_2

LANGUAGE: typescript
CODE:
"{
    <div className=\"flex items-center justify-center\">
      <button className=\"inline-flex gap-2 rounded-md border border-indigo-100 bg-white px-3 py-2 text-sm font-semibold text-indigo-600 shadow-sm transition-colors duration-150 hover:border-indigo-600 hover:bg-indigo-600 hover:text-white dark:border-transparent\">
        <svg viewBox=\"0 0 20 20\" className=\"size-5 fill-current\">
          <path
            d=\"M15.312 11.424a5.5 5.5 0 0 1-9.201 2.466l-.312-.311h2.433a.75.75 0 0 0 0-1.5H3.989a.75.75 0 0 0-.75.75v4.242a.75.75 0 0 0 1.5 0v-2.43l.31.31a7 7 0 0 0 11.712-3.138.75.75 0 0 0-1.449-.39Zm1.23-3.723a.75.75 0 0 0 .219-.53V2.929a.75.75 0 0 0-1.5 0V5.36l-.31-.31A7 7 0 0 0 3.239 8.188a.75.75 0 1 0 1.448.389A5.5 5.5 0 0 1 13.89 6.11l.311.31h-2.432a.75.75 0 0 0 0 1.5h4.243a.75.75 0 0 0 .53-.219Z\"
            fillRule=\"evenodd\"
            clipRule=\"evenodd\"
          />
        </svg>
        Check for updates
      </button>
    </div>
  }"

LANGUAGE: html
CODE:
"<button class=\"bg-white text-indigo-600 hover:bg-indigo-600 hover:text-white ...\">
  <svg class=\"size-5 fill-current ...\">
    <!-- ... -->
  </svg>
  Check for updates
</button>"

----------------------------------------

TITLE: Using justify-end-safe with Flexbox in HTML
DESCRIPTION: Example of using the justify-end-safe utility which aligns items to the end when there's enough space, but reverts to start alignment when space is limited to keep content visible.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-content.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="flex justify-end-safe ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Implementing Dialog Modal in React
DESCRIPTION: Example of implementing a modal dialog component using Headless UI's Dialog component in React. Shows how to create a basic modal with overlay, title, description and action buttons.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1/index.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { useState } from "react";
import { Dialog } from "@headlessui/react";

function MyDialog() {
  let [isOpen, setIsOpen] = useState(true);

  return (
    <Dialog open={isOpen} onClose={setIsOpen}>
      <Dialog.Overlay />

      <Dialog.Title>Deactivate account</Dialog.Title>
      <Dialog.Description>This will permanently deactivate your account</Dialog.Description>

      <p>
        Are you sure you want to deactivate your account? All of your data will be permanently removed. This action
        cannot be undone.
      </p>

      <button onClick={() => setIsOpen(false)}>Deactivate</button>
      <button onClick={() => setIsOpen(false)}>Cancel</button>
    </Dialog>
  );
}

----------------------------------------

TITLE: Using @config Directive for Multiple Config Files
DESCRIPTION: Examples showing how to use the new @config directive to specify different Tailwind CSS configurations for separate CSS files within the same project.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
@config "./tailwind.admin.config.js";
@tailwind base;
@tailwind components;
@tailwind utilities;

LANGUAGE: javascript
CODE:
@config "./tailwind.client.config.js";
@tailwind base;
@tailwind components;
@tailwind utilities;

----------------------------------------

TITLE: Creating a Responsive Profile Card with Tailwind CSS in HTML
DESCRIPTION: This code snippet shows how to build a responsive profile card using Tailwind CSS utility classes. It includes hover and active states for the button, and uses responsive design classes for different screen sizes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<!-- [!code classes:sm:flex-row,sm:py-4,sm:gap-6,sm:mx-0,sm:shrink-0,sm:text-left,sm:items-center] -->
<!-- [!code classes:hover:text-white,hover:bg-purple-600,hover:border-transparent,active:bg-purple-700] -->
<div class="flex flex-col gap-2 p-8 sm:flex-row sm:items-center sm:gap-6 sm:py-4 ...">
  <img class="mx-auto block h-24 rounded-full sm:mx-0 sm:shrink-0" src="/img/erin-lindford.jpg" alt="" />
  <div class="space-y-2 text-center sm:text-left">
    <div class="space-y-0.5">
      <p class="text-lg font-semibold text-black">Erin Lindford</p>
      <p class="font-medium text-gray-500">Product Engineer</p>
    </div>
    <!-- prettier-ignore -->
    <button class="border-purple-200 text-purple-600 hover:border-transparent hover:bg-purple-600 hover:text-white active:bg-purple-700 ...">
      Message
    </button>
  </div>
</div>

----------------------------------------

TITLE: Fixed Header Contact List Implementation in JSX
DESCRIPTION: A React/JSX implementation of a contact list component with a fixed header using TailwindCSS utilities. Features a scrollable list of contacts with profile images and names, with a fixed header that stays at the top.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/position.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<div className="px-3">
  <div className="relative mx-auto h-80 max-w-md overflow-hidden bg-white shadow-lg ring-1 ring-gray-900/5 dark:bg-gray-800">
    <div className="absolute top-0 right-0 left-0 flex items-center bg-gray-50/90 px-4 py-3 text-sm font-semibold text-gray-900 ring-1 ring-gray-900/10 backdrop-blur-sm dark:bg-gray-700/90 dark:text-gray-200 dark:ring-black/10">
      Contacts
    </div>
    <div className="flex h-80 flex-col divide-y divide-gray-200 overflow-auto dark:divide-gray-200/5">
      <div className="flex items-center gap-4 p-4">
        <img
          className="size-12 rounded-full"
          src="https://images.unsplash.com/photo-1501196354995-cbb51c65aaea?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=facearea&facepad=4&w=256&h=256&q=80"
        />
        <strong className="text-sm font-medium text-gray-900 dark:text-gray-200">Andrew Alfred</strong>
      </div>
      <!-- Additional contact entries -->
    </div>
  </div>
</div>

----------------------------------------

TITLE: Closing Popover Components in React with Headless UI
DESCRIPTION: Example showing how to close a Popover component in React by using Popover.Button within a Popover.Panel. This pattern allows links in a popover menu to close the popover when clicked.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-4/index.mdx#2025-04-18_snippet_4

LANGUAGE: jsx
CODE:
import { Popover } from '@headlessui/react'
import MyLink from './MyLink'

function MyPopover() {
  return (
    <Popover>
      <Popover.Button>Solutions</Popover.Button>
      <Popover.Panel>
        <Popover.Button as={MyLink} href="/insights">
          Insights
        </Popover.Button>
        {/* ... */}
      </Popover.Panel>
    </Popover>
  )
}

----------------------------------------

TITLE: Aligning Items with 'items-center' Utility
DESCRIPTION: This HTML snippet illustrates the 'items-center' utility, used to center flex items along the cross axis within a flex container. The example contains three items, each with a different height, centered vertically within the container.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-items.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<div class="flex items-center ...">
  <div class="py-4">01</div>
  <div class="py-12">02</div>
  <div class="py-8">03</div>
</div>

----------------------------------------

TITLE: Imperatively Closing Popover Components in React
DESCRIPTION: Example showing how to use the close function provided through render props to programmatically close a Popover in React after completing an asynchronous operation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-4/index.mdx#2025-04-18_snippet_6

LANGUAGE: jsx
CODE:
import { Popover } from '@headlessui/react'

function MyPopover() {
  return (
    <Popover>
      <Popover.Button>Terms</Popover.Button>
      <Popover.Panel>
        {({ close }) => (
          <button
            onClick={async () => {
              await fetch('/accept-terms', { method: 'POST' })
              close()
            }}
          >
            Read and accept
          </button>
        )}
      </Popover.Panel>
    </Popover>
  )
}

----------------------------------------

TITLE: Using flex-row-reverse in Tailwind CSS (HTML)
DESCRIPTION: Illustrates the use of the `flex-row-reverse` utility in Tailwind CSS for arranging flex items horizontally in reverse order. This provides the reversed row layout by applying Tailwind utility classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-direction.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class=\"flex flex-row-reverse ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>

----------------------------------------

TITLE: Basic Example of Font Size Utilities - HTML
DESCRIPTION: This snippet demonstrates how to use Tailwind CSS utilities like text-sm and text-lg to set the font sizes of elements, with responsive examples provided in a structured layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-size.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div className="flex flex-col gap-8">
  <div>
    <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">text-sm</span>
    <p className="text-sm font-medium text-gray-900 dark:text-gray-200">
      The quick brown fox jumps over the lazy dog.
    </p>
  </div>
  <div>
    <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">text-base</span>
    <p className="text-base font-medium text-gray-900 dark:text-gray-200">
      The quick brown fox jumps over the lazy dog.
    </p>
  </div>
  <div>
    <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">text-lg</span>
    <p className="text-lg font-medium text-gray-900 dark:text-gray-200">
      The quick brown fox jumps over the lazy dog.
    </p>
  </div>
  <div>
    <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">text-xl</span>
    <p className="text-xl font-medium text-gray-900 dark:text-gray-200">
      The quick brown fox jumps over the lazy dog.
    </p>
  </div>
  <div>
    <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">text-2xl</span>
    <p className="text-2xl font-medium text-gray-900 dark:text-gray-200">
      The quick brown fox jumps over the lazy dog.
    </p>
  </div>
</div>

----------------------------------------

TITLE: Applying Linear Gradient Masks with Tailwind CSS
DESCRIPTION: This example demonstrates how to apply a linear gradient mask to an element using Tailwind CSS classes. The classes `mask-linear-50`, `mask-linear-from-60%`, and `mask-linear-to-80%` control the gradient's angle and color stops.  The negative variant `-mask-linear-50` applies the mask in the opposite direction.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_9

LANGUAGE: html
CODE:
<div class="mask-linear-50 mask-linear-from-60% mask-linear-to-80% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="-mask-linear-50 mask-linear-from-60% mask-linear-to-80% bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Combining Gradient Masks in CSS
DESCRIPTION: This snippet demonstrates the combination of various gradient masks including radial and directional gradients using Tailwind CSS. By employing utilities like `mask-b-from-50%` and `mask-radial-from-80%`, it shows how to create sophisticated and multi-layered masks over images, enhancing aesthetic flexibility. The input requires multiple mask classes and a set background image, outputting a compound masked appearance.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div class="mask-b-from-50% mask-radial-[50%_90%] mask-radial-from-80% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-r-from-80% mask-b-from-80% mask-radial-from-70% mask-radial-to-85% bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Creating a Sticky Header Table with JSX and Tailwind CSS
DESCRIPTION: This JSX code shows how to create a table with a sticky header using Tailwind CSS. The `sticky top-0` class on the `<th>` elements makes the header row stick to the top of the container when scrolling.  It also uses backdrop-filter and opacity classes for visual effects.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_12

LANGUAGE: jsx
CODE:
"{<div className=\"isolate h-72 overflow-auto rounded-xl\">\n      <table className=\"min-w-full border-separate border-spacing-0\">\n        <thead className=\"bg-gray-50\">\n          <tr>\n            <th\n              scope=\"col\"\n              className=\"bg-opacity-75 sticky top-0 z-10 border-b border-gray-300 bg-gray-50 py-3.5 pr-3 pl-4 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter sm:pl-6 lg:pl-8\"\n            >\n              <>Name</>\n            </th>\n            <th\n              scope=\"col\"\n              className=\"bg-opacity-75 sticky top-0 z-10 hidden border-b border-gray-300 bg-gray-50 px-3 py-3.5 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter lg:table-cell\"\n            >\n              <>Email</>\n            </th>\n            <th\n              scope=\"col\"\n              className=\"bg-opacity-75 sticky top-0 z-10 border-b border-gray-300 bg-gray-50 px-3 py-3.5 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter\"\n            >\n              <>Role</>\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"bg-white\">\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Courtney Henry</>\n            </td>\n            <td className=\"hidden border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500 lg:table-cell\">\n              <>courtney.henry@example.com</>\n            </td>\n            <td className=\"border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500\">Admin</td>\n          </tr>\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Tom Cook</>\n            </td>\n            <td className=\"hidden border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500 lg:table-cell\">\n              <>tom.cook@example.com</>\n            </td>\n            <td className=\"border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500\">Member</td>\n          </tr>\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Whitney Francis</>\n            </td>\n            <td className=\"hidden border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500 lg:table-cell\">\n              <>whitney.francis@example.com</>\n            </td>\n            <td className=\"border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500\">Admin</td>\n          </tr>\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Leonard Krasner</>\n            </td>\n            <td className=\"hidden border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500 lg:table-cell\">\n              <>leonard.krasner@example.com</>\n            </td>\n            <td className=\"border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500\">Owner</td>\n          </tr>\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Floyd Miles</>\n            </td>\n            <td className=\"hidden border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500 lg:table-cell\">\n              <>floyd.miles@example.com</>\n            </td>\n            <td className=\"border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500\">Member</td>\n          </tr>\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Emily Selman</>\n            </td>\n            <td className=\"hidden border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500 lg:table-cell\">\n              <>emily.selman@example.com</>\n            </td>\n            <td className=\"border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500\">Member</td>\n          </tr>\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Kristin Watson</>\n            </td>\n            <td className=\"hidden border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500 lg:table-cell\">\n              <>kristin.watson@example.com</>\n            </td>\n            <td className=\"border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500\">Admin</td>\n          </tr>\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Emma Dorsey</>\n            </td>\n            <td className=\"hidden border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500 lg:table-cell\">\n              <>emma.dorsey@example.com</>\n            </td>\n            <td className=\"border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500\">Member</td>\n          </tr>\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Alicia Bell</>\n            </td>\n            <td className=\"hidden border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500 lg:table-cell\">\n              <>alicia.bell@example.com</>\n            </td>\n            <td className=\"border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500\">Admin</td>\n          </tr>\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Jenny Wilson</>\n            </td>\n            <td className=\"hidden border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500 lg:table-cell\">\n              <>jenny.wilson@example.com</>\n            </td>\n            <td className=\"border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500\">Owner</td>\n          </tr>\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Anna Roberts</>\n            </td>\n            <td className=\"hidden border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500 lg:table-cell\">\n              <>anna.roberts@example.com</>\n            </td>\n            <td className=\"border-b border-gray-200 px-3 py-4 text-sm whitespace-nowrap text-gray-500\">Member</td>\n          </tr>\n          <tr>\n            <td className=\"border-b border-gray-200 py-4 pr-3 pl-4 text-sm font-medium whitespace-nowrap text-gray-900 sm:pl-6 lg:pl-8\">\n              <>Benjamin Russel</>\n            </td>"

----------------------------------------

TITLE: Styling with Headless UI Data Attributes in JSX
DESCRIPTION: This snippet demonstrates how to style Listbox options using the new data attributes provided in Headless UI v1.7. These include state-based classes such as `ui-active` and `ui-not-active`. Prerequisites include having Headless UI and @headlessui/tailwindcss plugin installed. Key parameters are `person.id` for the unique key and `person` for the option value. It shows reactive state styling with direct CSS classes passed to the component.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2022-09-09-new-personal-website-heroicons-2-headless-ui-v17/index.mdx#2025-04-18_snippet_2

LANGUAGE: JSX
CODE:
<Listbox.Option
  key={person.id}
  value={person}
  className="ui-active:bg-blue-500 ui-active:text-white ui-not-active:bg-white ui-not-active:text-black"
>
  <CheckIcon className="ui-selected:block hidden" />
  {person.name}
</Listbox.Option>

----------------------------------------

TITLE: Styling Form Elements with Inert Variant in TailwindCSS
DESCRIPTION: Example of using the inert variant to style a form section that's marked as non-interactive. The inert variant applies opacity-50 to the fieldset when it has the inert attribute.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_62

LANGUAGE: html
CODE:
<form>
  <legend>Notification preferences</legend>
  <fieldset>
    <input type="radio" />
    <label> Custom </label>
    <fieldset inert class="inert:opacity-50">
      <!-- ... -->
    </fieldset>
    <input type="radio" />
    <label> Everything </label>
  </fieldset>
</form>

----------------------------------------

TITLE: Importing CSS with Tailwind - CSS
DESCRIPTION: Automatically bundle other CSS files with Tailwind without extra tools like Sass. Required files get imported and compiled automatically by Tailwind.
Dependencies: None
Parameters: Filenames of CSS files to import
Output: Bundled CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/compatibility.mdx#2025-04-18_snippet_0

LANGUAGE: css
CODE:
@import "tailwindcss";
@import "./typography.css";

----------------------------------------

TITLE: Class Composition in Tailwind CSS
DESCRIPTION: Demonstrates how to use multiple utility classes to compose complex effects in Tailwind. The example shows how to apply multiple filters to an element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_10

LANGUAGE: html
CODE:
<div class="blur-sm grayscale">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Implementing Scroll Snap Gallery with React/JSX
DESCRIPTION: A React/JSX implementation of a horizontal scrolling image gallery with snap points using Tailwind CSS classes. Features snap-x and snap-center utilities for smooth scrolling behavior between images.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3/index.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<div className="relative flex w-full snap-x snap-mandatory gap-6 overflow-x-auto pb-14">
  <div className="shrink-0 snap-center">
    <div className="w-4 shrink-0 sm:w-37"></div>
  </div>
  <div className="shrink-0 snap-center">
    <img
      className="bg-whit h-40 w-80 shrink-0 rounded-lg"
      src="https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80"
    />
  </div>
  <!-- Additional image elements -->
</div>

----------------------------------------

TITLE: Responsive Grid Layout with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to create a responsive grid layout using Tailwind CSS. It defines different column counts for mobile, medium, and large screen sizes using responsive variants.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_34

LANGUAGE: html
CODE:
<div class="grid grid-cols-3 md:grid-cols-4 lg:grid-cols-6">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Configuring Tailwind CSS v4.0 with Vite Plugin
DESCRIPTION: Example showing how to set up Tailwind CSS v4.0 with the new first-party Vite plugin for improved performance, requiring only the plugin import and initialization.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_2

LANGUAGE: js
CODE:
import { defineConfig } from "vite";
import tailwindcss from "@tailwindcss/vite";

export default defineConfig({
  plugins: [
    tailwindcss(),
  ],
});

----------------------------------------

TITLE: HTML with Tailwind CSS Rounded Sides Class Examples
DESCRIPTION: This HTML snippet demonstrates applying Tailwind CSS classes to round individual sides of an element. The classes used are `rounded-t-lg`, `rounded-r-lg`, `rounded-b-lg`, and `rounded-l-lg` which apply border radius to the top, right, bottom, and left sides respectively.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<!-- [!code classes:rounded-t-lg,rounded-r-lg,rounded-b-lg,rounded-l-lg] -->
<div class="rounded-t-lg ..."></div>
<div class="rounded-r-lg ..."></div>
<div class="rounded-b-lg ..."></div>
<div class="rounded-l-lg ..."></div>

----------------------------------------

TITLE: Extending Tailwind CSS Default Theme
DESCRIPTION: This snippet shows how to extend the default Tailwind CSS theme by adding a new font variable.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_10

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --font-script: Great Vibes, cursive;
}

----------------------------------------

TITLE: Using @supports with Arbitrary Variants in Tailwind CSS
DESCRIPTION: Shows how to conditionally apply styles based on browser feature support using the @supports query with arbitrary variants in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_21

LANGUAGE: html
CODE:
<!-- [!code word:@supports(backdrop-filter\:blur(0))\]\:bg-white/50] -->
<!-- [!code word:[@supports(backdrop-filter\:blur(0))\]\:backdrop-blur] -->
<div
  class="bg-white [@supports(backdrop-filter:blur(0))]:bg-white/50 [@supports(backdrop-filter:blur(0))]:backdrop-blur"
>
  <!-- ... -->
</div>

----------------------------------------

TITLE: React Component Example with Tailwind CSS RTL Support
DESCRIPTION: This React component demonstrates the use of Tailwind CSS with RTL support using logical properties.  It includes examples for both LTR (left-to-right) and RTL (right-to-left) layouts, showcasing how styles adapt automatically. The component defines a grid layout with profile images and text, utilizing utilities like `ms-3` for margin-inline-start.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_5

LANGUAGE: JavaScript
CODE:
{
    <div className="mx-auto grid max-w-lg grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2">
      <div dir="ltr">
        <p className="mb-4 text-sm font-medium">Left-to-right</p>
        <div className="group flex items-center">
          <img
            className="h-12 w-12 shrink-0 rounded-full"
            src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
            alt=""
          />
          <div className="ms-3">
            <p className="text-sm font-medium text-slate-700 group-hover:text-slate-900 dark:text-slate-300 dark:group-hover:text-white">
              <>Tom Cook</>
            </p>
            <p className="text-sm font-medium text-slate-500 group-hover:text-slate-700 dark:group-hover:text-slate-300">
              <>Director of Operations</>
            </p>
          </div>
        </div>
      </div>
      <div dir="rtl">
        <p className="mb-4 text-sm font-medium">Right-to-left</p>
        <div className="group flex items-center">
          <img
            className="h-12 w-12 shrink-0 rounded-full"
            src="https://images.unsplash.com/photo-1563833717765-00462801314e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
            alt=""
          />
          <div className="ms-3">
            <p className="text-sm font-medium text-slate-700 group-hover:text-slate-900 dark:text-slate-300 dark:group-hover:text-white">
              <>تامر كرم</>
            </p>
            <p className="text-sm font-medium text-slate-500 group-hover:text-slate-700 dark:group-hover:text-slate-300">
              <>الرئيس التنفيذي</>
            </p>
          </div>
        </div>
      </div>
    </div>
  }

----------------------------------------

TITLE: Using Inline Source with Ranges for Generating Classes in Tailwind CSS
DESCRIPTION: This example uses brace expansion in a CSS source to generate multiple class name variants with ranges. It dynamically assembles classes such as background color utilities with hover effects, including varying shades from 50 to 950, ensuring all possible variants are considered.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/detecting-classes-in-source-files.mdx#2025-04-18_snippet_4

LANGUAGE: CSS
CODE:
@import "tailwindcss";
/* [!code highlight:2] */
@source inline("{hover:,}bg-red-{50,{100..900..100},950}");

LANGUAGE: CSS
CODE:
.bg-red-50 {
  background-color: var(--color-red-50);
}
.bg-red-100 {
  background-color: var(--color-red-100);
}
.bg-red-200 {
  background-color: var(--color-red-200);
}

/* ... */

.bg-red-800 {
  background-color: var(--color-red-800);
}
.bg-red-900 {
  background-color: var(--color-red-900);
}
.bg-red-950 {
  background-color: var(--color-red-950);
}
@media (hover: hover) {
  .hover\:bg-red-50:hover {
    background-color: var(--color-red-50);
  }

  /* ... */

  .hover\:bg-red-950:hover {
    background-color: var(--color-red-950);
  }
}

----------------------------------------

TITLE: Using peer and peer-invalid for Form Validation in HTML
DESCRIPTION: This example shows how to mark an input with the 'peer' class and use the 'peer-invalid:visible' variant to conditionally display an error message when the email input is invalid.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_18

LANGUAGE: html
CODE:
<form>
  <label class="block">
    <span class="...">Email</span>
    <input type="email" class="peer ..." />
    <p class="invisible peer-invalid:visible ...">Please provide a valid email address.</p>
  </label>
</form>

----------------------------------------

TITLE: Setting Dynamic CSS Variables with Inline Styles in JSX
DESCRIPTION: This snippet shows another implementation of the `BrandedButton` component, where dynamic CSS variables are set using inline styles. These variables are then utilized in the Tailwind classes to enhance styling customization.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_22

LANGUAGE: jsx
CODE:
export function BrandedButton({ buttonColor, buttonColorHover, textColor, children }) {
  return (
    <button
      style={{
        // [!code highlight:4]
        "--bg-color": buttonColor,
        "--bg-color-hover": buttonColorHover,
        "--text-color": textColor,
      }}
      // [!code classes:bg-(--bg-color),text-(--text-color),hover:bg-(--bg-color-hover)]
      className="bg-(--bg-color) text-(--text-color) hover:bg-(--bg-color-hover) ..."
    >
      {children}
    </button>
  );
}

----------------------------------------

TITLE: Space Between Content in Grid
DESCRIPTION: Distributes grid items with equal space between rows using place-content-between utility. Creates a 2-column grid with maximized space between content rows.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-content.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="grid h-48 grid-cols-2 place-content-between gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
</div>

----------------------------------------

TITLE: Changing Border Opacity - HTML
DESCRIPTION: This snippet shows how to adjust the opacity of element borders using Tailwind CSS classes (`border-indigo-500/100`, `border-indigo-500/75`, `border-indigo-500/50`). The opacity is defined through class modifiers, impacting the border's visual transparency.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-color.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="border-4 border-indigo-500/100 ..."></div>
<div class="border-4 border-indigo-500/75 ..."></div>
<div class="border-4 border-indigo-500/50 ..."></div>

----------------------------------------

TITLE: Translating Elements on the x-axis Using Tailwind CSS
DESCRIPTION: This code demonstrates how to apply translation utilities (`translate-x-<number>` and `translate-x-<fraction>`) to reposition elements horizontally. It includes visual examples of elements being translated and explains the use of corresponding classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/translate.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code classes:-translate-x-4,translate-x-2,translate-x-1/2] -->
<img class="-translate-x-4 ..." src="/img/mountains.jpg" />
<img class="translate-x-2 ..." src="/img/mountains.jpg" />
<img class="translate-x-1/2 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Implementing Sidebar Layout in React with Catalyst
DESCRIPTION: Demonstrates how to use the SidebarLayout component from Catalyst to create a responsive application layout with a sidebar that collapses on mobile screens.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2024-05-24-catalyst-application-layouts/index.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { SidebarLayout } from "@/components/sidebar-layout";
import { Navbar } from "@/components/navbar";
import { Sidebar } from "@/components/sidebar";

function Example({ children }) {
  return (
    <SidebarLayout
      sidebar={<Sidebar>{/* Sidebar menu */}</Sidebar>}
      navbar={<Navbar>{/* Navbar for mobile screens */}</Navbar>}
    >
      {/* Your page content */}
    </SidebarLayout>
  );
}

----------------------------------------

TITLE: React Component for Background Origin Examples
DESCRIPTION: This React component demonstrates the usage of `bg-origin-border`, `bg-origin-padding`, and `bg-origin-content` to control how an element's background is rendered. It creates a scrollable flex container with three divs, each demonstrating a different background origin setting.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-origin.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
{
    <div className="flex scroll-p-8 overflow-scroll sm:block sm:overflow-visible">
      <div className="flex shrink-0 items-center justify-around gap-12 p-8 font-mono font-bold sm:gap-4">
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            bg-origin-border
          </p>
          <div className="h-24 w-24 rounded-lg border-4 border-dashed border-white/75 bg-gray-300 bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-cover bg-no-repeat bg-origin-border object-cover p-3 dark:border-white/40"></div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            bg-origin-padding
          </p>
          <div className="h-24 w-24 rounded-lg border-4 border-dashed border-white/75 bg-gray-300 bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-cover bg-no-repeat bg-origin-padding object-cover p-3 dark:border-white/25 dark:bg-gray-700"></div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            bg-origin-content
          </p>
          <div className="h-24 w-24 rounded-lg border-4 border-dashed border-white/75 bg-gray-300 bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-cover bg-no-repeat bg-origin-content object-cover p-3 dark:border-white/25 dark:bg-gray-700"></div>
        </div>
      </div>
    </div>
  }

----------------------------------------

TITLE: Installing Latest Tailwind CSS Version
DESCRIPTION: Command to upgrade an existing project to the latest version of Tailwind CSS from npm.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_0

LANGUAGE: sh
CODE:
npm install -D tailwindcss@latest

----------------------------------------

TITLE: Column Gap example with React and Tailwind CSS
DESCRIPTION: This code snippet demonstrates how to create a responsive grid layout with column gaps using React and Tailwind CSS. It sets up a dynamic grid with `grid-cols-[1fr_2rem_1fr_2rem_1fr]` for fine-grained control over column widths and gaps. The `gap-8` class applies the desired space between the columns.  It showcases how to use Tailwind's utility classes within a React component to achieve specific layout configurations.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/columns.mdx#2025-04-18_snippet_6

LANGUAGE: JSX
CODE:
"{\n    <div className=\"@container relative\">\n      <div className=\"absolute inset-0 -top-8 -bottom-8 grid grid-cols-[1fr_2rem_1fr_2rem_1fr]\">\n        <div />\n        <Stripes border=\"x\" />\n        <div />\n        <Stripes border=\"x\" />\n        <div />\n      </div>\n      <div className=\"relative -mb-8 columns-3 gap-8 *:mb-8\">\n        <img\n          className=\"aspect-3/2 rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1454496522488-7a8e488e8606?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2952&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1434394354979-a235cd36269d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2902&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1491904768633-2b7e3e7fede5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3131&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1463288889890-a56b2853c40f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3132&q=80\"\n        />\n        <img\n          className=\"aspect-3/2 rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1611605645802-c21be743c321?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2940&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1498603993951-8a027a8a8f84?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2936&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1526400473556-aac12354f3db?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2940&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1617369120004-4fc70312c5e6?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1587&q=80\"\n        />\n        <img\n          className=\"aspect-3/2 rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1518892096458-a169843d7f7f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2940&q=80\"\n        />\n      </div>\n    </div>\n  }"

----------------------------------------

TITLE: Tailwind Typography Plugin Usage Example
DESCRIPTION: HTML example demonstrating how to use the @tailwindcss/typography plugin with prose classes to style content.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-typography/index.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<article class="prose lg:prose-xl">
  <h1>Garlic bread with cheese: What the science tells us</h1>
  <p>
    For years parents have espoused the health benefits of eating garlic bread with cheese to their children, with the
    food earning such an iconic status in our culture that kids will often dress up as warm, cheesy loaf for Halloween.
  </p>
  <p>
    But a recent study shows that the celebrated appetizer may be linked to a series of rabies cases springing up around
    the country.
  </p>
  <!-- ... -->
</article>

----------------------------------------

TITLE: Hiding Elements with TailwindCSS in HTML
DESCRIPTION: Demonstrates how to use the `hidden` utility in TailwindCSS to remove elements from the document flow in an HTML page. It shows a flexbox layout with visibility control over certain elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/display.mdx#2025-04-18_snippet_9

LANGUAGE: HTML
CODE:
<div class="flex ...">
  <div class="hidden ...">01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: React Switch Component with Headless UI
DESCRIPTION: This code snippet demonstrates a React switch component using Headless UI's `Switch` component. It manages the state of the switch using `useState` and dynamically applies Tailwind CSS classes based on the enabled state, showcasing customizability and accessibility features.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwind-ui-now-with-react-and-vue-support/index.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { useState } from "react";
import { Switch } from "@headlessui/react";

function classNames(...classes) {
  return classes.filter(Boolean).join(" ");
}

export default function Example() {
  const [enabled, setEnabled] = useState(false);

  return (
    <Switch
      checked={enabled}
      onChange={setEnabled}
      className={classNames(
        enabled ? "bg-indigo-600" : "bg-gray-200",
        "relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:outline-none",
      )}
    >
      <span className="sr-only">Use setting</span>
      <span
        aria-hidden="true"
        className={classNames(
          enabled ? "translate-x-5" : "translate-x-0",
          "pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out",
        )}
      />
    </Switch>
  );
}

----------------------------------------

TITLE: Tailwind CSS Display Property Table
DESCRIPTION: This table defines the Tailwind CSS classes for controlling the display property of HTML elements, along with the corresponding CSS values. It includes classes for inline, block, inline-block, flex, grid, table, and hidden display types.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/display.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import dedent from "dedent";
import { ApiTable } from "@/components/api-table.tsx";
import { CustomizingYourTheme, ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { Stripes } from "@/components/stripes.tsx";

export const title = "display";
export const description = "Utilities for controlling the display box type of an element.";

<ApiTable
  rows={[
    ["inline", "display: inline;"],
    ["block", "display: block;"],
    ["inline-block", "display: inline-block;"],
    ["flow-root", "display: flow-root;"],
    ["flex", "display: flex;"],
    ["inline-flex", "display: inline-flex;"],
    ["grid", "display: grid;"],
    ["inline-grid", "display: inline-grid;"],
    ["contents", "display: contents;"],
    ["table", "display: table;"],
    ["inline-table", "display: inline-table;"],
    ["table-caption", "display: table-caption;"],
    ["table-cell", "display: table-cell;"],
    ["table-column", "display: table-column;"],
    ["table-column-group", "display: table-column-group;"],
    ["table-footer-group", "display: table-footer-group;"],
    ["table-header-group", "display: table-header-group;"],
    ["table-row-group", "display: table-row-group;"],
    ["table-row", "display: table-row;"],
    ["list-item", "display: list-item;"],
    ["hidden", "display: none;"],
    [
      "sr-only",
      dedent`
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border-width: 0;
      `,
    ],
    [
      "not-sr-only",
      dedent`
        position: static;
        width: auto;
        height: auto;
        padding: 0;
        margin: 0;
        overflow: visible;
        clip: auto;
        white-space: normal;
      `,
    ],
  ]}
/>

----------------------------------------

TITLE: Styling First Line and First Letter with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to style the first line and first letter of a paragraph using Tailwind CSS utility classes. It applies custom typography, colors, and layout to create a distinctive look for the opening of a text block.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_32

LANGUAGE: html
CODE:
<div class="text-gray-700">
  <p
    class="first-letter:float-left first-letter:mr-3 first-letter:text-7xl first-letter:font-bold first-letter:text-gray-900 first-line:tracking-widest first-line:uppercase"
  >
    Well, let me tell you something, funny boy. Y'know that little stamp, the one that says "New York Public Library"?
  </p>
  <p class="mt-6">Well that may not mean anything to you, but that means a lot to me. One whole hell of a lot.</p>
</div>

----------------------------------------

TITLE: Responsive Column Gap example with React and Tailwind CSS
DESCRIPTION: This code snippet demonstrates how to create a responsive grid layout that changes column number and gap on different screen sizes using React and Tailwind CSS. At small breakpoint, it turns into 3 columns with a larger gap.  It showcases how to combine the power of React's dynamic rendering with Tailwind's utility classes to achieve sophisticated layout control.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/columns.mdx#2025-04-18_snippet_7

LANGUAGE: JSX
CODE:
"{\n    <div className=\"@container relative\">\n      <div className=\"absolute inset-0 -top-8 -bottom-8 grid grid-cols-2 gap-4 @sm:grid-cols-3 @sm:gap-8\">\n        <Stripes border=\"x\" />\n        <Stripes border=\"x\" />\n        <Stripes border=\"x\" className=\"@max-sm:hidden\" />\n      </div>\n      <div className=\"relative columns-2 gap-4 *:mb-4 @sm:-mb-8 @sm:columns-3 @sm:gap-8 @sm:*:mb-8\">\n        <img\n          className=\"aspect-3/2 rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1454496522488-7a8e488e8606?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2952&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1434394354979-a235cd36269d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2902&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1491904768633-2b7e3e7fede5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3131&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1463288889890-a56b2853c40f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3132&q=80\"\n        />\n        <img\n          className=\"aspect-3/2 rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1611605645802-c21be743c321?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2940&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1498603993951-8a027a8a8f84?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2936&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1526400473556-aac12354f3db?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2940&q=80\"\n        />\n        <img\n          className=\"aspect-square rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1617369120004-4fc70312c5e6?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1587&q=80\"\n        />\n        <img\n          className=\"aspect-3/2 rounded-lg bg-black/5 object-cover outline -outline-offset-1 outline-black/10 dark:outline-0\"\n          src=\"https://images.unsplash.com/photo-1518892096458-a169843d7f7f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2940&q=80\"\n        />\n      </div>\n    </div>\n  }"

----------------------------------------

TITLE: JSX Grid Row Start/End Example
DESCRIPTION: This JSX code demonstrates how to use Tailwind CSS classes like `row-start-<number>` and `row-end-<number>` to precisely control the placement of elements within a grid by specifying their starting and ending row lines. It combines these with `row-span` for added control.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-row.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
"<div className=\"grid grid-cols-1\">\n      <Stripes border className=\"col-start-1 row-start-1 rounded-lg\" />\n      <div className=\"col-start-1 row-start-1 grid grid-flow-col grid-rows-3 gap-4 rounded-lg text-center font-mono text-sm leading-6 font-bold text-white\">\n        <div className=\"row-span-2 row-start-2 grid place-content-center rounded-lg bg-blue-500 p-4 sm:p-12\">01</div>\n        <div className=\"row-span-2 row-end-3 grid place-content-center rounded-lg bg-blue-500 p-4 sm:p-12\">02</div>\n        <div className=\"row-start-1 row-end-4 grid place-content-center rounded-lg bg-blue-500 p-4 sm:p-12\">03</div>\n      </div>\n    </div>"

----------------------------------------

TITLE: Single-Side Margin Examples in HTML
DESCRIPTION: Examples showing how to apply margin to individual sides of elements using mt-6, mr-4, mb-8, and ml-2 utility classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/margin.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="mt-6 ...">mt-6</div>
<div class="mr-4 ...">mr-4</div>
<div class="mb-8 ...">mb-8</div>
<div class="ml-2 ...">ml-2</div>

----------------------------------------

TITLE: HTML Floating Label Example
DESCRIPTION: This HTML snippet demonstrates how to create a floating label effect using the `peer-placeholder-shown` and `peer-focus` variants in Tailwind CSS.  It positions the label above the input field when the placeholder is shown (i.e., the input is empty and not focused) and moves it to the top when the input is focused.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_10

LANGUAGE: html
CODE:
<div class="relative">
  <input id="name" class="peer ..." />
  <label for="name" class="peer-placeholder-shown:top-4 peer-focus:top-0 ..."> Name </label>
</div>

----------------------------------------

TITLE: Implementing Proximity Scroll Snapping with Tailwind CSS in JSX
DESCRIPTION: This snippet demonstrates how to create a horizontally scrollable container with proximity-based snap points using Tailwind CSS utilities. It includes a series of images that snap into place when scrolled.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-snap-type.mdx#2025-04-18_snippet_3

LANGUAGE: JSX
CODE:
<div className="relative flex w-full snap-x snap-proximity gap-6 overflow-x-auto pb-14">
  <div className="shrink-0 snap-center">
    <div className="w-4 shrink-0 sm:w-37"></div>
  </div>
  <div className="shrink-0 snap-center first:pl-8 last:pr-8">
    <img
      className="h-40 w-80 shrink-0 rounded-lg bg-white"
      src="https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80"
    />
  </div>
  <!-- Additional image elements omitted for brevity -->
  <div className="shrink-0 snap-center">
    <div className="w-4 shrink-0 sm:w-37"></div>
  </div>
</div>

----------------------------------------

TITLE: Implementing Color Scheme and Motion Preferences in Tailwind CSS
DESCRIPTION: This snippet demonstrates how Tailwind CSS translates color scheme and motion preference modifiers into CSS media queries. It covers dark mode, reduced motion, and contrast preferences.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_76

LANGUAGE: CSS
CODE:
@media (prefers-color-scheme: dark)

LANGUAGE: CSS
CODE:
@media (prefers-reduced-motion: no-preference)

LANGUAGE: CSS
CODE:
@media (prefers-reduced-motion: reduce)

LANGUAGE: CSS
CODE:
@media (prefers-contrast: more)

LANGUAGE: CSS
CODE:
@media (prefers-contrast: less)

----------------------------------------

TITLE: Basic box-shadow example in Tailwind CSS
DESCRIPTION: This example demonstrates the usage of `shadow-md`, `shadow-lg`, and `shadow-xl` classes to apply different sized outer box shadows to elements. The example utilizes the Example and Figure components, displaying divs with different shadow utilities applied.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<Figure>

<Example padding={false}>
  {
    <div className="flex items-center justify-around gap-4 gap-y-6 bg-white px-6 py-14 font-mono font-bold max-sm:flex-col max-sm:py-10">
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500">shadow-md</p>
        <div className="size-24 rounded-lg bg-white shadow-md"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500">shadow-lg</p>
        <div className="size-24 rounded-lg bg-white shadow-lg"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500">shadow-xl</p>
        <div className="size-24 rounded-lg bg-white shadow-xl"></div>
      </div>
    </div>
  }
</Example>

```html
<!-- [!code classes:shadow-md,shadow-lg,shadow-xl] -->
<div class="shadow-md ..."></div>
<div class="shadow-lg ..."></div>
<div class="shadow-xl ..."></div>
```

</Figure>

----------------------------------------

TITLE: Supporting Reduced Motion with Tailwind CSS
DESCRIPTION: This example shows how to use motion-safe and motion-reduce variants in Tailwind CSS to conditionally apply animations and transitions based on user preferences.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-property.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<button class="transform transition hover:-translate-y-1 motion-reduce:transition-none motion-reduce:hover:transform-none ...">
  <!-- ... -->
</button>

----------------------------------------

TITLE: Complex Form Implementation with Fieldset
DESCRIPTION: Advanced example showing form implementation with fieldset, conditional rendering, and disabled state handling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v2/index.mdx#2025-04-18_snippet_4

LANGUAGE: jsx
CODE:
import { Button, Description, Field, Fieldset, Input, Label, Legend, Select } from "@headlessui/react";
import { regions } from "./countries";

export function Example() {
  const [country, setCountry] = useState(null);

  return (
    <form action="/shipping">
      <Fieldset>
        <Legend>Shipping details</Legend>
        <Field>
          <Label>Street address</Label>
          <Input name="address" />
        </Field>
        <Field>
          <Label>Country</Label>
          <Description>We currently only ship to North America.</Description>
          <Select name="country" value={country} onChange={(event) => setCountry(event.target.value)}>
            <option></option>
            <option>Canada</option>
            <option>Mexico</option>
            <option>United States</option>
          </Select>
        </Field>
        <Field disabled={!country}>
          <Label className="data-[disabled]:opacity-40">State/province</Label>
          <Select name="region" className="data-[disabled]:opacity-50">
            <option></option>
            {country && regions[country].map((region) => <option>{region}</option>)}
          </Select>
        </Field>
        <Button>Submit</Button>
      </Fieldset>
    </form>
  );
}

----------------------------------------

TITLE: Stretch Content in Grid
DESCRIPTION: Stretches grid items along their grid areas using place-content-stretch utility. Creates a 2-column grid where items stretch to fill their allocated space.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-content.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<div class="grid h-48 grid-cols-2 place-content-stretch gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
</div>

----------------------------------------

TITLE: Using Negative Values in Tailwind CSS Positioning
DESCRIPTION: This HTML example demonstrates how to use negative values for top/right/bottom/left positioning in Tailwind CSS by prefixing the class name with a dash.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/top-right-bottom-left.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="relative size-32 ...">
  <div class="absolute -top-4 -left-4 size-14 ..."></div>
</div>

----------------------------------------

TITLE: Implementing Space Evenly Distribution with Tailwind CSS
DESCRIPTION: Uses justify-evenly utility to create equal spacing around flex items, including both edges of the container. This creates more spacing than justify-around by doubling the space between items.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-content.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<div class="flex justify-evenly ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Applying Inset Shadow TailwindCSS HTML
DESCRIPTION: Demonstrates how to use Tailwind CSS utilities `inset-shadow-2xs`, `inset-shadow-xs`, and `inset-shadow-sm` to apply inset shadows to elements. Dependencies include Tailwind CSS framework. The code snippet shows HTML div elements with classes applying the shadows to demonstrate visual enhancements on a webpage.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_8

LANGUAGE: html
CODE:
<!-- [!code classes:inset-shadow-2xs,inset-shadow-xs,inset-shadow-sm] -->
<div class="inset-shadow-2xs ..."></div>
<div class="inset-shadow-xs ..."></div>
<div class="inset-shadow-sm ..."></div>

----------------------------------------

TITLE: Styling with Shiki for Syntax Highlighting in CSS
DESCRIPTION: Defines CSS variables to set up syntax highlighting colors using the Shiki library, requiring familiarity with CSS and knowledge of Tailwind CSS's theme function.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2022-12-15-protocol-api-documentation-template/index.mdx#2025-04-18_snippet_2

LANGUAGE: css
CODE:
:root {
  --shiki-color-text: theme("colors.white");
  --shiki-token-constant: theme("colors.emerald.300");
  --shiki-token-string: theme("colors.emerald.300");
  --shiki-token-comment: theme("colors.zinc.500");
  --shiki-token-keyword: theme("colors.sky.300");
  --shiki-token-parameter: theme("colors.pink.300");
  --shiki-token-function: theme("colors.violet.300");
  --shiki-token-string-expression: theme("colors.emerald.300");
  --shiki-token-punctuation: theme("colors.zinc.200");
}

----------------------------------------

TITLE: Combining Shadow and Ring Effects in Tailwind CSS
DESCRIPTION: Shows how to combine shadow and ring effects using Tailwind CSS to style buttons. This combination can enhance element appearance without affecting layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v2/index.mdx#2025-04-18_snippet_8

LANGUAGE: HTML
CODE:
<button class="shadow-sm focus:ring-2 ...">
  <!-- Both the shadow and ring will render together -->
</button>

----------------------------------------

TITLE: Implementing Hidden Outline with Tailwind CSS
DESCRIPTION: HTML example demonstrating the use of the 'outline-hidden' utility to hide the default browser outline while preserving it in forced colors mode.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/outline-style.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<input class="focus:border-indigo-600 focus:outline-hidden ..." type="text" />

----------------------------------------

TITLE: Imperatively Closing Popover Components in Vue
DESCRIPTION: Example showing how to use the close function provided through scoped slots to programmatically close a Popover in Vue after completing an asynchronous operation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-4/index.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<template>
  <Popover>
    <PopoverButton>Solutions</PopoverButton>

    <PopoverPanel v-slot="{ close }">
      <button @click="accept(close)">Read and accept</button>
    </PopoverPanel>
  </Popover>
</template>

<script>
  import { Popover, PopoverButton, PopoverPanel } from '@headlessui/vue'

  export default {
    components: { Popover, PopoverButton, PopoverPanel },
    setup() {
      return {
        accept: async (close) => {
          await fetch('/accept-terms', { method: 'POST' })
          close()
        },
      }
    },
  }
</script>

----------------------------------------

TITLE: Styling Input Placeholder Text
DESCRIPTION: Example of styling placeholder text in an input field using the placeholder variant with italic style and custom text color.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_28

LANGUAGE: html
CODE:
<input
  class="placeholder:text-gray-500 placeholder:italic ..."
  placeholder="Search for anything..."
  type="text"
  name="search"
/>

----------------------------------------

TITLE: Negating Styles with the not-* Variant in Tailwind CSS (HTML)
DESCRIPTION: This snippet demonstrates the use of the `not-*` variant in Tailwind CSS to negate styles based on pseudo-classes. Here, `not-hover:opacity-75` applies an opacity of 75% when the element is *not* being hovered over.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_19

LANGUAGE: html
CODE:
<div class="not-hover:opacity-75">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Custom @supports Variants in TailwindCSS
DESCRIPTION: Demonstrates how to create and use custom @supports variants for common feature detection patterns.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_48

LANGUAGE: css
CODE:
@custom-variant supports-grid {
  @supports (display: grid) {
    @slot;
  }
}

LANGUAGE: html
CODE:
<div class="supports-grid:grid">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Nesting Rules for Custom Variants in CSS
DESCRIPTION: This CSS snippet illustrates how to nest rules within custom variants to create more complex conditions. It defines a custom variant `any-hover` that applies styles only when the device supports hovering and the element is hovered over.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_24

LANGUAGE: css
CODE:
@custom-variant any-hover {
  @media (any-hover: hover) {
    &:hover {
      @slot;
    }
  }
}

----------------------------------------

TITLE: Styling with aria-checked in Tailwind CSS
DESCRIPTION: This example demonstrates how to use the `aria-checked` variant to change the background color of an element when its `aria-checked` attribute is set to `true`.  The HTML shows a span element with classes for default and `aria-checked` states.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<span class="bg-gray-600 aria-checked:bg-blue-600" aria-checked="true" role="checkbox">
  <!-- ... -->
</span>

----------------------------------------

TITLE: HTML Example for Transition Behaviors
DESCRIPTION: This HTML snippet provides a visual representation of the transition behaviors through checkboxes and buttons. It highlights how transitions can be controlled based on user input and states.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-behavior.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code classes:transition-discrete] -->
<label class="peer ...">
  <input type="checkbox" checked />
</label>
<button class="hidden transition-all not-peer-has-checked:opacity-0 peer-has-checked:block ...">
  <!-- prettier-ignore -->
  I hide
</button>

<label class="peer ...">
  <input type="checkbox" checked />
</label>
<button class="hidden transition-all transition-discrete not-peer-has-checked:opacity-0 peer-has-checked:block ...">
  I fade out
</button>

----------------------------------------

TITLE: Independent Row and Column Gaps in JSX
DESCRIPTION: This snippet shows how to independently adjust row and column gaps using gap-x-<number> and gap-y-<number> utilities. It displays an example with specified gaps on both axes, demonstrating the flexibility of grid layout adjustments with Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/gap.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<Figure>
<Example>
  {
    <div className="grid grid-cols-1">
      <Stripes border className="col-start-1 row-start-1 rounded-lg" />
      <div className="col-start-1 row-start-1 grid grid-cols-3 gap-x-8 gap-y-4 rounded-lg text-center font-mono text-sm leading-6 font-bold text-white">
        <div className="rounded-lg bg-sky-500 p-4">01</div>
        <div className="rounded-lg bg-sky-500 p-4">02</div>
        <div className="rounded-lg bg-sky-500 p-4">03</div>
        <div className="rounded-lg bg-sky-500 p-4">04</div>
        <div className="rounded-lg bg-sky-500 p-4">05</div>
        <div className="rounded-lg bg-sky-500 p-4">06</div>
      </div>
    </div>
  }
</Example>

```html
<!-- [!code classes:gap-x-8,gap-y-4] -->
<div class="grid grid-cols-3 gap-x-8 gap-y-4">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
  <div>06</div>
</div>
```
</Figure>

----------------------------------------

TITLE: Styling Disabled Inputs with Tailwind CSS
DESCRIPTION: This example shows how to use the disabled variant in Tailwind CSS to style an input element when it's disabled. It applies an opacity of 75% to disabled inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_90

LANGUAGE: html
CODE:
<input class="disabled:opacity-75 ..." />

----------------------------------------

TITLE: Center-Aligned Image Carousel
DESCRIPTION: Example implementation of a horizontally scrolling image carousel with center-aligned snap points using Tailwind CSS utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-snap-align.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="snap-x ...">
  <div class="snap-center ...">
    <img src="/img/vacation-01.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-02.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-03.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-04.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-05.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-06.jpg" />
  </div>
</div>

----------------------------------------

TITLE: Basic Opacity Example
DESCRIPTION: Demonstrates the usage of different opacity utility classes in Tailwind CSS, showing buttons with varying levels of transparency from 100% to 25%.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/opacity.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<button class="bg-indigo-500 opacity-100 ..."></button>
<button class="bg-indigo-500 opacity-75 ..."></button>
<button class="bg-indigo-500 opacity-50 ..."></button>
<button class="bg-indigo-500 opacity-25 ..."></button>

----------------------------------------

TITLE: Applying Styles with Data Attributes in HTML
DESCRIPTION: Demonstrates how to use data attributes to conditionally apply styles in Tailwind CSS. It shows examples of checking for attribute existence and specific values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_56

LANGUAGE: html
CODE:
<div data-active class="border border-gray-300 data-active:border-purple-500">
  <!-- ... -->
</div>

<div data-size="large" class="data-[size=large]:p-8">
  <!-- ... -->
</div>

----------------------------------------

TITLE: HTML Grid Example
DESCRIPTION: This example shows how to use the `grid` utility class in Tailwind CSS to create a grid container.  Grid layout provides a way to create two-dimensional layouts.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/display.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<!-- [!code classes:grid] -->
<div class="grid grid-cols-3 grid-rows-3 gap-4">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Implementing Feature Queries and ARIA States in Tailwind CSS
DESCRIPTION: This snippet demonstrates how Tailwind CSS handles feature queries and ARIA state selectors, including custom support queries and specific ARIA attributes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_80

LANGUAGE: CSS
CODE:
@supports (...)

LANGUAGE: CSS
CODE:
&[aria-busy="true"]

LANGUAGE: CSS
CODE:
&[aria-checked="true"]

LANGUAGE: CSS
CODE:
&[aria-disabled="true"]

----------------------------------------

TITLE: HTML for setting shadow color with Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates setting shadow colors with opacity using Tailwind CSS utilities. It uses `shadow-cyan-500/50`, `shadow-blue-500/50`, and `shadow-indigo-500/50` to apply different colored shadows to button elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<!-- [!code classes:shadow-cyan-500/50,shadow-blue-500/50,shadow-indigo-500/50] -->
<button class="bg-cyan-500 shadow-lg shadow-cyan-500/50 ...">Subscribe</button>
<button class="bg-blue-500 shadow-lg shadow-blue-500/50 ...">Subscribe</button>
<button class="bg-indigo-500 shadow-lg shadow-indigo-500/50 ...">Subscribe</button>

----------------------------------------

TITLE: Tailwind CSS Shadow Color Example
DESCRIPTION: This example demonstrates how to change the color of a drop shadow using Tailwind CSS utilities like `drop-shadow-cyan-500/50` and `drop-shadow-indigo-500/50`. It also shows how to combine these with `drop-shadow-lg` to set the shadow size.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-drop-shadow.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
"<svg class=\"fill-cyan-500 drop-shadow-lg drop-shadow-cyan-500/50 ...\"><!-- ... --></svg>\n<svg class=\"fill-indigo-500 drop-shadow-lg drop-shadow-indigo-500/50 ...\"><!-- ... --></svg>"

----------------------------------------

TITLE: Dividing Elements with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use Tailwind CSS utilities to create a grid layout with specified border colors between child elements. The classes used manage the grid's appearance and the dividing lines.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-color.mdx#2025-04-18_snippet_6

LANGUAGE: jsx
CODE:
<div className="mx-auto grid max-w-lg grid-cols-3 divide-x-4 divide-indigo-500 rounded-lg text-center font-mono text-sm leading-6 font-bold text-gray-400">\n      <div className="p-4 outline-1 -outline-offset-1 outline-gray-900/20 outline-dashed dark:outline-white/20">01</div>\n      <div className="p-4 outline-1 -outline-offset-1 outline-gray-900/20 outline-dashed dark:outline-white/20">02</div>\n      <div className="p-4 outline-1 -outline-offset-1 outline-gray-900/20 outline-dashed dark:outline-white/20">03</div>\n    </div>

LANGUAGE: html
CODE:
<div class="grid grid-cols-3 divide-x-4 divide-indigo-500">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>

----------------------------------------

TITLE: Setting Both Width and Height in HTML with Tailwind CSS
DESCRIPTION: Example of using size utilities like size-px, size-4, and size-full to set both width and height of elements simultaneously.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/height.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<div class="size-16 ...">size-16</div>
<div class="size-20 ...">size-20</div>
<div class="size-24 ...">size-24</div>
<div class="size-32 ...">size-32</div>
<div class="size-40 ...">size-40</div>

----------------------------------------

TITLE: HTML Example of Transition Duration Classes in Tailwind CSS
DESCRIPTION: Shows the HTML markup for buttons with different transition duration classes applied, demonstrating how to use these utilities in a standard HTML context.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-duration.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:duration-150,duration-300,duration-700] -->
<button class="transition duration-150 ease-in-out ...">Button A</button>
<button class="transition duration-300 ease-in-out ...">Button B</button>
<button class="transition duration-700 ease-in-out ...">Button C</button>

----------------------------------------

TITLE: Using Contents Utility with TailwindCSS in HTML
DESCRIPTION: Illustrates the use of `contents` utility in HTML which allows elements’ children to appear as direct children of their grandparent. This snippet uses TailwindCSS for styling layout without any special dependencies.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/display.mdx#2025-04-18_snippet_7

LANGUAGE: HTML
CODE:
<div class="flex ...">
  <div class="flex-1 ...">01</div>
  <div class="contents">
    <div class="flex-1 ...">02</div>
    <div class="flex-1 ...">03</div>
  </div>
  <div class="flex-1 ...">04</div>
</div>

----------------------------------------

TITLE: Implementing Responsive Design with Tailwind CSS
DESCRIPTION: This snippet focuses on setting up responsive design principles by modifying border colors based on screen size using Tailwind CSS utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-color.mdx#2025-04-18_snippet_9

LANGUAGE: jsx
CODE:
<ResponsiveDesign property="border-color" defaultClass="border-blue-500" featuredClass="border-green-500" />

----------------------------------------

TITLE: Tailwind CSS Basic Drop Shadow Example
DESCRIPTION: This example demonstrates the basic usage of Tailwind CSS drop shadow utilities (`drop-shadow-md`, `drop-shadow-lg`, `drop-shadow-xl`) to add different sized drop shadows to SVG elements.  The code applies these classes directly to the SVG elements, creating the shadow effect.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-drop-shadow.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
"<svg class=\"drop-shadow-md ...\">\n  <!-- ... -->\n</svg>\n<svg class=\"drop-shadow-lg ...\">\n  <!-- ... -->\n</svg>\n<svg class=\"drop-shadow-xl ...\">\n  <!-- ... -->\n</svg>"

----------------------------------------

TITLE: Variable Syntax Update in Arbitrary Values
DESCRIPTION: Demonstrates the updated syntax for using CSS variables in arbitrary values, changing from square brackets to parentheses notation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_18

LANGUAGE: html
CODE:
<div class="bg-[--brand-color]"></div>
<div class="bg-(--brand-color)"></div>

----------------------------------------

TITLE: Applying Radial Masks with CSS
DESCRIPTION: Demonstrates how to apply radial masks to images using Tailwind CSS's `mask-radial-*` utilities. This snippet requires the image to have specific mask classes like `mask-radial-from-transparent` and `mask-radial-to-black`, alongside an image source to achieve the intended masking effect. The output is a masked image that gradually fades from transparent to black.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="mx-auto flex items-center p-16 max-sm:p-8">
  <img
    src="/img/keyboard.png"
    class="mask-radial-from-transparent mask-radial-from-15% mask-radial-to-black mask-radial-to-55% mask-radial-at-right ..."
  />
  <div class="font-medium">
    <p class="font-mono text-xs text-blue-500 uppercase dark:text-blue-400">Speed</p>
    <p class="mt-2 text-base text-gray-700 dark:text-gray-300">Built for power users</p>
    <p class="mt-1 text-sm leading-relaxed text-balance text-gray-500">
      Work faster than ever with our keyboard shortcuts
    </p>
  </div>
</div>

----------------------------------------

TITLE: JSX Grid Row Span Example
DESCRIPTION: This JSX code shows an example of using `row-span` utilities to create a grid layout with items spanning multiple rows. It leverages Tailwind CSS classes for styling and layout, showcasing how to create a visually appealing grid structure.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-row.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
"<div className=\"grid grid-cols-1\">\n      <Stripes border className=\"col-start-1 row-start-1 rounded-lg\" />\n      <div className=\"col-start-1 row-start-1 grid grid-flow-col grid-rows-3 gap-4 rounded-lg text-center font-mono text-sm leading-6 font-bold text-white\">\n        <div className=\"row-span-3 grid place-content-center rounded-lg bg-fuchsia-500 p-4\">01</div>\n        <div className=\"col-span-2 grid place-content-center rounded-lg bg-fuchsia-300 p-4 dark:bg-fuchsia-800 dark:text-fuchsia-400\">\n          02\n        </div>\n        <div className=\"col-span-2 row-span-2 grid place-content-center rounded-lg bg-fuchsia-500 p-4\">03</div>\n      </div>\n    </div>"

----------------------------------------

TITLE: Basic Example of Border Colors - HTML
DESCRIPTION: This HTML snippet demonstrates how to use Tailwind CSS classes to set different border colors on elements (`border-indigo-500`, `border-purple-500`, `border-sky-500`). The classes are added to `<div>` elements to customize their border appearances based on provided utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-color.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<div class="border-4 border-indigo-500 ..."></div>
<div class="border-4 border-purple-500 ..."></div>
<div class="border-4 border-sky-500 ..."></div>

----------------------------------------

TITLE: Defining Media Query Breakpoints in TailwindCSS
DESCRIPTION: Standard media query breakpoints used in TailwindCSS for responsive design, including both min-width and max-width queries.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_73

LANGUAGE: CSS
CODE:
@media (width >= 40rem) // sm
@media (width >= 48rem) // md
@media (width >= 64rem) // lg
@media (width >= 80rem) // xl
@media (width >= 96rem) // 2xl
@media (width < 40rem)  // max-sm
@media (width < 48rem)  // max-md
@media (width < 64rem)  // max-lg
@media (width < 80rem)  // max-xl
@media (width < 96rem)  // max-2xl

----------------------------------------

TITLE: Basic Line Clamp Example in HTML
DESCRIPTION: Example showing how to use line-clamp-3 utility class to truncate text after 3 lines in a blog article card.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/line-clamp.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:line-clamp-3] -->
<article>
  <time>Mar 10, 2020</time>
  <h2>Boost your conversion rate</h2>
  <p class="line-clamp-3">
    Nulla dolor velit adipisicing duis excepteur esse in duis nostrud occaecat mollit incididunt deserunt sunt. Ut ut
    sunt laborum ex occaecat eu tempor labore enim adipisicing minim ad. Est in quis eu dolore occaecat excepteur fugiat
    dolore nisi aliqua fugiat enim ut cillum. Labore enim duis nostrud eu. Est ut eiusmod consequat irure quis deserunt
    ex. Enim laboris dolor magna pariatur. Dolor et ad sint voluptate sunt elit mollit officia ad enim sit consectetur
    enim.
  </p>
  <div>
    <img src="/img/lindsay.jpg" />
    Lindsay Walton
  </div>
</article>

----------------------------------------

TITLE: Adding Custom Colors to Tailwind CSS Theme
DESCRIPTION: Demonstrates how to add custom colors to a Tailwind CSS project using the @theme directive and the --color-* namespace.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_11

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --color-midnight: #121063;
  --color-tahiti: #3ab7bf;
  --color-bermuda: #78dcca;
}

----------------------------------------

TITLE: Using justify-end with Flexbox in HTML
DESCRIPTION: Example of using the justify-end utility to position items at the end of a flex container's main axis. This creates right-aligned content in a left-to-right layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-content.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="flex justify-end ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Defining Custom Color Theme Variable in TailwindCSS
DESCRIPTION: Example showing how to define a custom color theme variable '--color-mint-500' using the @theme directive, which automatically creates corresponding utility classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_0

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --color-mint-500: oklch(0.72 0.11 178);
}

----------------------------------------

TITLE: Using Custom Breakpoints in HTML
DESCRIPTION: Example of using custom breakpoints in HTML markup with Tailwind CSS classes for responsive grid layouts.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_8

LANGUAGE: html
CODE:
<div class="grid xs:grid-cols-2 3xl:grid-cols-6">
  <!-- ... -->
</div>

----------------------------------------

TITLE: 3D Cube Example with Backface Visibility
DESCRIPTION: Interactive example demonstrating backface-hidden and backface-visible utilities on a 3D cube with different transformations and rotations
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backface-visibility.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<div className="size-20 rotate-[0.75_1_0.75_45deg] transform-3d">
  <div className="absolute inset-0 translate-z-12 rotate-x-0 bg-sky-300/75 backface-hidden">
    1
  </div>
  <div className="absolute inset-0 -translate-z-12 rotate-y-180 backface-visible">
    2
  </div>
</div>

----------------------------------------

TITLE: Configuring Data Attribute Shortcuts in Tailwind CSS
DESCRIPTION: This snippet shows how to configure shortcuts for common data attribute selectors in the `tailwind.config.js` file. It defines a shortcut for the `data-checked` attribute.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_11

LANGUAGE: javascript
CODE:
// tailwind.config.js
module.exports = {
  theme: {
    data: {
      checked: 'ui~="checked"',
    },
  },
  // ...
};

----------------------------------------

TITLE: Tailwind CSS API Table - font-stretch
DESCRIPTION: This table defines the available Tailwind CSS classes for the `font-stretch` property and their corresponding CSS values. It includes predefined values like `ultra-condensed`, `extra-condensed`, `condensed`, `semi-condensed`, `normal`, `semi-expanded`, `expanded`, `extra-expanded`, and `ultra-expanded`, as well as options for using percentages, custom properties, and arbitrary values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-stretch.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
"font-stretch-ultra-condensed", "font-stretch: ultra-condensed; /* 50% */"

LANGUAGE: typescript
CODE:
"font-stretch-extra-condensed", "font-stretch: extra-condensed; /* 62.5% */"

LANGUAGE: typescript
CODE:
"font-stretch-condensed", "font-stretch: condensed; /* 75% */"

LANGUAGE: typescript
CODE:
"font-stretch-semi-condensed", "font-stretch: semi-condensed; /* 87.5% */"

LANGUAGE: typescript
CODE:
"font-stretch-normal", "font-stretch: normal; /* 100% */"

LANGUAGE: typescript
CODE:
"font-stretch-semi-expanded", "font-stretch: semi-expanded; /* 112.5% */"

LANGUAGE: typescript
CODE:
"font-stretch-expanded", "font-stretch: expanded; /* 125% */"

LANGUAGE: typescript
CODE:
"font-stretch-extra-expanded", "font-stretch: extra-expanded; /* 150% */"

LANGUAGE: typescript
CODE:
"font-stretch-ultra-expanded", "font-stretch: ultra-expanded; /* 200% */"

LANGUAGE: typescript
CODE:
"font-stretch-<percentage>", "font-stretch: <percentage>;"

LANGUAGE: typescript
CODE:
"font-stretch-(<custom-property>)", "font-stretch: var(<custom-property>);"

LANGUAGE: typescript
CODE:
"font-stretch-[<value>]", "font-stretch: <value>;"

----------------------------------------

TITLE: Defining Container Query Breakpoints in TailwindCSS
DESCRIPTION: Container query breakpoints for component-level responsive design, ranging from 3xs to 7xl sizes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_74

LANGUAGE: CSS
CODE:
@container (width >= 16rem)  // @3xs
@container (width >= 18rem)  // @2xs
@container (width >= 20rem)  // @xs
@container (width >= 24rem)  // @sm
@container (width >= 28rem)  // @md
@container (width >= 32rem)  // @lg
@container (width >= 36rem)  // @xl
@container (width >= 42rem)  // @2xl
@container (width >= 48rem)  // @3xl
@container (width >= 56rem)  // @4xl
@container (width >= 64rem)  // @5xl
@container (width >= 72rem)  // @6xl
@container (width >= 80rem)  // @7xl
@container (width < 16rem)   // @max-3xs
@container (width < 18rem)   // @max-2xs
@container (width < 20rem)   // @max-xs
@container (width < 24rem)   // @max-sm

----------------------------------------

TITLE: Hover State Background Color Change in HTML
DESCRIPTION: This snippet demonstrates how to apply background color changes on hover using Tailwind CSS. The example involves a button with the default background color `bg-indigo-500`, which transitions to `hover:bg-fuchsia-500` when hovered over. It effectively provides a visual cue for user interactions. Inputs and outputs are not applicable as it is intended for style demonstration.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-color.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<TargetingSpecificStates property="background-color">

<Figure>

<Example>
  {
    <button
      type="button"
      tabIndex="-1"
      className="mx-auto block rounded-md bg-indigo-500 px-3 py-2 text-sm font-semibold text-white hover:bg-fuchsia-500 focus:outline-none"
    >
      Save changes
    </button>
  }
</Example>

<pre><code class="language-html">
<!-- [!code classes:hover:bg-fuchsia-500] -->
<button class="bg-indigo-500 hover:bg-fuchsia-500 ...">Save changes</button>
</code></pre>

</Figure>

</TargetingSpecificStates>

----------------------------------------

TITLE: React Component Example with Tailwind CSS Drop Shadow Opacity
DESCRIPTION: This JSX snippet illustrates a React component utilizing Tailwind CSS to adjust the opacity of drop shadows (`drop-shadow-xl`, `drop-shadow-xl/25`, `drop-shadow-xl/50`) applied to SVG elements.  The `className` prop on each SVG component specifies the shadow class and opacity modifier.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-drop-shadow.mdx#2025-04-18_snippet_4

LANGUAGE: JSX
CODE:
"{
    <div className=\"grid grid-cols-3 items-end gap-8 bg-white p-8 max-sm:grid-cols-1\">\n      <div className=\"flex flex-col items-center\">\n        <p className=\"mb-3 text-center font-mono text-xs font-medium text-gray-500\">drop-shadow-xl</p>\n        <svg className=\"size-28 text-gray-950/100 drop-shadow-xl\" viewBox=\"0 0 84 84\">\n          <path\n            d=\"M22.0992 77L2.19922 42.5L22.0992 8H61.8992L81.7992 42.5L61.8992 77H22.0992Z\"\n            className=\"fill-white\"\n          />\n        </svg>\n      </div>\n      <div className=\"flex flex-col items-center\">\n        <p className=\"mb-3 text-center font-mono text-xs font-medium text-gray-500\">drop-shadow-xl/25</p>\n        <svg className=\"size-28 text-gray-950/100 drop-shadow-xl/25\" viewBox=\"0 0 84 84\">\n          <path\n            d=\"M22.0992 77L2.19922 42.5L22.0992 8H61.8992L81.7992 42.5L61.8992 77H22.0992Z\"\n            className=\"fill-white\"\n          />\n        </svg>\n      </div>\n      <div className=\"flex flex-col items-center\">\n        <p className=\"mb-3 text-center font-mono text-xs font-medium text-gray-500\">drop-shadow-xl/50</p>\n        <svg className=\"size-28 text-gray-950/100 drop-shadow-xl/50\" viewBox=\"0 0 84 84\">\n          <path\n            d=\"M22.0992 77L2.19922 42.5L22.0992 8H61.8992L81.7992 42.5L61.8992 77H22.0992Z\"\n            className=\"fill-white\"\n          />\n        </svg>\n      </div>\n    </div>
  }"

----------------------------------------

TITLE: Tailwind CSS Remove Drop Shadow Example
DESCRIPTION: This example demonstrates how to remove an existing drop shadow using the `drop-shadow-none` utility, specifically in a dark mode context (`dark:drop-shadow-none`).  This is helpful for toggling shadows based on the current theme.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-drop-shadow.mdx#2025-04-18_snippet_7

LANGUAGE: HTML
CODE:
"<svg class=\"drop-shadow-lg dark:drop-shadow-none\">\n  <!-- ... -->\n</svg>"

----------------------------------------

TITLE: Generating ESM Configuration File
DESCRIPTION: Command to explicitly generate a Tailwind CSS configuration file using ES Module syntax.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_3

LANGUAGE: sh
CODE:
npx tailwindcss init --esm

----------------------------------------

TITLE: Preventing items from shrinking in Tailwind CSS
DESCRIPTION: This example shows how to use the `shrink-0` class to prevent a flex item from shrinking. This class sets the `flex-shrink` property to `0`, ensuring that the item maintains its specified width, even when the container has limited space.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-shrink.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="flex ...">
  <div class="h-16 flex-1 ...">01</div>
  <div class="h-16 w-32 shrink-0 ...">02</div>
  <div class="h-16 flex-1 ...">03</div>
</div>

----------------------------------------

TITLE: Conic and Radial Gradients in Tailwind CSS
DESCRIPTION: This snippet shows how to create conic and radial gradients using the new `bg-conic-*` and `bg-radial-*` utilities in Tailwind CSS. The code uses `bg-conic/[in_hsl_longer_hue]` for a conic gradient and `bg-radial-[at_25%_25%]` for a radial gradient. These utilities work with the `from-*`, `via-*`, and `to-*` utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_17

LANGUAGE: html
CODE:
<div class="size-24 rounded-full bg-conic/[in_hsl_longer_hue] from-red-600 to-red-600"></div>
<div class="size-24 rounded-full bg-radial-[at_25%_25%] from-white to-zinc-900 to-75%"></div>

----------------------------------------

TITLE: Using Percentage-Based Max-Height Utilities in Tailwind CSS
DESCRIPTION: This code snippet illustrates the use of percentage-based max-height utilities in Tailwind CSS, including fractional values and full height.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/max-height.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="h-96 ...">
  <div class="h-full max-h-9/10 ...">max-h-9/10</div>
  <div class="h-full max-h-3/4 ...">max-h-3/4</div>
  <div class="h-full max-h-1/2 ...">max-h-1/2</div>
  <div class="h-full max-h-1/4 ...">max-h-1/4</div>
  <div class="h-full max-h-full ...">max-h-full</div>
</div>

----------------------------------------

TITLE: Adding a Conic Mask in Tailwind CSS - HTML
DESCRIPTION: This snippet illustrates the usage of `mask-conic-from-<value>` and `mask-conic-to-<value>` classes in Tailwind CSS to create conic gradient masks. It demonstrates how these classes can be combined with standard HTML elements to achieve a visually appealing UI.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_15

LANGUAGE: html
CODE:
<!-- [!code classes:mask-conic-from-75%,mask-conic-to-75%] -->
<div class="flex items-center gap-5 rounded-xl bg-white p-4 shadow-lg ring-1 ring-black/5 dark:bg-gray-800">
  <div class="grid grid-cols-1 grid-rows-1">
    <div class="border-4 border-gray-100 dark:border-gray-700 ..."></div>
    <div class="border-4 border-amber-500 mask-conic-from-75% mask-conic-to-75% dark:border-amber-400 ..."></div>
  </div>
  <div class="w-0 flex-1 text-sm text-gray-950 dark:text-white">
    <p class="font-medium">Storage used: 75%</p>
    <p class="mt-1 text-gray-500 dark:text-gray-400"><span class="font-medium">0.48 GB</span> out of 2 GB remaining</p>
  </div>
</div>

----------------------------------------

TITLE: Horizontal and Vertical Sides Border Color - HTML
DESCRIPTION: This snippet demonstrates setting border colors on horizontal and vertical sides using utilities like `border-x-indigo-500` and `border-y-indigo-500`. It combines these utilities to apply uniform effects on the targeted sides.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-color.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<div class="border-4 border-indigo-200 border-x-indigo-500 ..."></div>
<div class="border-4 border-indigo-200 border-y-indigo-500 ..."></div>

----------------------------------------

TITLE: Custom Checkbox with Appearance Control
DESCRIPTION: Example demonstrating how to create custom checkboxes with appearance utilities and forced-colors mode support for accessibility
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/appearance.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<label>
  <div>
    <input type="checkbox" class="appearance-none forced-colors:appearance-auto ..." />
    <svg class="invisible peer-checked:visible forced-colors:hidden ...">
      <!-- ... -->
    </svg>
  </div>
  Falls back to default appearance
</label>

<label>
  <div>
    <input type="checkbox" class="appearance-none ..." />
    <svg class="invisible peer-checked:visible ...">
      <!-- ... -->
    </svg>
  </div>
  Keeps custom appearance
</label>

----------------------------------------

TITLE: Styling User-Valid Inputs with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the user-valid variant in Tailwind CSS to style an input when it's valid and the user has interacted with it. It applies a green border to user-valid inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_99

LANGUAGE: html
CODE:
<input required class="border user-valid:border-green-500" />

----------------------------------------

TITLE: Using Dynamic Viewport Units in HTML with Tailwind CSS
DESCRIPTION: This example demonstrates the usage of the new dynamic viewport unit class 'h-dvh' in Tailwind CSS v3.4. It creates a full-height element that adjusts to mobile browser UI changes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-4/index.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="h-dvh">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Composing Variants in Tailwind CSS v4
DESCRIPTION: This HTML snippet demonstrates the new composable variants feature in Tailwind CSS v4, showing how group-* can now compose with other variants like has-* and focus.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-alpha/index.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="group">
  <div class="group-has-[&:focus]:opacity-100"> <!-- [!code --] -->
  <div class="group-has-focus:opacity-100"> <!-- [!code ++] -->
      <!-- ... -->
    </div>
  </div>
</div>

----------------------------------------

TITLE: Applying Styles with prefers-contrast Variant in HTML
DESCRIPTION: This snippet demonstrates how to use the contrast-more variant in Tailwind CSS to conditionally add styles when the user has requested more contrast. It includes an input field and a label with contrast-specific classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_39

LANGUAGE: html
CODE:
<label class="block">
  <span class="block text-sm font-medium text-gray-700">Social Security Number</span>
  <input
    class="border-gray-200 placeholder-gray-400 contrast-more:border-gray-400 contrast-more:placeholder-gray-500 ..."
  />
  <p class="text-gray-600 opacity-10 contrast-more:opacity-100 ...">We need this to steal your identity.</p>
</label>

----------------------------------------

TITLE: Disabling Default Colors in Tailwind CSS
DESCRIPTION: Demonstrates how to disable specific default colors in Tailwind CSS by setting their theme namespace to 'initial' using the @theme directive.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_13

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --color-lime-*: initial;
  --color-fuchsia-*: initial;
}

----------------------------------------

TITLE: Toggling Table Row Visibility Using Tailwind CSS in HTML
DESCRIPTION: This HTML snippet demonstrates the use of Tailwind CSS utilities, such as `collapse` and `hidden`, to control the visibility of HTML table rows without disrupting the table's overall layout. The example showcases the visibility of rows being controlled dynamically by applying these classes. No external dependencies are required, aside from including Tailwind CSS in your project. The input is static HTML with optional Tailwind utility classes applied to table rows. The output is a modified table display based on the classes applied.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/visibility.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:collapse] -->
<table>
  <thead>
    <tr>
      <th>Invoice #</th>
      <th>Client</th>
      <th>Amount</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>#100</td>
      <td>Pendant Publishing</td>
      <td>$2,000.00</td>
    </tr>
    <tr class="collapse">
      <td>#101</td>
      <td>Kruger Industrial Smoothing</td>
      <td>$545.00</td>
    </tr>
    <tr>
      <td>#102</td>
      <td>J. Peterman</td>
      <td>$10,000.25</td>
    </tr>
  </tbody>
</table>

----------------------------------------

TITLE: Individual Border Sides Example - HTML
DESCRIPTION: This HTML snippet utilizes Tailwind CSS classes to set border colors for individual sides of elements (`border-t-indigo-500`, `border-r-indigo-500`, `border-b-indigo-500`, `border-l-indigo-500`). Each class targets a specific border side, enhancing customization.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-color.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<div class="border-4 border-indigo-200 border-t-indigo-500 ..."></div>
<div class="border-4 border-indigo-200 border-r-indigo-500 ..."></div>
<div class="border-4 border-indigo-200 border-b-indigo-500 ..."></div>
<div class="border-4 border-indigo-200 border-l-indigo-500 ..."></div>

----------------------------------------

TITLE: Accessibility Fix for Unstyled Lists in HTML
DESCRIPTION: Shows how to maintain accessibility for unstyled lists by adding a 'list' role to ensure screen readers announce them properly as lists.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_7

LANGUAGE: HTML
CODE:
<ul role="list">
  <li>One</li>
  <li>Two</li>
  <li>Three</li>
</ul>

----------------------------------------

TITLE: Applying Tailwind CSS Object Position Utilities to Images
DESCRIPTION: This snippet demonstrates various object position utilities in Tailwind CSS applied to image elements. It showcases different positioning options such as top-right, left, center, right, bottom-left, bottom, and bottom-right.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-position.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<img class="size-24 object-top-right ..." src="/img/mountains.jpg" />
<img class="size-24 object-left ..." src="/img/mountains.jpg" />
<img class="size-24 object-center ..." src="/img/mountains.jpg" />
<img class="size-24 object-right ..." src="/img/mountains.jpg" />
<img class="size-24 object-bottom-left ..." src="/img/mountains.jpg" />
<img class="size-24 object-bottom ..." src="/img/mountains.jpg" />
<img class="size-24 object-bottom-right ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Multi-column Layout Implementation
DESCRIPTION: Implementation of a responsive multi-column layout using Tailwind CSS columns utilities. Demonstrates column layout switching from 1 column on mobile to 3 columns on larger screens.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3/index.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div class="columns-1 sm:columns-3 ...">
  <p>...</p>
  <!-- ... -->
</div>

----------------------------------------

TITLE: Basic Max-Width Example Using Numeric Scale in HTML
DESCRIPTION: Example showing how to apply max-width utilities based on the spacing scale using classes like max-w-24 and max-w-96. This demonstrates how elements can have a fixed maximum width while maintaining their relative sizing.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/max-width.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<div class="w-full max-w-96 ...">max-w-96</div>
<div class="w-full max-w-80 ...">max-w-80</div>
<div class="w-full max-w-64 ...">max-w-64</div>
<div class="w-full max-w-48 ...">max-w-48</div>
<div class="w-full max-w-40 ...">max-w-40</div>
<div class="w-full max-w-32 ...">max-w-32</div>
<div class="w-full max-w-24 ...">max-w-24</div>

----------------------------------------

TITLE: Adding Scrollbars to Overflowing Content with Tailwind CSS
DESCRIPTION: Use the overflow-auto utility to add scrollbars to an element when its content overflows. Scrollbars will only appear if scrolling is necessary, unlike overflow-scroll which always shows them.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overflow.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="overflow-auto ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Targeting Custom Boolean Data Attributes
DESCRIPTION: This HTML code snippet demonstrates targeting custom boolean data attributes in Tailwind CSS v4.0 without needing to define them. Uses `data-current:opacity-100` as a class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_9

LANGUAGE: html
CODE:
<!-- [!code filename:HTML] -->
<!-- [!code classes:data-current:opacity-100] -->
<div data-current class="opacity-75 data-current:opacity-100">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Background Size Cover Example (Tailwind CSS)
DESCRIPTION: This example demonstrates how to use the `bg-cover` utility class in Tailwind CSS to scale a background image to cover the entire container. The image will be cropped if necessary to fill the space. This uses the `bg-[url(...)]` to set the image, and `bg-center` to center the image within the container.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-size.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
"<div class=\"bg-[url(/img/mountains.jpg)] bg-cover bg-center\"></div>"

----------------------------------------

TITLE: Using Arbitrary Values in TailwindCSS HTML
DESCRIPTION: Shows how to use square bracket notation for arbitrary values in class names, including responsive and interactive modifiers.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="top-[117px]">
  <!-- ... -->
</div>

LANGUAGE: html
CODE:
<div class="top-[117px] lg:top-[344px]">
  <!-- ... -->
</div>

LANGUAGE: html
CODE:
<div class="bg-[#bada55] text-[22px] before:content-['Festivus']">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Creating a Fully Custom Tailwind CSS Theme
DESCRIPTION: This snippet demonstrates how to disable the default theme entirely and create a custom theme with unique variables.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_15

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --*: initial;

  --spacing: 4px;

  --font-body: Inter, sans-serif;

  --color-lagoon: oklch(0.72 0.11 221.19);
  --color-coral: oklch(0.74 0.17 40.24);
  --color-driftwood: oklch(0.79 0.06 74.59);
  --color-tide: oklch(0.49 0.08 205.88);
  --color-dusk: oklch(0.82 0.15 72.09);
}

----------------------------------------

TITLE: Creating Custom Data Attribute Variants in CSS
DESCRIPTION: Shows how to configure shortcuts for common data attributes by creating a new variant in the data-* namespace using CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_57

LANGUAGE: css
CODE:
@import "tailwindcss";

@custom-variant data-checked (&[data-ui~="checked"]);

----------------------------------------

TITLE: HTML Example Using Tailwind Translate Utilities with spacing
DESCRIPTION: This HTML snippet demonstrates the usage of Tailwind CSS translate utilities with spacing scales. It showcases how to use `translate-<number>` utilities like `translate-2` and `-translate-6` to translate an image element, creating visual effects by positioning the image relative to its original location.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/translate.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:-translate-6,translate-2,translate-8] -->
<img class="-translate-6 ..." src="/img/mountains.jpg" />
<img class="translate-2 ..." src="/img/mountains.jpg" />
<img class="translate-8 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Applying Not Pseudo-Class with Buttons in HTML
DESCRIPTION: This snippet demonstrates how to apply the `not-` variant to a button to change its hover styles when it is not focused. The button is styled using Tailwind CSS classes for background color and padding.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_12

LANGUAGE: html
CODE:
<button class="bg-indigo-600 hover:not-focus:bg-indigo-700">
  <!-- ... -->
</button>

----------------------------------------

TITLE: Styling User-Invalid Inputs with Tailwind CSS
DESCRIPTION: This example shows how to use the user-invalid variant in Tailwind CSS to style an input when it's invalid and the user has interacted with it. It applies a red border to user-invalid inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_100

LANGUAGE: html
CODE:
<input required class="border user-invalid:border-red-500" />

----------------------------------------

TITLE: Using Percentage-Based Width Utilities in HTML
DESCRIPTION: This HTML snippet illustrates the use of percentage-based width utilities in Tailwind CSS, such as w-full, w-1/2, w-2/5, etc. It shows how to create responsive layouts using fractional width classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/width.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="flex ...">
  <div class="w-1/2 ...">w-1/2</div>
  <div class="w-1/2 ...">w-1/2</div>
</div>
<div class="flex ...">
  <div class="w-2/5 ...">w-2/5</div>
  <div class="w-3/5 ...">w-3/5</div>
</div>
<div class="flex ...">
  <div class="w-1/3 ...">w-1/3</div>
  <div class="w-2/3 ...">w-2/3</div>
</div>
<div class="flex ...">
  <div class="w-1/4 ...">w-1/4</div>
  <div class="w-3/4 ...">w-3/4</div>
</div>
<div class="flex ...">
  <div class="w-1/5 ...">w-1/5</div>
  <div class="w-4/5 ...">w-4/5</div>
</div>
<div class="flex ...">
  <div class="w-1/6 ...">w-1/6</div>
  <div class="w-5/6 ...">w-5/6</div>
</div>
<div class="w-full ...">w-full</div>

----------------------------------------

TITLE: HTML with Tailwind CSS Rounded Corner Class Examples
DESCRIPTION: This HTML snippet showcases how to apply Tailwind CSS classes to round individual corners of an element. The classes `rounded-tl-lg`, `rounded-tr-lg`, `rounded-br-lg`, and `rounded-bl-lg` are used to round the top-left, top-right, bottom-right, and bottom-left corners respectively.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_8

LANGUAGE: html
CODE:
<!-- [!code classes:rounded-tl-lg,rounded-tr-lg,rounded-br-lg,rounded-bl-lg] -->
<div class="rounded-tl-lg ..."></div>
<div class="rounded-tr-lg ..."></div>
<div class="rounded-br-lg ..."></div>
<div class="rounded-bl-lg ..."></div>

----------------------------------------

TITLE: Using justify-center with Flexbox in HTML
DESCRIPTION: Example of using the justify-center utility to center items along a flex container's main axis. Items are centered in the available space regardless of container size.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-content.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="flex justify-center ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
</div>

----------------------------------------

TITLE: Closing Disclosure Components in Vue with Headless UI
DESCRIPTION: Example showing how to close a Disclosure component in Vue by using DisclosureButton within a DisclosurePanel. Demonstrates importing and registering the necessary components.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-4/index.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<template>
  <Disclosure>
    <DisclosureButton>Open mobile menu</DisclosureButton>
    <DisclosurePanel>
      <DisclosureButton :as="MyLink" href="/home">Home</DisclosureButton>
      <!-- ... -->
    </DisclosurePanel>
  </Disclosure>
</template>

<script>
  import {
    Disclosure,
    DisclosureButton,
    DisclosurePanel,
  } from '@headlessui/vue'
  import MyLink from './MyLink'

  export default {
    components: { Disclosure, DisclosureButton, DisclosurePanel, MyLink },
  }
</script>

----------------------------------------

TITLE: Linear Mask Gradient Utilities for TailwindCSS
DESCRIPTION: Defines linear gradient mask utilities for left/right (x-axis) and top/bottom (y-axis) directions with customizable values including numbers, percentages, colors and custom properties
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_2

LANGUAGE: css
CODE:
mask-image: linear-gradient(to left, black var(--tw-mask-left-from), transparent <value>);

----------------------------------------

TITLE: Implementing Bounce Animation in HTML
DESCRIPTION: Example of using animate-bounce utility class for creating a bouncing scroll indicator.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/animation.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<svg class="size-6 animate-bounce ...">
  <!-- ... -->
</svg>

----------------------------------------

TITLE: Implementing Proximity Scroll Snapping with Tailwind CSS in HTML
DESCRIPTION: This HTML snippet shows how to create a horizontally scrollable container with proximity-based snap points using Tailwind CSS utilities. It includes placeholder images that snap into place when scrolled.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-snap-type.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<div class="snap-x snap-proximity ...">
  <div class="snap-center ...">
    <img src="/img/vacation-01.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-02.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-03.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-04.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-05.jpg" />
  </div>
</div>

----------------------------------------

TITLE: Using Literal Values in CSS Utility
DESCRIPTION: This CSS snippet demonstrates how to support literal values within a CSS utility. It uses the `--value('literal')` syntax to allow specific predefined string values like 'inherit', 'initial', and 'unset'.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_13

LANGUAGE: css
CODE:
/* [!code filename:CSS] */
@utility tab-* {
  tab-size: --value('inherit', 'initial', 'unset');
}

----------------------------------------

TITLE: Conditionally Apply Transition with Prefers-Reduced-Motion Variants
DESCRIPTION: The HTML snippets demonstrate how to use Tailwind CSS variants such as motion-reduce and motion-safe to adjust CSS transitions based on the prefers-reduced-motion media feature. This feature helps accommodate users who prefer less motion, offering better accessibility. The samples show different combinations, including responsiveness and pseudo-class targeting.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-6/index.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="transition duration-150 ease-in-out motion-reduce:transition-none ... ..."></div>

LANGUAGE: html
CODE:
<div class="duration-150 ease-in-out motion-safe:transition ... ..."></div>

LANGUAGE: html
CODE:
<div class="sm:motion-reduce:translate-y-0"></div>

LANGUAGE: html
CODE:
<div class="motion-reduce:hover:translate-y-0"></div>

LANGUAGE: html
CODE:
<div class="sm:motion-reduce:hover:translate-y-0"></div>

----------------------------------------

TITLE: Nesting Groups with Tailwind CSS in Svelte
DESCRIPTION: Demonstrates how to style a list of people using Tailwind CSS class variants based on nested group states in a Svelte component. This snippet includes classes for visibility based on hover states and utilizes responsive design techniques.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_15

LANGUAGE: svelte
CODE:
{
  <div className="px-4">
    <ul
      role="list"
      className="mx-auto max-w-md border-x border-x-gray-200 p-2 dark:border-x-gray-800 dark:bg-gray-950/10"
    >
      <li className="group/item relative flex items-center justify-between rounded-xl p-4 hover:bg-gray-100 dark:hover:bg-white/5">
        <div className="flex gap-4">
          <div className="flex-shrink-0">
            <img
              className="h-12 w-12 rounded-full"
              src="https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
              alt=""
            />
          </div>
          <div className="w-full text-sm leading-6">
            <a href="#" className="font-semibold text-gray-900 dark:text-white">
              <span className="absolute inset-0 rounded-xl" aria-hidden="true"></span>Leslie Abbott
            </a>
            <div className="text-gray-500">Co-Founder / CEO</div>
          </div>
        </div>
        <a
          href="#"
          className="group/edit invisible relative flex items-center rounded-full py-1 pr-3 pl-4 text-sm whitespace-nowrap text-gray-500 transition group-hover/item:visible hover:bg-gray-200 dark:text-gray-400"
        >
          <span className="font-semibold transition group-hover/edit:text-gray-700">Call</span>
          <svg
            className="mt-px h-5 w-5 text-gray-400 transition group-hover/edit:translate-x-0.5 group-hover/edit:text-gray-500"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fillRule="evenodd"
              d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
              clipRule="evenodd"
            />
          </svg>
        </a>
      </li>
      <li className="group/item relative flex items-center justify-between rounded-xl p-4 hover:bg-gray-100 dark:hover:bg-white/5">
        <div className="flex gap-4">
          <div className="flex-shrink-0">
            <img
              className="h-12 w-12 rounded-full"
              src="https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
              alt=""
            />
          </div>
          <div className="w-full text-sm leading-6">
            <a href="#" className="font-semibold text-gray-900 dark:text-white">
              <span className="absolute inset-0 rounded-xl" aria-hidden="true"></span>Hector Adams
            </a>
            <div className="text-gray-500">VP, Marketing</div>
          </div>
        </div>
        <a
          href="#"
          className="group/edit invisible relative flex items-center rounded-full py-1 pr-3 pl-4 text-sm whitespace-nowrap text-gray-500 transition group-hover/item:visible hover:bg-gray-200 dark:text-gray-400"
        >
          <span className="font-semibold transition group-hover/edit:text-gray-700">Call</span>
          <svg
            className="mt-px h-5 w-5 text-gray-400 transition group-hover/edit:translate-x-0.5 group-hover/edit:text-gray-500"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fillRule="evenodd"
              d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
              clipRule="evenodd"
            />
          </svg>
        </a>
      </li>
      <li className="group/item relative flex items-center justify-between rounded-xl p-4 hover:bg-gray-100 dark:hover:bg-white/5">
        <div className="flex gap-4">
          <div className="flex-shrink-0">
            <img
              className="h-12 w-12 rounded-full"
              src="https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
              alt=""
            />
          </div>
          <div className="w-full text-sm leading-6">
            <a href="#" className="font-semibold text-gray-900 dark:text-white">
              <span className="absolute inset-0 rounded-xl" aria-hidden="true"></span>Blake Alexander
            </a>
            <div className="text-gray-500">Account Coordinator</div>
          </div>
        </div>
        <a
          href="#"
          className="group/edit invisible relative flex items-center rounded-full py-1 pr-3 pl-4 text-sm whitespace-nowrap text-gray-500 transition group-hover/item:visible hover:bg-gray-200 dark:text-gray-400"
        >
          <span className="font-semibold transition group-hover/edit:text-gray-700">Call</span>
          <svg
            className="mt-px h-5 w-5 text-gray-400 transition group-hover/edit:translate-x-0.5 group-hover/edit:text-gray-500"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fillRule="evenodd"
              d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
              clipRule="evenodd"
            />
          </svg>
        </a>
      </li>
    </ul>
  </div>
}

----------------------------------------

TITLE: Implementing the wrap-break-word Utility in HTML
DESCRIPTION: This snippet demonstrates how to use the 'wrap-break-word' utility to ensure long words break correctly in an element without disrupting the layout. It requires Tailwind CSS v4.1 or above. The input is plain HTML with the Tailwind utility class applied for styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<!-- [!code classes:wrap-break-word] -->
<p class="wrap-break-word">The longest word in any of the major...</p>

----------------------------------------

TITLE: Using justify-self-stretch with Tailwind CSS in JSX
DESCRIPTION: Example of a grid layout using Tailwind CSS classes in a React JSX component. The example demonstrates the justify-self-stretch utility applied to a grid item, causing it to fill its grid area on the inline axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-self.mdx#2025-04-18_snippet_6

LANGUAGE: jsx
CODE:
<div className="grid auto-rows-fr grid-cols-3 justify-items-stretch gap-4 text-center font-mono text-sm leading-6 font-bold text-white">
  <div className="grid grid-cols-1">
    <Stripes border className="col-start-1 row-start-1 rounded-lg" />
    <div className="col-start-1 row-start-1 size-14 rounded-lg bg-fuchsia-300 p-4 dark:bg-fuchsia-800 dark:text-fuchsia-400">
      01
    </div>
  </div>
  <div className="bg-stripes-fuchsia grid w-full justify-self-stretch rounded-lg">
    <div className="justify-self-stretch rounded-lg bg-fuchsia-500 p-4">02</div>
  </div>
  <div className="grid grid-cols-1">
    <Stripes border className="col-start-1 row-start-1 rounded-lg" />
    <div className="col-start-1 row-start-1 size-14 rounded-lg bg-fuchsia-300 p-4 dark:bg-fuchsia-800 dark:text-fuchsia-400">
      03
    </div>
  </div>
  <div className="grid grid-cols-1">
    <Stripes border className="col-start-1 row-start-1 rounded-lg" />
    <div className="col-start-1 row-start-1 size-14 rounded-lg bg-fuchsia-300 p-4 dark:bg-fuchsia-800 dark:text-fuchsia-400">
      04
    </div>
  </div>
  <div className="grid grid-cols-1">
    <Stripes border className="col-start-1 row-start-1 rounded-lg" />
    <div className="col-start-1 row-start-1 size-14 rounded-lg bg-fuchsia-300 p-4 dark:bg-fuchsia-800 dark:text-fuchsia-400">
      05
    </div>
  </div>
  <div className="grid grid-cols-1">
    <Stripes border className="col-start-1 row-start-1 rounded-lg" />
    <div className="col-start-1 row-start-1 size-14 rounded-lg bg-fuchsia-300 p-4 dark:bg-fuchsia-800 dark:text-fuchsia-400">
      06
    </div>
  </div>
</div>

----------------------------------------

TITLE: Targeting Dark Mode with Tailwind CSS Classes
DESCRIPTION: Illustrates how to use the 'dark' variant in Tailwind CSS to apply styles specifically for dark mode.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<div class="bg-white dark:bg-gray-800 rounded-lg px-6 py-8 ring shadow-xl ring-gray-900/5">
  <div>
    <span class="inline-flex items-center justify-center rounded-md bg-indigo-500 p-2 shadow-lg">
      <svg class="h-6 w-6 stroke-white" ...>
        <!-- ... -->
      </svg>
    </span>
  </div>
  <h3 class="text-gray-900 dark:text-white mt-5 text-base font-medium tracking-tight ">Writes upside-down</h3>
  <p class="text-gray-500 dark:text-gray-400 mt-2 text-sm ">
    The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.
  </p>
</div>

----------------------------------------

TITLE: Styling Light and Dark Mode with Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates the use of Tailwind CSS classes to style components for both light and dark modes. The dark variant styles are triggered by the `prefers-color-scheme` media feature or by a class, depending on the setup. It shows how to structure a traditional website layout with Tailwind utilities for theming.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/dark-mode.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<div class=\"bg-white dark:bg-gray-800 rounded-lg px-6 py-8 ring shadow-xl ring-gray-900/5\">\n  <div>\n    <span class=\"inline-flex items-center justify-center rounded-md bg-indigo-500 p-2 shadow-lg\">\n      <svg class=\"h-6 w-6 stroke-white\" ...>\n        <!-- ... -->\n      </svg>\n    </span>\n  </div>\n  <h3 class=\"text-gray-900 dark:text-white mt-5 text-base font-medium tracking-tight \">Writes upside-down</h3>\n  <p class=\"text-gray-500 dark:text-gray-400 mt-2 text-sm \">\n    The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.\n  </p>\n</div>

----------------------------------------

TITLE: Adding Viewport Meta Tag in HTML
DESCRIPTION: Adds the viewport meta tag to the head of the HTML document, which is essential for responsive design.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

----------------------------------------

TITLE: HTML Example: Basic z-index Classes
DESCRIPTION: This HTML snippet shows how to use Tailwind CSS classes to set the z-index of different divs. The `z-40`, `z-30`, `z-20`, `z-10`, and `z-0` classes are used to assign increasing z-index values, determining the stacking order.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/z-index.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:z-40,z-30,z-20,z-10,z-0] -->
<div class="z-40 ...">05</div>
<div class="z-30 ...">04</div>
<div class="z-20 ...">03</div>
<div class="z-10 ...">02</div>
<div class="z-0 ...">01</div>

----------------------------------------

TITLE: Setting Column Gap with Tailwind CSS
DESCRIPTION: This code snippet demonstrates how to set the gap between columns in a multi-column layout using the `gap-8` utility class in Tailwind CSS. The `columns-3` class creates a three-column layout, and `gap-8` sets the gap between the columns.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/columns.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
"<!-- [!code classes:gap-8] -->\n<div class=\"columns-3 gap-8 ...\">\n  <img class=\"aspect-3/2 ...\" src=\"/img/mountains-1.jpg\" />\n  <img class=\"aspect-square ...\" src=\"/img/mountains-2.jpg\" />\n  <img class=\"aspect-square ...\" src=\"/img/mountains-3.jpg\" />\n  <!-- ... -->\n</div>"

----------------------------------------

TITLE: Implementing Horizontal Scrolling with Tailwind CSS
DESCRIPTION: This snippet shows how to use the `overflow-x-scroll` utility class to enable horizontal scrolling. It allows content to scroll horizontally while always showing scrollbars, unless disabled by the operating system.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overflow.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<div class="overflow-x-scroll ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Preventing Parent Overscrolling with Tailwind CSS
DESCRIPTION: Use the overscroll-contain utility to prevent scrolling in the target area from triggering scrolling in the parent element, while preserving bounce effects in supporting operating systems.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overscroll-behavior.mdx#2025-04-18_snippet_0

LANGUAGE: HTML
CODE:
<div class="overscroll-contain ...">Well, let me tell you something, ...</div>

----------------------------------------

TITLE: Implementing overflow-scroll in HTML with Tailwind CSS
DESCRIPTION: This code snippet demonstrates how to apply the overflow-scroll utility class to a div element. The overflow-scroll utility forces scrollbars to always be visible, unlike overflow-auto which only shows scrollbars when necessary. Note that some operating systems like macOS may hide unnecessary scrollbars regardless of this setting.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overflow.mdx#2025-04-18_snippet_8

LANGUAGE: html
CODE:
<!-- [!code classes:overflow-scroll] -->
<div class="overflow-scroll ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Implementing Spin Animation in HTML
DESCRIPTION: Example of using animate-spin utility class for creating a loading spinner animation with SVG.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/animation.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<button type="button" class="bg-indigo-500 ..." disabled>
  <svg class="mr-3 size-5 animate-spin ..." viewBox="0 0 24 24">
    <!-- ... -->
  </svg>
  Processing…
</button>

----------------------------------------

TITLE: Referencing Tailwind CSS Colors in Custom CSS
DESCRIPTION: Demonstrates how to reference Tailwind CSS color variables in custom CSS using the '--color-*' namespace.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_8

LANGUAGE: css
CODE:
@import "tailwindcss";

@layer components {
  .typography {
    color: var(--color-gray-950);
    a {
      color: var(--color-blue-500);
      &:hover {
        color: var(--color-blue-800);
      }
    }
  }
}

----------------------------------------

TITLE: Using Implicit Groups in Tailwind CSS
DESCRIPTION: This snippet illustrates how to apply the in-* variant from Tailwind CSS to respond to parent state changes without needing a group class, thereby streamlining the design process.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_17

LANGUAGE: html
CODE:
<div tabindex="0" class="group">
  <div class="opacity-50 group-focus:opacity-100">
<!-- [!code classes:in-focus:opacity-100] -->
<!-- [!code --:3] -->
  </div>
</div>

LANGUAGE: html
CODE:
<div tabindex="0">
  <div class="opacity-50 in-focus:opacity-100">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Implementing Forced Color Adjust Utilities - HTML
DESCRIPTION: This code snippet illustrates the use of `forced-color-adjust-none` utility in a fieldset containing radio buttons. It helps ensure that specific elements maintain their color in forced colors mode, particularly useful for e-commerce applications.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-4/index.mdx#2025-04-18_snippet_12

LANGUAGE: html
CODE:
<fieldset>
  <legend>Choose a color</legend>
  <div class="forced-color-adjust-none ...">
    <label>
      <input class="sr-only" type="radio" name="color-choice" value="white" />
      <span class="sr-only">White</span>
      <span class="size-6 rounded-full bg-white"></span>
    </label>
    <label>
      <input class="sr-only" type="radio" name="color-choice" value="gray" />
      <span class="sr-only">Gray</span>
      <span class="size-6 rounded-full bg-gray-300"></span>
    </label>
    <!-- ... -->
  </div>
</fieldset>

----------------------------------------

TITLE: Negative Margin Example in HTML
DESCRIPTION: Example showing how to apply negative margin values by prefixing the utility class with a dash, creating an overlapping element effect.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/margin.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="h-16 w-36 bg-sky-400 opacity-20 ..."></div>
<div class="-mt-8 bg-sky-300 ...">-mt-8</div>

----------------------------------------

TITLE: Creating a Text Field with Catalyst Components in React
DESCRIPTION: This snippet demonstrates how to create a text field using Catalyst components. It uses separate components for Field, Label, Description, and Input, showcasing Catalyst's HTML-like composable approach to component design.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/introducing-catalyst/index.mdx#2025-04-18_snippet_2

LANGUAGE: JSX
CODE:
import { Description, Field, Label } from "@/components/fieldset";
import { Input } from "@/components/input";

function Example() {
  return (
    <Field>
      <Label>Product name</Label>
      <Description>Use the name you'd like people to see in their cart.</Description>
      <Input name="product_name" />
    </Field>
  );
}

----------------------------------------

TITLE: React Example: Basic z-index Usage
DESCRIPTION: This React snippet demonstrates basic z-index usage with Tailwind CSS. It creates a series of overlapping divs with different z-index values to control their stacking order.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/z-index.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
{
    <div className="flex justify-center -space-x-3 font-mono text-sm leading-6 font-bold text-white">
      <div className="z-40 flex size-16 items-center justify-center rounded-full bg-pink-500 shadow-lg outline-2 outline-white dark:outline-[#11121E]">
        05
      </div>
      <div className="z-30 flex size-16 items-center justify-center rounded-full bg-pink-500 shadow-lg outline-2 outline-white dark:outline-[#11121E]">
        04
      </div>
      <div className="z-20 flex size-16 items-center justify-center rounded-full bg-pink-500 shadow-lg outline-2 outline-white dark:outline-[#11121E]">
        03
      </div>
      <div className="z-10 flex size-16 items-center justify-center rounded-full bg-pink-500 shadow-lg outline-2 outline-white dark:outline-[#11121E]">
        02
      </div>
      <div className="z-0 flex size-16 items-center justify-center rounded-full bg-pink-500 shadow-lg outline-2 outline-white dark:outline-[#11121E]">
        01
      </div>
    </div>
  }

----------------------------------------

TITLE: Example of Specifying Grid Columns in JSX
DESCRIPTION: This snippet provides an example of how to use JSX to create a grid layout with equally sized columns using Tailwind CSS classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-template-columns.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
<Example>
  {
    <div className="grid grid-cols-1">
      <Stripes border className="col-start-1 row-start-1 rounded-lg" />
      <div className="col-start-1 row-start-1 grid grid-cols-4 gap-4 rounded-lg text-center font-mono text-sm leading-6 font-bold text-white">
        <div className="rounded-lg bg-fuchsia-500 p-4">01</div>
        <div className="rounded-lg bg-fuchsia-500 p-4">02</div>
        <div className="rounded-lg bg-fuchsia-500 p-4">03</div>
        <div className="rounded-lg bg-fuchsia-500 p-4">04</div>
        <div className="rounded-lg bg-fuchsia-500 p-4">05</div>
        <div className="rounded-lg bg-fuchsia-500 p-4">06</div>
        <div className="rounded-lg bg-fuchsia-500 p-4">07</div>
        <div className="rounded-lg bg-fuchsia-500 p-4">08</div>
        <div className="rounded-lg bg-fuchsia-500 p-4">09</div>
      </div>
    </div>
  }
</Example>

----------------------------------------

TITLE: Enabling Background Scroll with Container
DESCRIPTION: The HTML snippet illustrates how to apply the `bg-local` utility class to a div, making the background image scroll with the containing element. It's useful for cases where the background should move with the content within the container element. This pattern is ideal for visual consistency within scrollable content.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-attachment.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<!-- [!code classes:bg-local] -->
<div class="bg-[url(/img/mountains.jpg)] bg-local ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Logical Padding Properties Example in HTML
DESCRIPTION: Examples of using logical padding properties (ps-8, pe-8) that adapt to text direction (LTR and RTL).
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/padding.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:ps-8,pe-8] -->
<!-- [!code word:dir="ltr"] -->
<!-- [!code word:dir="rtl"] -->
<div>
  <div dir="ltr">
    <div class="ps-8 ...">ps-8</div>
    <div class="pe-8 ...">pe-8</div>
  </div>
  <div dir="rtl">
    <div class="ps-8 ...">ps-8</div>
    <div class="pe-8 ...">pe-8</div>
  </div>
</div>

----------------------------------------

TITLE: Horizontal Margin Example in HTML
DESCRIPTION: Example of using the mx-8 utility class to add horizontal margin to both left and right sides of an element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/margin.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="mx-8 ...">mx-8</div>

----------------------------------------

TITLE: Using Orientation Media Queries in TailwindCSS
DESCRIPTION: Demonstrates how to use portrait and landscape variants to conditionally display content based on device orientation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_44

LANGUAGE: html
CODE:
<div>
  <div class="portrait:hidden">
    <!-- ... -->
  </div>
  <div class="landscape:hidden">
    <p>This experience is designed to be viewed in landscape. Please rotate your device to view the site.</p>
  </div>
</div>

----------------------------------------

TITLE: Implementing Overflow Scroll with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to implement horizontal and vertical scrolling using Tailwind CSS utility classes. The `overflow-scroll` class is applied to a container to enable scrollbars when content exceeds the container's dimensions.  The grid layout is implemented using `grid` and `grid-*` utility classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overflow.mdx#2025-04-18_snippet_7

LANGUAGE: HTML
CODE:
<div className="overflow-hidden dark:bg-gray-800">
      <div className="grid max-h-90 grid-cols-[70px_repeat(7,150px)] grid-rows-[auto_repeat(16,50px)] overflow-scroll">
        {/* Calendar frame */}
        <div className="sticky top-0 z-10 col-start-1 row-start-1 border-b border-gray-100 bg-white bg-clip-padding py-2 text-sm font-medium text-gray-900 dark:border-black/10 dark:bg-gradient-to-b dark:from-gray-600 dark:to-gray-700 dark:text-gray-200"></div>
        <div className="sticky top-0 z-10 col-start-2 row-start-1 border-b border-gray-100 bg-white bg-clip-padding py-2 text-center text-sm font-medium text-gray-900 dark:border-black/10 dark:bg-gradient-to-b dark:from-gray-600 dark:to-gray-700 dark:text-gray-200">
          Sun
        </div>
        <div className="sticky top-0 z-10 col-start-3 row-start-1 border-b border-gray-100 bg-white bg-clip-padding py-2 text-center text-sm font-medium text-gray-900 dark:border-black/10 dark:bg-gradient-to-b dark:from-gray-600 dark:to-gray-700 dark:text-gray-200">
          Mon
        </div>
        <div className="sticky top-0 z-10 col-start-4 row-start-1 border-b border-gray-100 bg-white bg-clip-padding py-2 text-center text-sm font-medium text-gray-900 dark:border-black/10 dark:bg-gradient-to-b dark:from-gray-600 dark:to-gray-700 dark:text-gray-200">
          Tue
        </div>
        <div className="sticky top-0 z-10 col-start-5 row-start-1 border-b border-gray-100 bg-white bg-clip-padding py-2 text-center text-sm font-medium text-gray-900 dark:border-black/10 dark:bg-gradient-to-b dark:from-gray-600 dark:to-gray-700 dark:text-gray-200">
          Wed
        </div>
        <div className="sticky top-0 z-10 col-start-6 row-start-1 border-b border-gray-100 bg-white bg-clip-padding py-2 text-center text-sm font-medium text-gray-900 dark:border-black/10 dark:bg-gradient-to-b dark:from-gray-600 dark:to-gray-700 dark:text-gray-200">
          Thu
        </div>
        <div className="sticky top-0 z-10 col-start-7 row-start-1 border-b border-gray-100 bg-white bg-clip-padding py-2 text-center text-sm font-medium text-gray-900 dark:border-black/10 dark:bg-gradient-to-b dark:from-gray-600 dark:to-gray-700 dark:text-gray-200">
          Fri
        </div>
        <div className="sticky top-0 z-10 col-start-8 row-start-1 border-b border-gray-100 bg-white bg-clip-padding py-2 text-center text-sm font-medium text-gray-900 dark:border-black/10 dark:bg-gradient-to-b dark:from-gray-600 dark:to-gray-700 dark:text-gray-200">
          Sat
        </div>
        <div className="sticky left-0 col-start-1 row-start-2 border-r border-gray-100 bg-white p-1.5 text-right text-xs font-medium text-gray-400 uppercase dark:border-gray-200/5 dark:bg-gray-800">
          5 AM
        </div>
        <div className="col-start-2 row-start-2 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-3 row-start-2 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-4 row-start-2 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-5 row-start-2 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-6 row-start-2 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-7 row-start-2 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-8 row-start-2 border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="sticky left-0 col-start-1 row-start-3 border-r border-gray-100 bg-white p-1.5 text-right text-xs font-medium text-gray-400 uppercase dark:border-gray-200/5 dark:bg-gray-800">
          6 AM
        </div>
        <div className="col-start-2 row-start-3 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-3 row-start-3 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-4 row-start-3 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-5 row-start-3 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-6 row-start-3 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-7 row-start-3 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-8 row-start-3 border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="sticky left-0 col-start-1 row-start-4 border-r border-gray-100 bg-white p-1.5 text-right text-xs font-medium text-gray-400 uppercase dark:border-gray-200/5 dark:bg-gray-800">
          7 AM
        </div>
        <div className="col-start-2 row-start-4 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-3 row-start-4 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-4 row-start-4 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-5 row-start-4 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-6 row-start-4 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-7 row-start-4 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-8 row-start-4 border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="sticky left-0 col-start-1 row-start-5 border-r border-gray-100 bg-white p-1.5 text-right text-xs font-medium text-gray-400 uppercase dark:border-gray-200/5 dark:bg-gray-800">
          8 AM
        </div>
        <div className="col-start-2 row-start-5 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-3 row-start-5 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-4 row-start-5 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-5 row-start-5 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-6 row-start-5 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-7 row-start-5 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-8 row-start-5 border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="sticky left-0 col-start-1 row-start-6 border-r border-gray-100 bg-white p-1.5 text-right text-xs font-medium text-gray-400 uppercase dark:border-gray-200/5 dark:bg-gray-800">
          9 AM
        </div>
        <div className="col-start-2 row-start-6 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-3 row-start-6 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-4 row-start-6 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-5 row-start-6 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-6 row-start-6 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-7 row-start-6 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-8 row-start-6 border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="sticky left-0 col-start-1 row-start-7 border-r border-gray-100 bg-white p-1.5 text-right text-xs font-medium text-gray-400 uppercase dark:border-gray-200/5 dark:bg-gray-800">
          10 AM
        </div>
        <div className="col-start-2 row-start-7 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-3 row-start-7 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-4 row-start-7 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-5 row-start-7 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-6 row-start-7 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-7 row-start-7 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-8 row-start-7 border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="sticky left-0 col-start-1 row-start-8 border-r border-gray-100 bg-white p-1.5 text-right text-xs font-medium text-gray-400 uppercase dark:border-gray-200/5 dark:bg-gray-800">
          11 AM
        </div>
        <div className="col-start-2 row-start-8 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-3 row-start-8 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-4 row-start-8 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-5 row-start-8 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-6 row-start-8 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-7 row-start-8 border-r border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="col-start-8 row-start-8 border-b border-gray-100 dark:border-gray-200/5"></div>
        <div className="sticky left-0 col-start-1 row-start-9 border-r border-gray-100 bg-white p-1.5 text-right text-xs font-medium text-gray-400 uppercase dark:border-gray-200/5 dark:bg-gray-800">


----------------------------------------

TITLE: Styling Read-Only Inputs with Tailwind CSS
DESCRIPTION: This example shows how to use the read-only variant in Tailwind CSS to style an input when it is read-only. It applies a gray background to read-only inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_106

LANGUAGE: html
CODE:
<input class="read-only:bg-gray-100 ..." />

----------------------------------------

TITLE: Using place-items-start in Tailwind CSS Grid
DESCRIPTION: Example of using place-items-start to position grid items at the start of their grid areas on both axes. This creates a layout where items are aligned to the top-left of their respective cells.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-items.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<div class="grid grid-cols-3 place-items-start gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
  <div>06</div>
</div>

----------------------------------------

TITLE: Demonstrating Traditional UI Library Component Usage in JSX
DESCRIPTION: This code snippet illustrates a common approach used by traditional UI libraries for creating form fields. It shows a TextField component with props for name, label, and description all on a single component.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/introducing-catalyst/index.mdx#2025-04-18_snippet_1

LANGUAGE: JSX
CODE:
function Example() {
  return (
    <TextField
      name="product_name"
      label="Product name"
      description="Use the name you'd like people to see in their cart."
    />
  );
}

----------------------------------------

TITLE: HTML Usage of Blur Classes
DESCRIPTION: This snippet illustrates using HTML to apply different blur classes directly to images, showcasing the effect of each class without the need for React. It outlines a straightforward implementation to show the blur functionality.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-blur.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:blur-none,blur-sm,blur-lg,blur-2xl] -->
<img class="blur-none" src="/img/mountains.jpg" />
<img class="blur-sm" src="/img/mountains.jpg" />
<img class="blur-lg" src="/img/mountains.jpg" />
<img class="blur-2xl" src="/img/mountains.jpg" />

----------------------------------------

TITLE: Form Field Components Basic Example
DESCRIPTION: Demonstration of the new form components with automatic label and description association.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v2/index.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
import { Description, Field, Input, Label } from "@headlessui/react";

function Example() {
  return (
    <Field>
      <Label>Name</Label>
      <Input name="your_name" />
      <Description>Use your real name so people will recognize you.</Description>
    </Field>
  );
}

----------------------------------------

TITLE: Installing Tailwind CSS v4.1 with Different Integrations
DESCRIPTION: Commands for installing Tailwind CSS v4.1 with different build tools and integrations, including the Tailwind CLI, Vite, and PostCSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_23

LANGUAGE: sh
CODE:
npm install tailwindcss@latest @tailwindcss/cli@latest

LANGUAGE: sh
CODE:
npm install tailwindcss@latest @tailwindcss/vite@latest

LANGUAGE: sh
CODE:
npm install tailwindcss@latest @tailwindcss/postcss@latest

----------------------------------------

TITLE: Disabled Button Styling with Hover State in Tailwind CSS
DESCRIPTION: Demonstrates advanced button state styling using disabled and enabled variants to control hover and opacity behaviors
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_14

LANGUAGE: html
CODE:
<button type="button" class="bg-indigo-500 hover:enabled:bg-indigo-400 disabled:opacity-75 ..." disabled>
  Processing...
</button>

----------------------------------------

TITLE: Adjusting Opacity with Tailwind CSS Classes
DESCRIPTION: Demonstrates how to adjust the opacity of background colors using Tailwind CSS classes with syntax like 'bg-sky-500/50' to set the alpha channel to 50%.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div>
  <div class="bg-sky-500/10"></div>
  <div class="bg-sky-500/20"></div>
  <div class="bg-sky-500/30"></div>
  <div class="bg-sky-500/40"></div>
  <div class="bg-sky-500/50"></div>
  <div class="bg-sky-500/60"></div>
  <div class="bg-sky-500/70"></div>
  <div class="bg-sky-500/80"></div>
  <div class="bg-sky-500/90"></div>
  <div class="bg-sky-500/100"></div>
</div>

----------------------------------------

TITLE: Subgrid Support in Tailwind CSS
DESCRIPTION: Enables grid layout inheritance with `grid-cols-subgrid` for precise child element placement within parent grid.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-4/index.mdx#2025-04-18_snippet_8

LANGUAGE: html
CODE:
<div class="grid grid-cols-4 gap-4">
  <div class="col-span-3 grid grid-cols-subgrid gap-4">
    <div class="col-start-2">06</div>
  </div>
</div>

----------------------------------------

TITLE: Changing Background Opacity with Tailwind CSS in HTML
DESCRIPTION: In this example, the background color opacity of elements is modified using Tailwind CSS utilities, showcasing different levels of transparency. The HTML snippet features buttons with classes `bg-sky-500/100`, `bg-sky-500/75`, and `bg-sky-500/50` to illustrate varied opacity levels. No specific inputs are required, and there are no return values, serving primarily as a visual guide.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-color.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<Figure>

<Example>
  {
    <div className="grid grid-cols-1 gap-4 text-sm text-white sm:grid-cols-3">
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
          bg-sky-500/100
        </p>
        <button
          type="button"
          tabIndex="-1"
          className="rounded-md bg-sky-500/100 px-4 py-2 text-sm font-semibold text-white opacity-100 focus:outline-none"
        >
          Button A
        </button>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">bg-sky-500/75</p>
        <button
          type="button"
          tabIndex="-1"
          className="rounded-md bg-sky-500/75 px-4 py-2 text-sm font-semibold text-white opacity-100 focus:outline-none"
        >
          Button B
        </button>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">bg-sky-500/50</p>
        <button
          type="button"
          tabIndex="-1"
          className="rounded-md bg-sky-500/50 px-4 py-2 text-sm font-semibold text-white opacity-100 focus:outline-none"
        >
          Button C
        </button>
      </div>
    </div>
  }
</Example>

<pre><code class="language-html">
<!-- [!code word:/100] -->
<!-- [!code word:/75] -->
<!-- [!code word:/50] -->
<button class="bg-sky-500/100 ..."></button>
<button class="bg-sky-500/75 ..."></button>
<button class="bg-sky-500/50 ..."></button>
</code></pre>

</Figure>

----------------------------------------

TITLE: Using Tailwind CSS Theme Variables in Custom CSS
DESCRIPTION: This snippet shows how to use Tailwind CSS theme variables in custom CSS for consistent styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_22

LANGUAGE: css
CODE:
@import "tailwindcss";

@layer components {
  .typography {
    p {
      font-size: var(--text-base);
      color: var(--color-gray-700);
    }

    h1 {
      font-size: var(--text-2xl--line-height);
      font-weight: var(--font-weight-semibold);
      color: var(--color-gray-950);
    }

    h2 {
      font-size: var(--text-xl);
      font-weight: var(--font-weight-semibold);
      color: var(--color-gray-950);
    }
  }
}

----------------------------------------

TITLE: Applying Underline on Hover in HTML
DESCRIPTION: This example shows how to use the 'hover:underline' utility class in Tailwind CSS to add an underline to text on hover, while keeping it without underline by default.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-line.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<!-- [!code classes:hover:underline] -->
<p>The <a href="..." class="no-underline hover:underline ...">quick brown fox</a> jumps over the lazy dog.</p>

----------------------------------------

TITLE: Using place-items-end in Tailwind CSS Grid
DESCRIPTION: Example of using place-items-end to position grid items at the end of their grid areas on both axes. This creates a layout where items are aligned to the bottom-right of their respective cells.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-items.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="grid h-56 grid-cols-3 place-items-end gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
  <div>06</div>
</div>

----------------------------------------

TITLE: HTML Example Using Tailwind Translate Utilities with fraction
DESCRIPTION: This HTML snippet demonstrates the usage of Tailwind CSS translate utilities with percentage values. It showcases how to use `translate-<fraction>` utilities like `translate-1/2` and `-translate-1/4` to translate an image element, creating visual effects by positioning the image based on percentage of size.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/translate.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:-translate-1/4,translate-1/6,translate-1/2] -->
<img class="-translate-1/4 ..." src="/img/mountains.jpg" />
<img class="translate-1/6 ..." src="/img/mountains.jpg" />
<img class="translate-1/2 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Customizing Shadow Colors in Tailwind CSS Theme (JSX)
DESCRIPTION: Demonstrates how to customize shadow colors for various shadow-related utilities in Tailwind CSS. This component allows color customization for shadow, inset-shadow, ring, and inset-ring utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_19

LANGUAGE: jsx
CODE:
<CustomizingYourThemeColors utilities={["shadow", "inset-shadow", "ring", "inset-ring"]} />

----------------------------------------

TITLE: Generated CSS for ARIA States
DESCRIPTION: Shows the generated CSS output for arbitrary ARIA state variants with background image changes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_53

LANGUAGE: css
CODE:
.aria-\[sort\=ascending\]\:bg-\[url\(\'\/img\/down-arrow\.svg\'\)\] {
  &[aria-sort="ascending"] {
    background-image: url('/img/down-arrow.svg');
  }
}
.aria-\[sort\=descending\]\:bg-\[url\(\'\/img\/up-arrow\.svg\'\)\] {
  &[aria-sort="descending"] {
    background-image: url('/img/up-arrow.svg');
  }
}

----------------------------------------

TITLE: Extending Container with Horizontal Centering and Padding in HTML
DESCRIPTION: Example showing how to extend the container utility with mx-auto for centering and px-4 for horizontal padding, as TailwindCSS containers don't have these features built-in.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/max-width.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="container mx-auto px-4">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Preventing Flex Item Resizing
DESCRIPTION: Uses flex-none to prevent flex items from growing or shrinking, maintaining their original dimensions
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="flex ...">
  <div class="w-14 flex-none ...">01</div>
  <div class="w-32 flex-none ...">02</div>
  <div class="flex-1 ...">03</div>
</div>

----------------------------------------

TITLE: Rendering Blog Post Image with JSX
DESCRIPTION: Displays the blog post featured image using a custom Image component with the imported card image.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-beta/index.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
<Image src={card} alt="Tailwind CSS v4.0-beta" />

----------------------------------------

TITLE: Styling Open/Closed States with the Open Variant in HTML
DESCRIPTION: Demonstrates the use of the open variant to conditionally add styles when a <details> or <dialog> element is in an open state.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_60

LANGUAGE: html
CODE:
<details class="border border-transparent open:border-black/10 open:bg-gray-100 ..." open>
  <summary class="text-sm leading-6 font-semibold text-gray-900 select-none">Why do they call it Ovaltine?</summary>
  <div class="mt-3 text-sm leading-6 text-gray-600">
    <p>The mug is round. The jar is round. They should call it Roundtine.</p>
  </div>
</details>

----------------------------------------

TITLE: Tailwind CSS Cursor Example
DESCRIPTION: This code snippet showcases the usage of various Tailwind CSS cursor utilities. It renders a row of buttons, each applying a different cursor style: `cursor-pointer`, `cursor-progress`, and `cursor-not-allowed`. The Example component likely renders this content within a visual demonstration.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/cursor.mdx#2025-04-18_snippet_3

LANGUAGE: typescript
CODE:
{
    <div className="flex flex-col items-center justify-around gap-4 sm:flex-row sm:gap-0">
      <button
        type="button"
        className="w-full cursor-pointer rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white hover:bg-indigo-700 focus:outline-none disabled:bg-indigo-300 sm:w-auto dark:disabled:bg-indigo-800 dark:disabled:text-indigo-400"
        tabIndex="-1"
      >
        Submit
      </button>
      <button
        type="button"
        className="w-full cursor-progress rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white hover:bg-indigo-700 focus:outline-none disabled:bg-indigo-300 sm:w-auto dark:disabled:bg-indigo-800 dark:disabled:text-indigo-400"
        tabIndex="-1"
      >
        Saving...
      </button>
      <button
        type="button"
        disabled
        className="w-full cursor-not-allowed rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white hover:bg-indigo-700 focus:outline-none disabled:bg-indigo-300 sm:w-auto dark:disabled:bg-indigo-800 dark:disabled:text-indigo-400"
        tabIndex="-1"
      >
        Confirm
      </button>
    </div>
  }

----------------------------------------

TITLE: Logical Property Margin Examples in HTML
DESCRIPTION: Examples demonstrating the use of logical property margin utilities (ms-8 and me-8) in both left-to-right and right-to-left contexts.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/margin.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div>
  <div dir="ltr">
    <div class="ms-8 ...">ms-8</div>
    <div class="me-8 ...">me-8</div>
  </div>
  <div dir="rtl">
    <div class="ms-8 ...">ms-8</div>
    <div class="me-8 ...">me-8</div>
  </div>
</div>

----------------------------------------

TITLE: Basic Mask Origin HTML Usage Examples
DESCRIPTION: HTML examples showing how to use the mask-origin utilities with different values (border, padding, content) along with masks and background images.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-origin.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="mask-origin-border border-3 p-1.5 mask-[url(/img/circle.png)] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-origin-padding border-3 p-1.5 mask-[url(/img/circle.png)] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-origin-content border-3 p-1.5 mask-[url(/img/circle.png)] bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Using Custom Image URL for List Markers in HTML
DESCRIPTION: Sets a custom image URL as the marker for list items using the list-image-[url()] utility class. This example shows how to use an external image file as a list marker.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/list-style-image.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<ul class="list-image-[url(/img/checkmark.png)]">
  <li>5 cups chopped Porcini mushrooms</li>
  <!-- ... -->
</ul>

----------------------------------------

TITLE: Adding Component Variants using Plugin API
DESCRIPTION: Demonstrates how to add component variants using the addComponents plugin API with explicit variants option.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-5/index.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
plugin(function ({ addComponents })) {
  addComponents({
    '.card': {
      // ...
    }
  }, {
    variants: ['responsive']
  })
})

----------------------------------------

TITLE: Customizing Input Width in Catalyst Text Field Component
DESCRIPTION: This example shows how to customize the width of the Input component within a Catalyst text field. It demonstrates the flexibility of Catalyst's component architecture by allowing easy modification of individual elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/introducing-catalyst/index.mdx#2025-04-18_snippet_3

LANGUAGE: JSX
CODE:
import { Description, Field, Label } from "@/components/fieldset";
import { Input } from "@/components/input";

function Example() {
  return (
    <Field>
      <Label>Product name</Label>
      <Description>Use the name you'd like people to see in their cart.</Description>
      <Input name="product_name" className="max-w-sm" />
    </Field>
  );
}

----------------------------------------

TITLE: Displaying Text Normally with Tailwind CSS
DESCRIPTION: This example showcases using the `not-italic` class from Tailwind CSS to ensure text is displayed in a normal style, not italicized. It utilizes a `p` element styled with specific Tailwind CSS classes to maintain non-italicized text.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-style.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:not-italic] -->
<p class="not-italic ...">The quick brown fox ...</p>

----------------------------------------

TITLE: HTML Example of Forced Color Adjust None
DESCRIPTION: Demonstrates how to use the forced-color-adjust-none utility to opt out of forced color modes in a product color selection interface
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/forced-color-adjust.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:forced-color-adjust-none] -->
<form>
  <img src="/img/shirt.jpg" />
  <div>
    <h3>Basic Tee</h3>
    <h3>$35</h3>
    <fieldset>
      <legend class="sr-only">Choose a color</legend>
      <div class="forced-color-adjust-none ...">
        <label>
          <input class="sr-only" type="radio" name="color-choice" value="White" />
          <span class="sr-only">White</span>
          <span class="size-6 rounded-full border border-black/10 bg-white"></span>
        </label>
        <!-- ... -->
      </div>
    </fieldset>
  </div>
</form>

----------------------------------------

TITLE: Form Submission with Listbox in React
DESCRIPTION: This snippet illustrates how to integrate a Listbox into a form in React. By adding the 'name' prop, the component automatically creates hidden inputs that sync with the Listbox value, facilitating easy data submission.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2022-05-23-headless-ui-v1-6-tailwind-ui-team-management/index.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<form action="/projects/1/assignee" method="post">
  <Listbox
    value={selectedPerson}
    onChange={setSelectedPerson}
    // [!code highlight:2]
    name="assignee"
  >
    {/* ... */}
  </Listbox>
  <button>Submit</button>
</form>


----------------------------------------

TITLE: Setting shadow color with Tailwind CSS
DESCRIPTION: This JSX snippet uses color utilities like `shadow-cyan-500/50`, `shadow-blue-500/50`, and `shadow-indigo-500/50` to customize the color of box shadows. It demonstrates colored box shadows with specified opacities in Tailwind CSS using buttons.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_6

LANGUAGE: jsx
CODE:
<Figure>

<Example>
  {
    <div className="flex flex-col justify-center gap-8 py-6 sm:flex-row sm:gap-12">
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
          shadow-cyan-500/50
        </p>
        <button className="rounded-md bg-cyan-500 px-3 py-2 text-sm font-semibold text-white shadow-lg shadow-cyan-500/50 focus:outline-none">
          Subscribe
        </button>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
          shadow-blue-500/50
        </p>
        <button className="rounded-md bg-blue-500 px-3 py-2 text-sm font-semibold text-white shadow-lg shadow-blue-500/50 focus:outline-none">
          Subscribe
        </button>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
          shadow-indigo-500/50
        </p>
        <button className="rounded-md bg-indigo-500 px-3 py-2 text-sm font-semibold text-white shadow-lg shadow-indigo-500/50 focus:outline-none">
          Subscribe
        </button>
      </div>
    </div>
  }
</Example>

```html
<!-- [!code classes:shadow-cyan-500/50,shadow-blue-500/50,shadow-indigo-500/50] -->
<button class="bg-cyan-500 shadow-lg shadow-cyan-500/50 ...">Subscribe</button>
<button class="bg-blue-500 shadow-lg shadow-blue-500/50 ...">Subscribe</button>
<button class="bg-indigo-500 shadow-lg shadow-indigo-500/50 ...">Subscribe</button>
```

</Figure>

----------------------------------------

TITLE: Using Large Viewport Height in HTML with Tailwind CSS
DESCRIPTION: Example of using the h-lvh utility to set an element's height to the largest possible height of the viewport.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/height.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="h-lvh">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Customizing Box Shadow in Tailwind CSS Theme (JSX)
DESCRIPTION: Illustrates how to customize the box shadow theme in Tailwind CSS. This component allows adding a custom shadow named '3xl' with a specific shadow value to the theme.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_17

LANGUAGE: jsx
CODE:
<CustomizingYourTheme
  utility="shadow"
  themeKey="shadow"
  name="box shadow"
  customName="3xl"
  customValue="0 35px 35px rgba(0, 0, 0, 0.25)"
/>

----------------------------------------

TITLE: Handling Modifiers in CSS Utility
DESCRIPTION: This CSS snippet demonstrates how to handle modifiers in a CSS utility using the `--modifier()` function. This function operates on a modifier if it's present, and declarations that depend on a modifier are omitted if no modifier is specified.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_19

LANGUAGE: css
CODE:
/* [!code filename:CSS] */
@utility text-* {
  /* prettier-ignore */
  font-size: --value(--text-*, [length]);
  /* [!code highlight:2] */
  /* prettier-ignore */
  line-height: --modifier(--leading-*, [length], [*]);
}

----------------------------------------

TITLE: Using Viewport-Based Width Utility in HTML
DESCRIPTION: This HTML snippet shows how to use the w-screen utility to make an element span the entire width of the viewport in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/width.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<div class="w-screen">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Using nth-child Variants in Tailwind CSS
DESCRIPTION: Shows how to use Tailwind's nth-child variants to style specific elements based on their position, including nth-child, nth-last-child, and nth-of-type selectors.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<div class="nth-3:underline">
  <!-- ... -->
</div>
<div class="nth-last-5:underline">
  <!-- ... -->
</div>
<div class="nth-of-type-4:underline">
  <!-- ... -->
</div>
<div class="nth-last-of-type-6:underline">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Styling SVG Icons with Tailwind CSS Classes
DESCRIPTION: HTML example showing how to implement and style an SVG icon using Tailwind CSS utility classes for sizing and colors.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/introducing-heroicons/index.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<svg
  class="h-6 w-6 text-indigo-500"
  xmlns="http://www.w3.org/2000/svg"
  fill="none"
  viewBox="0 0 24 24"
  stroke="currentColor"
>
  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
</svg>

----------------------------------------

TITLE: Demonstrating Touch Action Utilities in HTML and Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates the usage of various touch action utilities in Tailwind CSS. It shows examples of touch-auto, touch-none, touch-pan-x, and touch-pan-y applied to image containers.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/touch-action.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="h-48 w-full touch-auto overflow-auto ...">
  <img class="h-auto w-[150%] max-w-none" src="..." />
</div>
<div class="h-48 w-full touch-none overflow-auto ...">
  <img class="h-auto w-[150%] max-w-none" src="..." />
</div>
<div class="h-48 w-full touch-pan-x overflow-auto ...">
  <img class="h-auto w-[150%] max-w-none" src="..." />
</div>
<div class="h-48 w-full touch-pan-y overflow-auto ...">
  <img class="h-auto w-[150%] max-w-none" src="..." />
</div>

----------------------------------------

TITLE: Tailwind CSS flex-basis percentages
DESCRIPTION: This example showcases using percentage-based flex-basis utilities like `basis-1/3` and `basis-2/3` to define the initial sizes of flex items in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-basis.mdx#2025-04-18_snippet_4

LANGUAGE: JSX
CODE:
{
    <div className="flex flex-row space-x-4 font-mono text-sm leading-6 font-bold text-white">
      <div className="flex h-14 basis-1/3 items-center justify-center rounded-lg bg-indigo-500">01</div>
      <div className="flex h-14 basis-2/3 items-center justify-center rounded-lg bg-indigo-500">02</div>
    </div>
  }

----------------------------------------

TITLE: Using Inline Styles with Arbitrary Values in HTML
DESCRIPTION: This example illustrates the benefits of using inline styles for more complex layouts in Tailwind CSS, where it can be difficult to apply some arbitrary values directly in classes. An inline style is shown for a grid layout using complex values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_21

LANGUAGE: html
CODE:
<div class="grid-[2fr_max(0,var(--gutter-width))_calc(var(--gutter-width)+10px)]"> <!-- [!code --] -->
  <!-- prettier-ignore -->
  <div style="grid-template-columns: 2fr max(0, var(--gutter-width)) calc(var(--gutter-width) + 10px)"> <!-- [!code ++] -->
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Group ARIA State Example
DESCRIPTION: Demonstrates using group-aria variants to style child elements based on parent ARIA states.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_54

LANGUAGE: html
CODE:
<table>
  <thead>
    <tr>
    <th aria-sort="ascending" class="group">
      Invoice #
      <svg class="group-aria-[sort=ascending]:rotate-0 group-aria-[sort=descending]:rotate-180"><!-- ... --></svg>
    </th>
    <!-- ... -->
    </tr>
  </thead>
  <!-- ... -->
</table>

----------------------------------------

TITLE: Nested Group Variants in HTML
DESCRIPTION: This HTML snippet demonstrates the use of variant modifiers to support nested groups. It provides each group a clear name.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_25

LANGUAGE: html
CODE:
"<!-- [!code word:group/sidebar] -->
<!-- [!code word:group/navitem] -->
<!-- [!code word:group-hover/sidebar\:opacity-75] -->
<!-- [!code word:group-hover/navitem\:bg-black/75] -->
<div class="group/sidebar ...">
  <!-- ... -->
  <div class="group/navitem ...">
    <a href="#" class="opacity-50 group-hover/navitem:bg-black/75 group-hover/sidebar:opacity-75">
      <!-- ... -->
    </a>
  </div>
  <!-- ... -->
</div>"

----------------------------------------

TITLE: Applying place-self-start in Tailwind CSS
DESCRIPTION: Demonstration of using the place-self-start utility class to align an item to the start on both axes in a grid layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-self.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="grid grid-cols-3 gap-4 ...">
  <div>01</div>
  <div class="place-self-start ...">02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
  <div>06</div>
</div>

----------------------------------------

TITLE: Applying Masks to Multiple Sides with Tailwind CSS
DESCRIPTION: Demonstrates using Tailwind CSS utilities like mask-x-from-70% and mask-y-to-90% to apply masks to two sides of an element simultaneously. Examples show masking both horizontal and vertical sides.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_8

LANGUAGE: HTML
CODE:
<div class="mask-x-from-70% mask-x-to-90% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-y-from-70% mask-y-to-90% bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Creating Nested Transitions in Vue
DESCRIPTION: Example of implementing nested transitions using Headless UI's TransitionRoot and TransitionChild components in Vue.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1/index.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<template>
  <!-- This `show` prop controls all nested `Transition.Child` components. -->
  <TransitionRoot :show="isOpen">
    <!-- Background overlay -->
    <TransitionChild
      enter="transition-opacity"
      ease-linear
      duration-300"
      enter-from="opacity-0"
      enter-to="opacity-100"
      leave="transition-opacity"
      ease-linear
      duration-300"
      leave-from="opacity-100"
      leave-to="opacity-0"
    >
      <!-- … -->
    </TransitionChild>

    <!-- Sliding sidebar -->
    <TransitionChild
      enter="transition"
      ease-in-out
      duration-300
      transform"
      enter-from="-translate-x-full"
      enter-to="translate-x-0"
      leave="transition"
      ease-in-out
      duration-300
      transform"
      leave-from="translate-x-0"
      leave-to="-translate-x-full"
    >
      <!-- … -->
    </TransitionChild>
  </TransitionRoot>
</template>

<script>
import { ref } from "vue";
import { Transition, TransitionChild } from "@headlessui/vue";

export default {
  components: { TransitionRoot: Transition, TransitionChild },

  setup() {
    const isShowing = ref(true);

    return {
      isShowing,
    };
  },
};
</script>

----------------------------------------

TITLE: Using flex-col-reverse in Tailwind CSS (HTML)
DESCRIPTION: This snippet showcases the `flex-col-reverse` utility class in Tailwind CSS to vertically align flex items in reverse order. It presents a column layout with reverse alignment using Tailwind's classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-direction.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<div class=\"flex flex-col-reverse ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>

----------------------------------------

TITLE: Styling Details Content with Tailwind CSS
DESCRIPTION: This example shows how to use the details-content variant in Tailwind CSS to style the content of a <details> element. It applies a gray background to the content when the details are expanded.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_104

LANGUAGE: html
CODE:
<details class="details-content:bg-gray-100 ...">
  <summary>Details</summary>
  This is a secret.
</details>

----------------------------------------

TITLE: Implementing Ping Animation in HTML
DESCRIPTION: Example of using animate-ping utility class for creating a notification badge with ripple effect.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/animation.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<span class="relative flex size-3">
  <span class="absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75"></span>
  <span class="relative inline-flex size-3 rounded-full bg-sky-500"></span>
</span>

----------------------------------------

TITLE: Hiding Overflowing Content with Tailwind CSS
DESCRIPTION: Use the overflow-hidden utility to clip any content within an element that overflows the bounds of that element. This hides content that extends beyond the element's dimensions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overflow.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<div class="overflow-hidden ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Horizontal Scroll Snapping Implementation
DESCRIPTION: HTML example showing how to implement horizontal scroll snapping using TailwindCSS utilities. Uses snap-x for container and snap-center for child elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-snap-type.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="snap-x ...">
  <div class="snap-center ...">
    <img src="/img/vacation-01.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-02.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-03.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-04.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-05.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-06.jpg" />
  </div>
</div>

----------------------------------------

TITLE: Creating an Animated Button with Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates how to create a button with an indigo background and a processing spinner using Tailwind CSS's new animation utilities. It includes classes for button styling and an SVG for the spinner animation. The animate-spin class is used for the spinning effect.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-6/index.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<button type="button" class="bg-indigo-600 ..." disabled>\n  <svg class="mr-3 h-5 w-5 animate-spin ..." viewBox="0 0 24 24">\n    <!-- ... -->\n  </svg>\n  Processing\n</button>

----------------------------------------

TITLE: Disabling Preflight in Tailwind CSS
DESCRIPTION: Demonstrates how to disable Preflight by omitting its import while keeping other Tailwind CSS functionality intact.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_14

LANGUAGE: CSS
CODE:
@layer theme, base, components, utilities;

@import "tailwindcss/theme.css" layer(theme);
@import "tailwindcss/utilities.css" layer(utilities);

----------------------------------------

TITLE: HTML Example: Tailwind CSS RTL with Logical Properties
DESCRIPTION: This HTML snippet demonstrates how to use Tailwind CSS logical properties for RTL (right-to-left) support.  It showcases the replacement of `ltr:ml-3 rtl:mr-3` with `ms-3`, improving the adaptability of the layout in RTL environments. The example defines a profile section with an image and text, using Tailwind classes for styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_6

LANGUAGE: HTML
CODE:
<div class="group flex items-center">
  <img class="h-12 w-12 shrink-0 rounded-full" src="..." alt="" />
  <div class="ltr:ml-3 rtl:mr-3"><!-- [!code --] -->
    <div class="ms-3"><!-- [!code ++] -->
      <p
        class="text-sm font-medium text-slate-700 group-hover:text-slate-900"
        dark-class="text-sm font-medium text-slate-300 group-hover:text-white"
      >
        ...
      </p>
      <p
        class="text-sm font-medium text-slate-500 group-hover:text-slate-700"
        dark-class="text-sm font-medium text-slate-500 group-hover:text-slate-300"
      >
        ...
      </p>
    </div>
  </div>
</div>

----------------------------------------

TITLE: Using Ordinal Glyphs
DESCRIPTION: Apply the ordinal utility class to enable special glyphs for ordinal markers in supported fonts
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-variant-numeric.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<p class="ordinal ...">1st</p>

----------------------------------------

TITLE: HTML Grid Row Start/End Example
DESCRIPTION: This HTML snippet illustrates the use of `row-start-<number>` and `row-end-<number>` utilities in Tailwind CSS to position elements within a grid by specifying their starting and ending row lines. The example uses `row-start-2`, `row-end-3`, `row-start-1` and `row-end-4`.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-row.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
"<div class=\"grid grid-flow-col grid-rows-3 gap-4\">\n  <div class=\"row-span-2 row-start-2 ...\">01</div>\n  <div class=\"row-span-2 row-end-3 ...\">02</div>\n  <div class=\"row-start-1 row-end-4 ...\">03</div>\n</div>"

----------------------------------------

TITLE: Implementing SVG Masks with Tailwind CSS Classes
DESCRIPTION: This example demonstrates how to apply 'mask-type-alpha' and 'mask-type-luminance' classes to SVG masks. It includes two SVG elements with different mask types applied to images.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-type.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:mask-type-alpha,mask-type-luminance] -->
<svg>
  <mask id="blob1" class="mask-type-alpha fill-gray-700/70">
    <path d="..."></path>
  </mask>
  <image href="/img/mountains.jpg" height="100%" width="100%" mask="url(#blob1)" />
</svg>

<svg>
  <mask id="blob2" class="mask-type-luminance fill-gray-700/70">
    <path d="..."></path>
  </mask>
  <image href="/img/mountains.jpg" height="100%" width="100%" mask="url(#blob2)" />
</svg>

----------------------------------------

TITLE: Using justify-around with Flexbox in HTML
DESCRIPTION: Example of using the justify-around utility to create equal spacing around each flex item. This distributes space evenly, including before the first and after the last item.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-content.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<div class="flex justify-around ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Using Named Containers in Tailwind CSS (HTML)
DESCRIPTION: This HTML snippet demonstrates the usage of named containers in Tailwind CSS, utilizing syntax similar to group-* and peer-* variants currently available in Tailwind. It allows for precise styling based on specific container names.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_29

LANGUAGE: html
CODE:
<div class="@container/main">
  <!-- ... -->
  <div>
    <div class="block @lg/main:flex">
      <!-- ... -->
    </div>
  </div>
</div>

----------------------------------------

TITLE: Generating Multiple Classes with Brace Expansion in Tailwind CSS
DESCRIPTION: Shows how to use brace expansion with @source inline to generate multiple utility classes at once, including variants. This example generates all red background colors with their hover variants.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_17

LANGUAGE: css
CODE:
@import "tailwindcss";
@source inline("{hover:,}bg-red-{50,{100..900..100},950}");

LANGUAGE: css
CODE:
.bg-red-50 {
  background-color: var(--color-red-50);
}
.bg-red-100 {
  background-color: var(--color-red-100);
}
.bg-red-200 {
  background-color: var(--color-red-200);
}

/* ... */

.bg-red-800 {
  background-color: var(--color-red-800);
}
.bg-red-900 {
  background-color: var(--color-red-900);
}
.bg-red-950 {
  background-color: var(--color-red-950);
}
@media (hover: hover) {
  .hover\:bg-red-50:hover {
    background-color: var(--color-red-50);
  }

  /* ... */

  .hover\:bg-red-950:hover {
    background-color: var(--color-red-950);
  }
}

----------------------------------------

TITLE: Setting Responsive Column Gap with Tailwind CSS
DESCRIPTION: This code snippet shows how to create a responsive multi-column layout using Tailwind CSS. It uses the `sm:columns-3` and `sm:gap-8` utility classes to change the number of columns and the gap size at the `sm` (small) breakpoint.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/columns.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
"<!-- [!code classes:sm:gap-8,sm:columns-3] -->\n<div class=\"columns-2 gap-4 sm:columns-3 sm:gap-8 ...\">\n  <img class=\"aspect-3/2 ...\" src=\"/img/mountains-1.jpg\" />\n  <img class=\"aspect-square ...\" src=\"/img/mountains-2.jpg\" />\n  <img class=\"aspect-square ...\" src=\"/img/mountains-3.jpg\" />\n  <!-- ... -->\n</div>"

----------------------------------------

TITLE: Tailwind CSS Pointer Events Example - Ignoring Pointer Events
DESCRIPTION: Demonstrates the usage of pointer-events-none and pointer-events-auto classes in a search input component. The example shows how to make an element ignore pointer events like hover and click.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/pointer-events.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<div class="relative ...">
  <div class="pointer-events-auto absolute ...">
    <svg class="absolute h-5 w-5 text-gray-400">
      <!-- ... -->
    </svg>
  </div>
  <input type="text" placeholder="Search" class="..." />
</div>

<div class="relative ...">
  <div class="pointer-events-none absolute ...">
    <svg class="absolute h-5 w-5 text-gray-400">
      <!-- ... -->
    </svg>
  </div>
  <input type="text" placeholder="Search" class="..." />
</div>

----------------------------------------

TITLE: Demonstrating Text Decoration Styles with Tailwind CSS
DESCRIPTION: HTML example showcasing various text decoration styles using Tailwind CSS classes. Includes solid, double, dotted, dashed, and wavy decoration styles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-style.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<p class="underline decoration-solid">The quick brown fox...</p>
<p class="underline decoration-double">The quick brown fox...</p>
<p class="underline decoration-dotted">The quick brown fox...</p>
<p class="underline decoration-dashed">The quick brown fox...</p>
<p class="underline decoration-wavy">The quick brown fox...</p>

----------------------------------------

TITLE: Styling Out-of-Range Inputs with Tailwind CSS
DESCRIPTION: This example shows how to use the out-of-range variant in Tailwind CSS to style an input when its value is outside of a specified range. It applies a red border to out-of-range inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_102

LANGUAGE: html
CODE:
<input min="1" max="5" class="out-of-range:border-red-500 ..." />

----------------------------------------

TITLE: Creating Inline Grid with TailwindCSS in HTML
DESCRIPTION: Demonstrates the use of `inline-grid` utility in HTML to create a grid layout within an inline context. The code showcases grid configuration with columns and gap settings. No specific dependencies are needed other than TailwindCSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/display.mdx#2025-04-18_snippet_6

LANGUAGE: HTML
CODE:
<span class="inline-grid grid-cols-3 gap-4">
  <span>01</span>
  <span>02</span>
  <span>03</span>
  <span>04</span>
  <span>05</span>
  <span>06</span>
</span>
<span class="inline-grid grid-cols-3 gap-4">
  <span>01</span>
  <span>02</span>
  <span>03</span>
  <span>04</span>
  <span>05</span>
  <span>06</span>
</span>

----------------------------------------

TITLE: Rendering HTML Backdrop Opacity Examples
DESCRIPTION: HTML snippet demonstrating multiple `div` elements with varying backdrop opacity using `backdrop-opacity-10`, `backdrop-opacity-60`, and `backdrop-opacity-95`. This showcases the effect of different opacities on background images. Tailwind CSS is required to interpret the classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-opacity.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-invert backdrop-opacity-10 ..."></div>
</div>
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-invert backdrop-opacity-60 ..."></div>
</div>
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-invert backdrop-opacity-95 ..."></div>
</div>

----------------------------------------

TITLE: Using Tailwind CSS Standalone CLI
DESCRIPTION: Commands to initialize a Tailwind config, start a watcher, and compile CSS for production using the standalone CLI.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/standalone-cli/index.mdx#2025-04-18_snippet_1

LANGUAGE: sh
CODE:
# Create a tailwind.config.js file
./tailwindcss init

# Start a watcher
./tailwindcss -i input.css -o output.css --watch

# Compile and minify your CSS for production
./tailwindcss -i input.css -o output.css --minify

----------------------------------------

TITLE: Responsive Object-fit Implementation in HTML
DESCRIPTION: Example showing how to implement responsive object-fit utilities that change based on screen size breakpoints.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-fit.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<img class="object-contain md:object-cover" src="/img/mountains.jpg" />

----------------------------------------

TITLE: Customizing Breakpoints in Tailwind CSS
DESCRIPTION: Demonstrates how to customize breakpoints using theme variables. Shows setting custom breakpoint values and creating new breakpoints using the @theme directive.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_7

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --breakpoint-xs: 30rem;
  --breakpoint-2xl: 100rem;
  --breakpoint-3xl: 120rem;
}

----------------------------------------

TITLE: Styling Direct Children with * Variant in TailwindCSS
DESCRIPTION: Demonstrates using the * variant to style all direct children of a container with consistent styling. Includes examples of both light and dark mode styling for child elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_63

LANGUAGE: html
CODE:
<div>
  <h2>Categories<h2>
  <ul class="*:rounded-full *:border *:border-sky-100 *:bg-sky-50 *:px-2 *:py-0.5 dark:text-sky-300 dark:*:border-sky-500/15 dark:*:bg-sky-500/10 ...">
    <li>Sales</li>
    <li>Marketing</li>
    <li>SEO</li>
    <!-- ... -->
  </ul>
</div>

----------------------------------------

TITLE: Object Scale Down Implementation in HTML
DESCRIPTION: Example demonstrating object-scale-down utility to display content at original size or scaled down if necessary to fit container.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-fit.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<img class="h-48 w-96 object-scale-down ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Mask Mode Utility HTML Example
DESCRIPTION: Example HTML showing usage of mask-mode utilities (mask-alpha and mask-luminance) combined with mask direction utilities to create gradient mask effects on background images.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-mode.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- [!code classes:mask-alpha,mask-luminance] -->
<div class="mask-alpha mask-r-from-black mask-r-from-50% mask-r-to-transparent bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-luminance mask-r-from-white mask-r-from-50% mask-r-to-black bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Styling Sticky Table with Border Spacing in Tailwind CSS
DESCRIPTION: Demonstrates table styling using border-separate and border-spacing-0 to create a sticky header with consistent border rendering
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_13

LANGUAGE: html
CODE:
<table class="border-separate border-spacing-0">
  <thead class="bg-gray-50">
    <tr>
      <th class="sticky top-0 z-10 border-b border-gray-300 ...">Name</th>
      <th class="sticky top-0 z-10 border-b border-gray-300 ...">Email</th>
      <th class="sticky top-0 z-10 border-b border-gray-300 ...">Role</th>
    </tr>
  </thead>
  <tbody class="bg-white">
    <tr>
      <td class="border-b border-gray-200 ...">Courtney Henry</td>
      <td class="border-b border-gray-200 ...">courtney.henry@example.com</td>
      <td class="border-b border-gray-200 ...">Admin</td>
    </tr>
  </tbody>
</table>

----------------------------------------

TITLE: Implementing Responsive Breakpoints in Tailwind CSS
DESCRIPTION: This snippet shows how Tailwind CSS translates responsive breakpoint modifiers into CSS container queries. It demonstrates the syntax for various predefined breakpoints and custom breakpoints.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_75

LANGUAGE: CSS
CODE:
@container (width < 28rem)

LANGUAGE: CSS
CODE:
@container (width < 32rem)

LANGUAGE: CSS
CODE:
@container (width < 36rem)

LANGUAGE: CSS
CODE:
@container (width < 42rem)

LANGUAGE: CSS
CODE:
@container (width < 48rem)

LANGUAGE: CSS
CODE:
@container (width < 56rem)

LANGUAGE: CSS
CODE:
@container (width < 64rem)

LANGUAGE: CSS
CODE:
@container (width < 72rem)

LANGUAGE: CSS
CODE:
@container (width < 80rem)

LANGUAGE: CSS
CODE:
@container (width < ...)

----------------------------------------

TITLE: Space Evenly Content in Grid Layout
DESCRIPTION: Example showing how to distribute grid items with equal space between and around rows using content-evenly utility
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-content.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div class="grid h-56 grid-cols-3 content-evenly gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
</div>

----------------------------------------

TITLE: Object Contain Implementation in HTML
DESCRIPTION: Example demonstrating the object-contain utility to resize content while staying contained within its container boundaries.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-fit.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<img class="h-48 w-96 object-contain ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: HTML Example of Font Weight Utilities
DESCRIPTION: This snippet demonstrates the HTML usage of different font weight classes defined in Tailwind CSS. It provides concrete examples showing how these classes are applied to change font weight in paragraphs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-weight.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<p class="font-light ...">The quick brown fox ...</p>
<p class="font-normal ...">The quick brown fox ...</p>
<p class="font-medium ...">The quick brown fox ...</p>
<p class="font-semibold ...">The quick brown fox ...</p>
<p class="font-bold ...">The quick brown fox ...</p>

----------------------------------------

TITLE: Importing and Configuring Tailwind CSS in CSS File
DESCRIPTION: This snippet demonstrates a simplified configuration approach for Tailwind CSS, showing how to import Tailwind, custom fonts, and define theme variables directly in a CSS file.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2023-07-18-tailwind-connect-2023-recap/index.mdx#2025-04-18_snippet_0

LANGUAGE: css
CODE:
@import "tailwindcss";
@import "./fonts" layer(base);

:theme {
  --colors-neon-pink: oklch(71.7% 0.25 360);
  --colors-neon-lime: oklch(91.5% 0.258 129);
  --colors-neon-cyan: oklch(91.3% 0.139 195.8);

  --font-family-sans: "Inter", sans-serif;
  --font-family-display: "Satoshi", sans-serif;
}

----------------------------------------

TITLE: Implementing Orientation and Special Mode Queries in Tailwind CSS
DESCRIPTION: This snippet shows how Tailwind CSS handles orientation, scripting, and print mode queries using CSS media queries.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_79

LANGUAGE: CSS
CODE:
@media (orientation: portrait)

LANGUAGE: CSS
CODE:
@media (orientation: landscape)

LANGUAGE: CSS
CODE:
@media (scripting: none)

LANGUAGE: CSS
CODE:
@media print

----------------------------------------

TITLE: End Content Alignment in Grid Layout
DESCRIPTION: Example showing how to align grid items against the end of the cross axis using content-end utility
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-content.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="grid h-56 grid-cols-3 content-end gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
</div>

----------------------------------------

TITLE: Using Negative Letter Spacing Values in HTML with Tailwind CSS
DESCRIPTION: Shows how to use negative letter spacing values in Tailwind CSS by prefixing the class name with a dash.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/letter-spacing.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:-tracking-2] -->
<p class="-tracking-2">The quick brown fox ...</p>

----------------------------------------

TITLE: Basic Example of Background Clip Utilities in Tailwind CSS
DESCRIPTION: This code snippet provides a JSX-based example showing how to use bg-clip-border, bg-clip-padding, and bg-clip-content utilities in Tailwind CSS. Dependencies include Tailwind CSS classes to control background clip and general styling. The example shows outputs such as div elements styled with these utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-clip.mdx#2025-04-18_snippet_1

LANGUAGE: JSX
CODE:
{
  <div className="flex flex-col items-center justify-center space-y-10 sm:flex-row sm:space-y-0 sm:space-x-10">
    <div className="flex shrink-0 flex-col items-center">
      <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-clip-border
      </p>
      <div className="flex h-24 w-24 items-center justify-center rounded-lg border-3 border-dashed border-white/50 bg-indigo-500 bg-clip-border p-3 font-mono text-sm font-extrabold text-white"></div>
    </div>
    <div className="flex shrink-0 flex-col items-center">
      <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-clip-padding
      </p>
      <div className="flex h-24 w-24 items-center justify-center rounded-lg border-3 border-dashed border-indigo-500/50 bg-indigo-500 bg-clip-padding p-3 font-mono text-sm font-extrabold text-white"></div>
    </div>
    <div className="flex shrink-0 flex-col items-center">
      <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-clip-content
      </p>
      <div className="flex h-24 w-24 items-center justify-center rounded-lg border-3 border-dashed border-indigo-500/50 bg-indigo-500 bg-clip-content p-3 font-mono text-sm font-extrabold text-white"></div>
    </div>
  </div>
}

----------------------------------------

TITLE: Using flex-col in Tailwind CSS (HTML)
DESCRIPTION: Demonstrates how to use the `flex-col` utility in Tailwind CSS for vertical alignment of flex items. The code snippet shows a column layout using Tailwind's utility classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-direction.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<div class=\"flex flex-col ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>

----------------------------------------

TITLE: Using At-Rules in Arbitrary Variants with Tailwind CSS
DESCRIPTION: Shows how to incorporate at-rules like @media or @supports in arbitrary variants for conditional styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_69

LANGUAGE: html
CODE:
<div class="flex [@supports(display:grid)]:grid">
  <!-- ... -->
</div>

----------------------------------------

TITLE: HTML Simplified Transform and Filter Composition
DESCRIPTION: This HTML snippet demonstrates the simplified transform and filter composition in Tailwind CSS v2.2.  The `transform`, `filter`, and `backdrop-filter` classes are no longer necessary to enable their respective composable utilities, removing the need for the `transform` and `filter` base classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_22

LANGUAGE: html
CODE:
<div class="transform scale-50 filter grayscale backdrop-filter backdrop-blur-sm"> <!-- [!code --] -->
<div class="scale-50 grayscale backdrop-blur-sm"> <!-- [!code ++] -->
</div>

----------------------------------------

TITLE: Styling with group-aria-* modifiers in HTML
DESCRIPTION: This example demonstrates how to use the `group-aria-*` modifiers to style an element based on the `aria-sort` attribute of its parent. The HTML code includes an `svg` element that rotates based on the parent's `aria-sort` value.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<table>
  <thead>
    <tr>
      <th aria-sort="ascending" class="group">
        Invoice #
        <svg
          class="group-aria-[sort=ascending]:rotate-0 group-aria-[sort=descending]:rotate-180"
        >
          <!-- ... -->
        </svg>
      </th>
      <!-- ... -->
    </tr>
  </thead>
  <!-- ... -->
</table>

----------------------------------------

TITLE: Adding Borders Between Child Elements with Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates the use of Tailwind CSS classes like 'divide-x-4' to apply borders between child elements within a grid. The example requires an understanding of CSS grid layouts and Tailwind CSS classes for division and border management. It consists of a 3-column grid with borders dividing each element, intended for visual separation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-width.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<div class=\"grid grid-cols-3 divide-x-4\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>

----------------------------------------

TITLE: Tailwind CSS Background Origin Examples
DESCRIPTION: This HTML snippet shows how to apply the `bg-origin-border`, `bg-origin-padding`, and `bg-origin-content` Tailwind CSS classes to control the origin of the background image. Each div has a border, background image, and padding to demonstrate the effect of each background origin setting.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-origin.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="border-4 bg-[url(/img/mountains.jpg)] bg-origin-border p-3 ..."></div>
<div class="border-4 bg-[url(/img/mountains.jpg)] bg-origin-padding p-3 ..."></div>
<div class="border-4 bg-[url(/img/mountains.jpg)] bg-origin-content p-3 ..."></div>

----------------------------------------

TITLE: Custom ARIA Variant Definition
DESCRIPTION: Shows how to create custom ARIA variants for specific attribute values like ascending and descending sort states.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_51

LANGUAGE: css
CODE:
@custom-variant aria-asc (&[aria-sort="ascending"]);
@custom-variant aria-desc (&[aria-sort="descending"]);

----------------------------------------

TITLE: Using Line Clamp Utility Class
DESCRIPTION: Example showing how to use the line-clamp-3 utility class to truncate text to three lines with an ellipsis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/multi-line-truncation-with-tailwindcss-line-clamp/index.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<p class="line-clamp-3">
  Here's a block of text from a blog post that isn't conveniently three lines long like you designed for originally.
  It's probably like 6 lines on mobile or even on desktop depending on how you have things laid out. Truly a big pain in
  the derriere, and not the sort of thing you expected to be wasting your time trying to deal with at 4:45pm on a Friday
  am I right? You've got tickets to SmackDown and you heard there's gonna be a dark match with that local guy from two
  towns over that your cousin went to high school with before the show starts, and you're gonna miss it if you're not
  there early.
</p>

----------------------------------------

TITLE: React JSX Implementation of Hyphens Examples
DESCRIPTION: JSX code examples showing the implementation of the different hyphens utilities in React components. Each example demonstrates how to apply the respective hyphens class to text containing a long German word.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hyphens.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<p className="mx-auto max-w-xs border-x border-x-pink-400/30 py-8 break-normal hyphens-none text-gray-900 dark:text-gray-200">
  Officially recognized by the Duden dictionary as the longest word in German,{" "}
  <span className="font-bold" lang="de">
    Kraftfahrzeug&shy;haftpflichtversicherung
  </span>{" "}
  is a 36 letter word for motor vehicle liability insurance.
</p>

LANGUAGE: jsx
CODE:
<p className="mx-auto max-w-xs border-x border-x-pink-400/30 py-8 break-normal hyphens-manual text-gray-900 dark:text-gray-200">
  Officially recognized by the Duden dictionary as the longest word in German,{" "}
  <span className="font-bold" lang="de">
    Kraftfahrzeug&shy;haftpflichtversicherung
  </span>{" "}
  is a 36 letter word for motor vehicle liability insurance.
</p>

LANGUAGE: jsx
CODE:
<p className="mx-auto max-w-xs border-x border-x-pink-400/30 py-8 break-normal hyphens-auto text-gray-900 dark:text-gray-200">
  Officially recognized by the Duden dictionary as the longest word in German,{" "}
  <span className="font-bold" lang="de">
    Kraftfahrzeughaftpflichtversicherung
  </span>{" "}
  is a 36 letter word for motor vehicle liability insurance.
</p>

----------------------------------------

TITLE: Preventing Hyphenation with hyphens-none in HTML
DESCRIPTION: Example showing how to use the hyphens-none utility class to prevent words from being hyphenated even if the line break suggestion &shy; is used. This demonstrates the effect on a long German word.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hyphens.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- prettier-ignore -->
<p class="hyphens-none">
  ... Kraftfahrzeug&shy;haftpflichtversicherung is a ...
</p>

----------------------------------------

TITLE: Creating Gradient Color Stops with Tailwind CSS in HTML
DESCRIPTION: Demonstrates how to adjust gradient color stop positions with Tailwind CSS classes that specify percentage stops, allowing fine control over gradient color transitions. Requires Tailwind CSS. Key parameters include `from-*`, `via-*`, and `to-*` to define the color and position of gradient stops within a div. Inputs are Tailwind CSS classes and outputs are stylized gradient divs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<div class="bg-gradient-to-r from-indigo-500 from-10% via-purple-500 via-30% to-pink-500 to-90% ...">
  <!-- ... -->
</div>

LANGUAGE: html
CODE:
<div class="bg-gradient-to-r from-cyan-400 from-[21.56%] ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Object None Implementation in HTML
DESCRIPTION: Example showing object-none utility usage to display content at its original size, ignoring container dimensions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-fit.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<img class="h-48 w-96 object-none ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Start-alignment Example with Tailwind CSS
DESCRIPTION: Shows how to use self-start utility to align an item to the start of the container's cross axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-self.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="flex items-stretch ...">
  <div>01</div>
  <div class="self-start ...">02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Defining Metadata for Perspective Origin Documentation
DESCRIPTION: JSX code that exports title and description metadata for the perspective-origin documentation page. This metadata describes the purpose of the perspective-origin utilities in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/perspective-origin.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
export const title = "perspective-origin";
export const description = "Utilities for controlling an element's perspective origin when placed in 3D space";

----------------------------------------

TITLE: Responsive Design for Gaps in JSX
DESCRIPTION: This snippet showcases how to create responsive gap utilities by utilizing the ResponsiveDesign component. It provides a seamless transition of class styles with defined default and featured classes for responsive design.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/gap.mdx#2025-04-18_snippet_5

LANGUAGE: jsx
CODE:
<ResponsiveDesign properties={["gap", "column-gap", "row-gap"]} defaultClass="grid gap-4" featuredClass="gap-6" />

----------------------------------------

TITLE: Using place-items-stretch in Tailwind CSS Grid
DESCRIPTION: Example of using place-items-stretch to make grid items stretch along their grid areas on both axes. This creates a layout where items expand to fill their grid cells in both directions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-items.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="grid h-56 grid-cols-3 place-items-stretch gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
  <div>06</div>
</div>

----------------------------------------

TITLE: Undoing Line Clamping with Responsive Design
DESCRIPTION: Example showing how to use line-clamp-none utility to undo a previously applied line clamp at a specific breakpoint.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/line-clamp.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:lg:line-clamp-none] -->
<p class="line-clamp-3 lg:line-clamp-none">
  <!-- ... -->
</p>

----------------------------------------

TITLE: HTML example usage of break-inside utilities
DESCRIPTION: Demonstrates how to use the `break-inside-avoid-column` utility class within an HTML structure to prevent column breaks within a specific element. The surrounding `div` with `columns-2` class creates a two-column layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/break-inside.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="columns-2">
  <p>Well, let me tell you something, ...</p>
  <p class="break-inside-avoid-column">Sure, go ahead, laugh...</p>
  <p>Maybe we can live without...</p>
  <p>Look. If you think this is...</p>
</div>

----------------------------------------

TITLE: Using Arbitrary Peer Selectors in HTML
DESCRIPTION: This example demonstrates how to create one-off peer variants using arbitrary selectors in square brackets to target elements with specific classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_21

LANGUAGE: html
CODE:
<form>
  <label for="email">Email:</label>
  <input id="email" name="email" type="email" class="is-dirty peer" required />
  <div class="peer-[.is-dirty]:peer-required:block hidden">This field is required.</div>
  <!-- ... -->
</form>

----------------------------------------

TITLE: Displaying Background Image Examples with Tailwind CSS
DESCRIPTION: This code snippet presents an interactive example of various Tailwind CSS utilities for positioning background images. It utilizes utility classes like 'bg-top-left', 'bg-top', and others to display background images in different positions within a scrollable container. Each example is provided with an accompanying label to identify the background utility being used.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-position.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div className="w-full">
  <div className="flex snap-x scroll-p-4 items-end overflow-x-scroll overflow-y-hidden p-8 pt-16 sm:grid sm:grid-cols-3 sm:gap-16">
    <div className="relative w-32 shrink-0 snap-start snap-always sm:w-auto">
      <p className="absolute inset-x-0 top-0 mb-3 -translate-y-8 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-top-left
      </p>
      <div className="group relative mx-auto h-20 w-20 rounded-lg">
        <div className="relative z-10 h-full w-full rounded-md bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-[size:8rem] bg-top-left outline -outline-offset-1 outline-black/10"></div>
        <img
          className="absolute top-0 left-0 h-32 w-32 max-w-none overflow-hidden rounded-md opacity-0 sm:group-hover:opacity-25"
          src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
        />
      </div>
    </div>
    <div className="relative w-32 shrink-0 snap-start snap-always sm:w-auto">
      <p className="absolute inset-x-0 top-0 mb-3 -translate-y-8 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-top
      </p>
      <div className="group relative mx-auto h-20 w-20 rounded-lg">
        <div className="relative z-10 h-full w-full rounded-md bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-[size:8rem] bg-top outline -outline-offset-1 outline-black/10"></div>
        <img
          className="absolute top-0 -left-6 h-32 w-32 max-w-none overflow-hidden rounded-md opacity-0 sm:group-hover:opacity-25"
          src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
        />
      </div>
    </div>
    <div className="relative w-32 shrink-0 snap-start snap-always sm:w-auto">
      <p className="absolute inset-x-0 top-0 mb-3 -translate-y-8 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-top-right
      </p>
      <div className="group relative mx-auto h-20 w-20 rounded-lg">
        <div className="relative z-10 h-full w-full rounded-md bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-[size:8rem] bg-top-right outline -outline-offset-1 outline-black/10"></div>
        <img
          className="absolute top-0 right-0 h-32 w-32 max-w-none overflow-hidden rounded-md opacity-0 sm:group-hover:opacity-25"
          src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
        />
      </div>
    </div>
    <div className="relative w-32 shrink-0 snap-start snap-always sm:w-auto">
      <p className="absolute inset-x-0 top-0 mb-3 -translate-y-8 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-left
      </p>
      <div className="group relative mx-auto h-20 w-20 rounded-lg">
        <div className="relative z-10 h-full w-full rounded-md bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixid=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-[size:8rem] bg-left outline -outline-offset-1 outline-black/10"></div>
        <img
          className="absolute -top-6 left-0 h-32 w-32 max-w-none overflow-hidden rounded-md opacity-0 sm:group-hover:opacity-25"
          src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
        />
      </div>
    </div>
    <div className="relative w-32 shrink-0 snap-start snap-always sm:w-auto">
      <p className="absolute inset-x-0 top-0 mb-3 -translate-y-8 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-center
      </p>
      <div className="group relative mx-auto h-20 w-20 rounded-lg">
        <div className="relative z-10 h-full w-full rounded-md bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-[size:8rem] bg-center outline -outline-offset-1 outline-black/10"></div>
        <img
          className="absolute -top-6 -left-6 h-32 w-32 max-w-none overflow-hidden rounded-md opacity-0 sm:group-hover:opacity-25"
          src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
        />
      </div>
    </div>
    <div className="relative w-32 shrink-0 snap-start snap-always sm:w-auto">
      <p className="absolute inset-x-0 top-0 mb-3 -translate-y-8 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-right
      </p>
      <div className="group relative mx-auto h-20 w-20 rounded-lg">
        <div className="relative z-10 h-full w-full rounded-md bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-[size:8rem] bg-right outline -outline-offset-1 outline-black/10"></div>
        <img
          className="absolute -top-6 right-0 h-32 w-32 max-w-none overflow-hidden rounded-md opacity-0 sm:group-hover:opacity-25"
          src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
        />
      </div>
    </div>
    <div className="relative w-32 shrink-0 snap-start snap-always sm:w-auto">
      <p className="absolute inset-x-0 top-0 mb-3 -translate-y-8 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-bottom-left
      </p>
      <div className="group relative mx-auto h-20 w-20 rounded-lg">
        <div className="relative z-10 h-full w-full rounded-md bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixid=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-[size:8rem] bg-bottom-left outline -outline-offset-1 outline-black/10"></div>
        <img
          className="absolute -top-12 left-0 h-32 w-32 max-w-none overflow-hidden rounded-md opacity-0 sm:group-hover:opacity-25"
          src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
        />
      </div>
    </div>
    <div className="relative w-32 shrink-0 snap-start snap-always sm:w-auto">
      <p className="absolute inset-x-0 top-0 mb-3 -translate-y-8 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-bottom
      </p>
      <div className="group relative mx-auto h-20 w-20 rounded-lg">
        <div className="relative z-10 h-full w-full rounded-md bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-[size:8rem] bg-bottom outline -outline-offset-1 outline-black/10"></div>
        <img
          className="absolute -top-12 -left-6 h-32 w-32 max-w-none overflow-hidden rounded-md opacity-0 sm:group-hover:opacity-25"
          src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
        />
      </div>
    </div>
    <div className="relative -mx-8 w-48 shrink-0 snap-start snap-always sm:w-auto">
      <p className="absolute inset-x-0 top-0 mb-3 -translate-y-8 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
        bg-bottom-right
      </p>
      <div className="group relative mx-auto h-20 w-20 rounded-lg">
        <div className="relative z-10 h-full w-full rounded-md bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-[size:8rem] bg-bottom-right outline -outline-offset-1 outline-black/10"></div>
        <img
          className="absolute -top-12 right-0 h-32 w-32 max-w-none overflow-hidden rounded-md opacity-0 sm:group-hover:opacity-25"
          src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
        />
      </div>
    </div>
  </div>
</div>

----------------------------------------

TITLE: Basic Mask Position Example HTML
DESCRIPTION: Demonstrates the implementation of various mask position utilities in TailwindCSS, showing different positioning options like top-left, center, bottom-right etc.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-position.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="mask-top-left mask-[url(/img/circle.png)] mask-size-[50%] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-top mask-[url(/img/circle.png)] mask-size-[50%] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-top-right mask-[url(/img/circle.png)] mask-size-[50%] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-left mask-[url(/img/circle.png)] mask-size-[50%] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-center mask-[url(/img/circle.png)] mask-size-[50%] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-right mask-[url(/img/circle.png)] mask-size-[50%] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-bottom-left mask-[url(/img/circle.png)] mask-size-[50%] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-bottom mask-[url(/img/circle.png)] mask-size-[50%] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-bottom-right mask-[url(/img/circle.png)] mask-size-[50%] bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Example of Caption Positioned at Top of Table - React
DESCRIPTION: This snippet demonstrates how to use the 'caption-top' utility to position a caption element at the top of a table. It provides a structural example of a table with a caption using React components.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/caption-side.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
<Figure>

<Example padding={false}>
  {
    <div className="overflow-hidden px-4 py-8 sm:px-8">
      <table className="w-full table-auto border-collapse text-sm">
        <caption className="caption-top pb-4 text-xs text-gray-500 dark:text-gray-400">
          Table 3.1: Professional wrestlers and their signature moves.
        </caption>
        <thead>
          <tr>
            <th className="border border-gray-200 bg-gray-50 p-4 py-3 pl-8 text-left font-medium text-gray-400 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-200">
              Wrestler
            </th>
            <th className="border border-gray-200 bg-gray-50 p-4 py-3 pr-8 text-left font-medium text-gray-400 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-200">
              Signature Move(s)
            </th>
          </tr>
        </thead>
        <tbody className="bg-white dark:bg-gray-800">
          <tr>
            <td className="border border-gray-200 p-4 pl-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              "Stone Cold" Steve Austin
            </td>
            <td className="border border-gray-200 p-4 pr-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              Stone Cold Stunner, Lou Thesz Press
            </td>
          </tr>
          <tr>
            <td className="border border-gray-200 p-4 pl-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              Bret "The Hitman" Hart
            </td>
            <td className="border border-gray-200 p-4 pr-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              The Sharpshooter
            </td>
          </tr>
          <tr>
            <td className="border border-gray-200 p-4 pl-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              Razor Ramon
            </td>
            <td className="border border-gray-200 p-4 pr-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              Razor's Edge, Fallaway Slam
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  }
</Example>

</Figure>

----------------------------------------

TITLE: Using Container Queries in Tailwind CSS (HTML)
DESCRIPTION: This HTML snippet demonstrates the usage of container queries with the Tailwind CSS plugin. It includes using the @container directive to apply different styles based on container size. The provided example uses @lg:flex to apply flexbox styles when certain conditions are met.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_26

LANGUAGE: html
CODE:
<div class="@container">
  <div class="block @lg:flex">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Using justify-self-start with Tailwind CSS
DESCRIPTION: Example showing how to use the justify-self-start utility to align a grid item to the start of its inline axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-self.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:justify-self-start] -->
<div class="grid justify-items-stretch ...">
  <!-- ... -->
  <div class="justify-self-start ...">02</div>
  <!-- ... -->
</div>

----------------------------------------

TITLE: Implementing a Basic Backdrop Blur Example
DESCRIPTION: This HTML snippet shows how to control an element’s backdrop blur using Tailwind’s predefined classes such as 'backdrop-blur-sm' and 'backdrop-blur-md'. The inputs are different blur utilities applied to divisions to demonstrate various blur strengths. The outputs are visual blur effects on the specified elements, with images serving as background content. This example helps visually differentiate blur intensity when classes are applied.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-blur.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-blur-none ..."></div>
</div>
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-blur-sm ..."></div>
</div>
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-blur-md ..."></div>
</div>

----------------------------------------

TITLE: Making Elements Visible with Tailwind CSS - HTML
DESCRIPTION: This code snippet demonstrates how to use the 'visible' utility in Tailwind CSS to ensure an element is visible. This is particularly useful when reversing the 'invisible' class effect on different screen sizes. It shows a grid with three elements, and the 'visible' class is applied to the second element, ensuring it remains visible. There are no external dependencies beyond Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/visibility.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<!-- [!code classes:visible] -->
<div class="grid grid-cols-3 gap-4">
  <div>01</div>
  <div class="visible ...">02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Hover State Example in TailwindCSS
DESCRIPTION: Demonstrates how to apply styles when hovering over an element using TailwindCSS hover variant.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_81

LANGUAGE: html
CODE:
<div class="bg-black hover:bg-white ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Overriding Preflight Border Styles in CSS
DESCRIPTION: Demonstrates how to override Preflight border styles for specific elements using custom CSS in the base layer, useful for integrating third-party libraries.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_3

LANGUAGE: CSS
CODE:
@layer base {
  .google-map * {
    border-style: none;
  }
}

----------------------------------------

TITLE: Color Scheme Example with Input Elements
DESCRIPTION: Interactive example demonstrating color scheme utilities applied to date input elements, showing light, dark, and light-dark modes
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/color-scheme.mdx#2025-04-18_snippet_2

LANGUAGE: tsx
CODE:
<div className="flex justify-between gap-8 text-sm max-sm:flex-col">
  <div className="flex flex-grow flex-col items-center gap-3 text-center scheme-light">
    <p className="font-mono font-medium text-gray-500 dark:text-gray-400">scheme-light</p>
    <input
      type="date"
      className="w-full rounded-lg border border-gray-950/10 bg-[Field] px-3 py-2 text-[FieldText] dark:border-white/10"
    />
  </div>
  <div className="flex flex-grow flex-col items-center gap-3 text-center scheme-dark">
    <p className="font-mono font-medium text-gray-500 dark:text-gray-400">scheme-dark</p>
    <input
      type="date"
      className="w-full rounded-lg border border-gray-950/10 bg-[Field] px-3 py-2 text-[FieldText] dark:border-white/10"
    />
  </div>
  <div className="flex flex-grow flex-col items-center gap-3 text-center scheme-light-dark">
    <p className="font-medium text-gray-500 dark:text-gray-400">scheme-light-dark</p>
    <input
      type="date"
      className="w-full rounded-lg border border-gray-950/10 bg-[Field] px-3 py-2 text-[FieldText] dark:border-white/10"
    />
  </div>
</div>

----------------------------------------

TITLE: Using justify-self-end with Tailwind CSS
DESCRIPTION: Example showing how to use the justify-self-end utility to align a grid item to the end of its inline axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-self.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code filename:justify-self-end] -->
<!-- [!code classes:justify-self-end] -->
<div class="grid justify-items-stretch ...">
  <!-- ... -->
  <div class="justify-self-end ...">02</div>
  <!-- ... -->
</div>

----------------------------------------

TITLE: Center Content Placement in Grid
DESCRIPTION: Places grid items in the center of the container using place-content-center utility. Creates a 2-column grid with centered content both vertically and horizontally.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-content.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<div class="grid h-48 grid-cols-2 place-content-center gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
</div>

----------------------------------------

TITLE: Removing a Border with Tailwind CSS in HTML
DESCRIPTION: An HTML snippet demonstrating the use of the `border-none` utility class to remove borders from an element. This snippet highlights how to make existing borders disappear by applying the `border-none` class of Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-style.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<!-- [!code classes:border-none] -->
<button class="border-none ...">Save Changes</button>

----------------------------------------

TITLE: Basic Background Color Example in HTML
DESCRIPTION: This HTML snippet illustrates the application of Tailwind CSS background color utilities with classes such as `bg-white`, `bg-indigo-500`, and `bg-transparent`. It involves rendering buttons with different background colors for demonstration purposes. No specific inputs are necessary, and the example does not return any output but visualizes the specified styles on buttons.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-color.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<Figure>

<Example>
  {
    <div className="grid grid-cols-1 gap-4 text-sm text-white sm:grid-cols-3">
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">bg-blue-500</p>
        <button
          type="button"
          tabIndex="-1"
          className="rounded-md bg-blue-500 px-4 py-2 text-sm font-semibold text-white opacity-100 focus:outline-none"
        >
          Button A
        </button>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">bg-cyan-500</p>
        <button
          type="button"
          tabIndex="-1"
          className="rounded-md bg-cyan-500 px-4 py-2 text-sm font-semibold text-white opacity-100 focus:outline-none"
        >
          Button B
        </button>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">bg-pink-500</p>
        <button
          type="button"
          tabIndex="-1"
          className="rounded-md bg-pink-500 px-4 py-2 text-sm font-semibold text-white opacity-100 focus:outline-none"
        >
          Button C
        </button>
      </div>
    </div>
  }
</Example>

<pre><code class="language-html">
<!-- [!code classes:bg-blue-500,bg-cyan-500,bg-pink-500] -->
<button class="bg-blue-500 ...">Button A</button>
<button class="bg-cyan-500 ...">Button B</button>
<button class="bg-pink-500 ...">Button C</button>
</code></pre>

</Figure>

----------------------------------------

TITLE: Styling Odd/Even Rows with Tailwind CSS in Svelte
DESCRIPTION: Demonstrates how to create alternating row colors in a table using Tailwind's odd: and even: variants. Includes support for both light and dark mode with different background colors.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_6

LANGUAGE: svelte
CODE:
<table>
  <!-- ... -->
  <tbody>
    {#each people as person}
      <!-- Use different background colors for odd and even rows -->
      <tr class="odd:bg-white even:bg-gray-50 dark:odd:bg-gray-900/50 dark:even:bg-gray-950">
        <td>{person.name}</td>
        <td>{person.title}</td>
        <td>{person.email}</td>
      </tr>
    {/each}
  </tbody>
</table>

----------------------------------------

TITLE: Tailwind CSS flex-basis percentages HTML
DESCRIPTION: This HTML snippet demonstrates how to use percentage-based flex-basis classes in Tailwind CSS. The classes `basis-1/3` and `basis-2/3` determine the initial sizes of the flex children.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-basis.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<!-- [!code classes:basis-1/3,basis-2/3] -->
<div class="flex flex-row">
  <div class="basis-1/3">01</div>
  <div class="basis-2/3">02</div>
</div>

----------------------------------------

TITLE: Multiple Interactive States in Tailwind CSS
DESCRIPTION: Example demonstrating how to style a button with hover, focus, and active states using Tailwind's variant prefixes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:hover:bg-violet-600,focus:outline-2,focus:outline-offset-2,focus:outline-violet-500,active:bg-violet-700] -->
<!-- prettier-ignore -->
<button class="bg-violet-500 hover:bg-violet-600 focus:outline-2 focus:outline-offset-2 focus:outline-violet-500 active:bg-violet-700 ...">
  Save changes
</button>

----------------------------------------

TITLE: Tailwind CSS flex-basis container scale HTML
DESCRIPTION: This HTML snippet shows how to implement flex-basis container scale using Tailwind CSS. The classes `basis-3xs`, `basis-2xs`, `basis-xs`, and `basis-sm` are applied to flex items.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-basis.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<!-- [!code classes:basis-3xs,basis-2xs,basis-xs,basis-sm] -->
<div class="flex flex-row">
  <div class="basis-3xs">01</div>
  <div class="basis-2xs">02</div>
  <div class="basis-xs">03</div>
  <div class="basis-sm">04</div>
</div>

----------------------------------------

TITLE: Responsive Design for Backdrop Hue Rotate
DESCRIPTION: This snippet demonstrates how to implement responsive design for the backdrop hue-rotate utility using a React component. It defines default and featured classes to adapt the hue rotation based on screen size or layout requirements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-hue-rotate.mdx#2025-04-18_snippet_4

LANGUAGE: javascript
CODE:
<ResponsiveDesign
  property="backdrop-filter: hue-rotate()"
  defaultClass="backdrop-hue-rotate-15"
  featuredClass="backdrop-hue-rotate-0"
/>

----------------------------------------

TITLE: Applying Underline Utility in HTML
DESCRIPTION: This example demonstrates how to use the 'underline' utility class in Tailwind CSS to add an underline to text.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-line.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:underline] -->
<p class="underline">The quick brown fox...</p>

----------------------------------------

TITLE: Basic List Style Type Examples in HTML
DESCRIPTION: Examples of using Tailwind CSS list-style-type utilities to control the style of list markers. Shows disc, decimal, and none marker styles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/list-style-type.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- [!code classes:list-disc] -->
<ul class="list-disc">
  <li>Now this is a story all about how, my life got flipped-turned upside down</li>
  <!-- ... -->
</ul>

<!-- [!code classes:list-decimal] -->
<ol class="list-decimal">
  <li>Now this is a story all about how, my life got flipped-turned upside down</li>
  <!-- ... -->
</ol>

<!-- [!code classes:list-none] -->
<ul class="list-none">
  <li>Now this is a story all about how, my life got flipped-turned upside down</li>
  <!-- ... -->
</ul>

----------------------------------------

TITLE: Implementing First/Last Child Styling with Tailwind CSS in Svelte
DESCRIPTION: Example showing how to apply different padding to first and last list items using Tailwind's first: and last: variants. The code removes top padding from the first item and bottom padding from the last item in a list.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_5

LANGUAGE: svelte
CODE:
<ul role="list">
  {#each people as person}
    <!-- Remove top/bottom padding when first/last child -->
    <li class="flex py-4 first:pt-0 last:pb-0">
      <img class="h-10 w-10 rounded-full" src={person.imageUrl} alt="" />
      <div class="ml-3 overflow-hidden">
        <p class="text-sm font-medium text-gray-900 dark:text-white">{person.name}</p>
        <p class="truncate text-sm text-gray-500 dark:text-gray-400">{person.email}</p>
      </div>
    </li>
  {/each}
</ul>

----------------------------------------

TITLE: Clearing End with RTL Example - Tailwind CSS
DESCRIPTION: This JSX snippet demonstrates the usage of `clear-end` in an RTL context using `dir="rtl"`. The `clear-end` class will clear the 'end' side, which resolves to the left side in an RTL context. The text is also in Arabic, demonstrating a real-world use case.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/clear.mdx#2025-04-18_snippet_7

LANGUAGE: JSX
CODE:
    "<div dir=\"rtl\">
      <img
        className=\"float-left mr-6 mb-4 aspect-16/9 w-1/4 rounded-lg object-cover outline -outline-offset-1 outline-black/10\"
        src=\"https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90\"
      />
      <img
        className=\"float-right ml-6 aspect-6/5 w-2/5 rounded-lg object-cover outline -outline-offset-1 outline-black/10\"
        src=\"https://images.unsplash.com/photo-1434394354979-a235cd36269d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1000&h=1000&q=90\"
      />
      <p className=\"clear-end text-justify\">
        ربما يمكننا العيش بدون مكتبات، أشخاص مثلي ومثلك. ربما. بالتأكيد، نحن أكبر من أن نغير العالم، ولكن ماذا عن ذلك
        الطفل الذي يجلس ويفتح كتابًا الآن في أحد فروع المكتبة المحلية ويجد رسومات للتبول والبول على القطة في القبعة
        والإخوة الصينيون الخمسة؟ ألا يستحق الأفضل؟ ينظر. إذا كنت تعتقد أن الأمر يتعلق بالغرامات المتأخرة والكتب
        المفقودة، فمن الأفضل أن تفكر مرة أخرى. يتعلق الأمر بحق ذلك الطفل في قراءة كتاب دون أن يتشوه عقله! أو: ربما يثيرك
        هذا يا سينفيلد؛ ربما هذه هي الطريقة التي تحصل بها على ركلاتك. أنت ورفاقك الطيبين.
      </p>
    </div>"

----------------------------------------

TITLE: Defining Columns by Number Using Tailwind CSS in HTML
DESCRIPTION: This HTML snippet demonstrates the use of Tailwind CSS classes to define a fixed number of columns. Utilizing the 'columns-3' utility, it organizes content into three columns and includes various formatted images. These columns are adaptable based on content and grid design.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/columns.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="columns-3 ...">
  <img class="aspect-3/2 ..." src="/img/mountains-1.jpg" />
  <img class="aspect-square ..." src="/img/mountains-2.jpg" />
  <img class="aspect-square ..." src="/img/mountains-3.jpg" />
  <!-- ... -->
</div>

----------------------------------------

TITLE: Using Open Variant for Popovers in HTML
DESCRIPTION: Shows how to use the open variant to target the :popover-open pseudo-class for popovers.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_61

LANGUAGE: html
CODE:
<div>
  <button popovertarget="my-popover">Open Popover</button>
  <div popover id="my-popover" class="opacity-0 open:opacity-100 ...">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Adding Space Between Children with space-x Utility in HTML
DESCRIPTION: This snippet demonstrates using the space-x-4 utility class to add horizontal spacing between flex items. The space-x-4 class adds margin-left to all children except the first child, creating consistent spacing in a flexbox layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/margin.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<!-- [!code classes:space-x-4] -->
<div class="flex space-x-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Mandatory Scroll Snapping Implementation
DESCRIPTION: HTML example demonstrating mandatory scroll snapping behavior using snap-mandatory utility alongside snap-x. Forces the container to always stop at snap points.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-snap-type.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="snap-x snap-mandatory ...">
  <div class="snap-center ...">
    <img src="/img/vacation-01.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-02.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-03.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-04.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-05.jpg" />
  </div>
  <div class="snap-center ...">
    <img src="/img/vacation-06.jpg" />
  </div>
</div>

----------------------------------------

TITLE: Alternative Approach Using Regular Elements
DESCRIPTION: Demonstrates an alternative implementation of the skewed background effect using regular HTML elements instead of pseudo-elements for better readability.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_27

LANGUAGE: html
CODE:
<blockquote class="text-center text-2xl font-semibold text-gray-900 italic">
  When you look
  <span class="relative">
    <span class="absolute -inset-1 block -skew-y-3 bg-pink-500" aria-hidden="true"></span>
    <span class="relative text-white">annoyed</span>
  </span>
  all the time, people think that you're busy.
</blockquote>

----------------------------------------

TITLE: CSS-First Configuration in Tailwind CSS
DESCRIPTION: This CSS code demonstrates the new CSS-first configuration introduced in Tailwind CSS v4.0. Instead of a `tailwind.config.js` file, customizations are configured directly in the CSS file where Tailwind is imported, using the `@theme` block to define variables.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_6

LANGUAGE: css
CODE:
/* [!code filename:CSS] */
@import "tailwindcss";

@theme {
  --font-display: "Satoshi", "sans-serif";

  --breakpoint-3xl: 1920px;

  --color-avocado-100: oklch(0.99 0 0);
  --color-avocado-200: oklch(0.98 0.04 113.22);
  --color-avocado-300: oklch(0.94 0.11 115.03);
  --color-avocado-400: oklch(0.92 0.19 114.08);
  --color-avocado-500: oklch(0.84 0.18 117.33);
  --color-avocado-600: oklch(0.53 0.12 118.34);

  --ease-fluid: cubic-bezier(0.3, 0, 0, 1);
  --ease-snappy: cubic-bezier(0.2, 0, 0, 1);

  /* ... */
}

----------------------------------------

TITLE: Flex Initial Item Behavior
DESCRIPTION: Demonstrates using flex-initial to allow flex items to shrink but not grow, preserving their initial size
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="flex">
  <div class="w-14 flex-none ...">01</div>
  <div class="w-64 flex-initial ...">02</div>
  <div class="w-32 flex-initial ...">03</div>
</div>

----------------------------------------

TITLE: Applying Logical Properties with Tailwind CSS
DESCRIPTION: This snippet illustrates the use of Tailwind CSS classes like 'border-s-4' to define logical properties such as 'border-inline-start-width'. It enables the application of style depending on text direction (LTR or RTL). It requires CSS logical properties and Tailwind CSS for the utility classes. It displays left and right aligned bordered elements depending on the 'dir' attribute.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-width.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<div dir=\"ltr\">\n  <div class=\"border-s-4 ...\"></div>\n</div>\n<div dir=\"rtl\">\n  <div class=\"border-s-4 ...\"></div>\n</div>

----------------------------------------

TITLE: HTML Cursor Example
DESCRIPTION: This HTML snippet demonstrates how to apply Tailwind CSS cursor classes to button elements. Each button has a different cursor class: `cursor-pointer`, `cursor-progress`, and `cursor-not-allowed`, which define the cursor style when hovering over the button.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/cursor.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:cursor-pointer,cursor-progress,cursor-not-allowed] -->
<button class="cursor-pointer ...">Submit</button>
<button class="cursor-progress ...">Saving...</button>
<button class="cursor-not-allowed ..." disabled>Confirm</button>

----------------------------------------

TITLE: Rendering Font Weight Utilities in Tailwind CSS
DESCRIPTION: This snippet utilizes the ApiTable component to display a list of font weight utilities available in Tailwind CSS. Each utility corresponds to a CSS font-weight property value, providing a quick reference for developers.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-weight.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { ApiTable } from "@/components/api-table.tsx";

<ApiTable
  rows={[
    ["font-thin", "font-weight: 100;"],
    ["font-extralight", "font-weight: 200;"],
    ["font-light", "font-weight: 300;"],
    ["font-normal", "font-weight: 400;"],
    ["font-medium", "font-weight: 500;"],
    ["font-semibold", "font-weight: 600;"],
    ["font-bold", "font-weight: 700;"],
    ["font-extrabold", "font-weight: 800;"],
    ["font-black", "font-weight: 900;"],
    ["font-(<custom-property>)", "font-weight: var(<custom-property>);"],
    ["font-[<value>]", "font-weight: <value>;"],
  ]}
/>

----------------------------------------

TITLE: Demonstrating Text Wrapping in Tailwind CSS
DESCRIPTION: Provides an example of using the text-wrap utility in Tailwind CSS to allow text to wrap onto multiple lines at logical points.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-wrap.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<!-- [!code classes:text-wrap] -->
<article class="text-wrap">
  <h3>Beloved Manhattan soup stand closes</h3>
  <p>New Yorkers are facing the winter chill...</p>
</article>

----------------------------------------

TITLE: Basic Fill Example with SVG
DESCRIPTION: This example demonstrates how to use the `fill-blue-500` utility class to set the fill color of an SVG element.  The SVG is displayed within a `div` element and styled with Tailwind CSS classes for centering the content. The resulting SVG icon will have a blue fill.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/fill.mdx#2025-04-18_snippet_1

LANGUAGE: typescript
CODE:
"{
    <div className=\"flex items-center justify-center\">
      <svg className=\"h-12 fill-blue-500\" viewBox=\"0 0 46 48\">
        <path
          fillRule=\"evenodd\"
          clipRule=\"evenodd\"
          d=\"M23.0002 0C12.5068 0 4.00017 8.50659 4.00017 19V32.5335C4.00017 32.8383 3.9145 33.1371 3.75292 33.3956L0.912672 37.94C0.0801118 39.2721 1.0378 41 2.60867 41H43.3917C44.9625 41 45.9202 39.2721 45.0877 37.94L42.2474 33.3956C42.0858 33.1371 42.0002 32.8383 42.0002 32.5335V19C42.0002 8.50659 33.4936 0 23.0002 0ZM23.0002 48C20.2388 48 18.0002 45.7614 18.0002 43H28.0002C28.0002 45.7614 25.7616 48 23.0002 48Z\"
        />
      </svg>
    </div>
  }"

LANGUAGE: html
CODE:
"<svg class=\"fill-blue-500 ...\">
  <!-- ... -->
</svg>"

----------------------------------------

TITLE: Using Box-Border Utility in Tailwind CSS
DESCRIPTION: Demonstrates how to apply Tailwind's 'box-border' utility to ensure that an element's borders and padding are included in its size calculations. This is important for maintaining a consistent layout when elements have defined dimensions along with borders and padding.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-sizing.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<div class="box-border size-32 border-4 p-4 ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Adding Custom Variants in CSS
DESCRIPTION: This CSS snippet demonstrates how to add custom variants using the `@custom-variant` directive. It creates a `theme-midnight` variant that applies styles within elements with the `data-theme="midnight"` attribute.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_21

LANGUAGE: css
CODE:
@custom-variant theme-midnight {
  &:where([data-theme="midnight"] *) {
    @slot;
  }
}

----------------------------------------

TITLE: Space Around Content in Grid Layout
DESCRIPTION: Example showing how to distribute grid items with equal space around rows using content-around utility
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-content.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="grid h-56 grid-cols-3 content-around gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
</div>

----------------------------------------

TITLE: Referencing Other Variables in Tailwind CSS Theme
DESCRIPTION: This snippet demonstrates how to reference other variables when defining theme variables using the 'inline' option.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_17

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme inline {
  --font-sans: var(--font-inter);
}

----------------------------------------

TITLE: Odd/Even Child Styling in Svelte with TailwindCSS
DESCRIPTION: Demonstrates alternating row styles in a table using odd/even variants.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_85

LANGUAGE: svelte
CODE:
<table>
  {#each people as person}
    <tr class="bg-white odd:bg-gray-100 even:bg-gray-100 ...">
      <!-- ... -->
    </tr>
  {/each}
</table>

----------------------------------------

TITLE: Preventing Text Wrapping in Tailwind CSS
DESCRIPTION: Demonstrates the use of the text-nowrap utility in Tailwind CSS to prevent text from wrapping, allowing it to overflow if necessary.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-wrap.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<!-- [!code classes:text-nowrap] -->
<article class="text-nowrap">
  <h3>Beloved Manhattan soup stand closes</h3>
  <p>New Yorkers are facing the winter chill...</p>
</article>

----------------------------------------

TITLE: Defining Animation Keyframes and Properties in CSS
DESCRIPTION: Core animation definitions including spin, ping, pulse, and bounce animations with their respective keyframe declarations and timing functions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/animation.mdx#2025-04-18_snippet_0

LANGUAGE: css
CODE:
animation: var(--animate-spin);

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

animation: var(--animate-ping);

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

animation: var(--animate-pulse);

@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}

animation: var(--animate-bounce);

@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}

----------------------------------------

TITLE: Traditional CSS Hover Implementation
DESCRIPTION: Example of how hover states are traditionally implemented in CSS with a single class name having different styles based on state.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_1

LANGUAGE: css
CODE:
.btn-primary {
  background-color: #0ea5e9;
}

.btn-primary:hover {
  background-color: #0369a1;
}

----------------------------------------

TITLE: Grid Items Alignment with justify-items-start in HTML
DESCRIPTION: Example showing how to use the justify-items-start utility to align grid items to the start of their inline axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-items.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- [!code classes:justify-items-start] -->
<div class="grid justify-items-start ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
  <div>06</div>
</div>

----------------------------------------

TITLE: Basic Usage Example of Backdrop Hue Rotate
DESCRIPTION: This snippet demonstrates how to use the backdrop hue-rotate utility classes in a React component to apply these styles to elements visually. It provides examples with different hue rotation values, rendering corresponding backdrop elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-hue-rotate.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
<Figure>
<Example padding={false}>
  {
    <div className="flex scroll-p-8 justify-start overflow-scroll sm:block sm:overflow-visible">
      <div className="flex shrink-0 items-center justify-around gap-6 p-8 font-mono font-bold sm:gap-4">
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-hue-rotate-90
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-hue-rotate-90"></div>
            <img
              className="size-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-hue-rotate-180
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-hue-rotate-180"></div>
            <img
              className="size-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-hue-rotate-270
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-hue-rotate-270"></div>
            <img
              className="size-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
      </div>
    </div>
  }
</Example>
</Figure>

----------------------------------------

TITLE: Applying Radial Gradient Masks with Tailwind CSS
DESCRIPTION: This example demonstrates how to apply a radial gradient mask to an element using Tailwind CSS classes. The class `mask-radial-from-75%` controls the gradient's color stop.  It utilizes image elements with custom classes to create a masked effect.  The `mask-radial-[100%_100%]` sets the size and position of the mask.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_10

LANGUAGE: html
CODE:
<div class="flex items-center gap-4">
  <img class="mask-radial-[100%_100%] mask-radial-from-75% mask-radial-at-left ..." src="/img/keyboard.png" />
  <div class="font-medium">
    <p class="font-mono text-xs text-blue-500 uppercase dark:text-blue-400">Speed</p>
    <p class="mt-2 text-base text-gray-700 dark:text-gray-300">Built for power users</p>
    <p class="mt-1 text-sm leading-relaxed text-balance text-gray-500">
      Work faster than ever with customizable keyboard shortcuts
    </p>
  </div>
</div>

----------------------------------------

TITLE: Examples of Using Font Utilities in Tailwind CSS
DESCRIPTION: This snippet provides a basic HTML example of using Tailwind CSS classes to apply different font families to text elements. It showcases how to use the 'font-sans', 'font-serif', and 'font-mono' classes within a structured HTML document. The implementation relies on Tailwind CSS for styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-family.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div className="flex flex-col gap-8">
  <div>
    <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-sans</span>
    <p className="font-sans text-lg font-medium text-gray-900 dark:text-gray-200">
      The quick brown fox jumps over the lazy dog.
    </p>
  </div>
  <div>
    <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-serif</span>
    <p className="font-serif text-lg font-medium text-gray-900 dark:text-gray-200">
      The quick brown fox jumps over the lazy dog.
    </p>
  </div>
  <div>
    <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-mono</span>
    <p className="font-mono text-lg font-medium text-gray-900 dark:text-gray-200">
      The quick brown fox jumps over the lazy dog.
    </p>
  </div>
</div>

<!-- [!code classes:font-sans,font-serif,font-mono] -->
<p class="font-sans ...">The quick brown fox ...</p>
<p class="font-serif ...">The quick brown fox ...</p>
<p class="font-mono ...">The quick brown fox ...</p>

----------------------------------------

TITLE: Field Sizing API Table in Tailwind CSS
DESCRIPTION: This API table describes 'field-sizing-fixed' and 'field-sizing-content', utilities for adjusting the size of form controls in Tailwind CSS. The table associates each utility with its corresponding CSS style, helping users apply the correct utility class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/field-sizing.mdx#2025-04-18_snippet_1

LANGUAGE: typescript
CODE:
<ApiTable
  rows=[
    ["field-sizing-fixed", "field-sizing: fixed;"],
    ["field-sizing-content", "field-sizing: content;"],
  ]
/>

----------------------------------------

TITLE: Implementing Ring Utilities in Tailwind CSS
DESCRIPTION: Demonstrates the use of Tailwind CSS ring utilities for creating focus outlines. These utilities offer a more flexible design compared to traditional outlines.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v2/index.mdx#2025-04-18_snippet_7

LANGUAGE: HTML
CODE:
<button class="focus:ring-opacity-50 focus:ring-2 focus:ring-blue-300 focus:outline-none ...">
  <!-- ... -->
</button>

----------------------------------------

TITLE: Using Example Filters - JavaScript
DESCRIPTION: Embedded within an Example component, this JavaScript snippet shows multiple styled images using different filter utilities like blur and grayscale. It demonstrates applying Tailwind CSS classes directly to embedded HTML to achieve intended styles. Dependencies require React components such as Example and Figure.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter.mdx#2025-04-18_snippet_1

LANGUAGE: JavaScript
CODE:
<Example padding={false}>\n  {\n    <div className=\"flex scroll-p-8 overflow-scroll sm:block sm:overflow-visible\">\n      <div className=\"flex shrink-0 items-center justify-around gap-12 p-8 font-mono font-bold sm:gap-4\">\n        <div className=\"flex shrink-0 flex-col items-center\">\n          <p className=\"mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400\">blur-xs</p>\n          <div className=\"relative blur-xs\">\n            <img\n              className=\"size-24 rounded-lg object-cover\"\n              src=\"https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90\"\n            />\n            <div className=\"absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset\"></div>\n          </div>\n        </div>\n        <div className=\"flex shrink-0 flex-col items-center\">\n          <p className=\"mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400\">grayscale</p>\n          <div className=\"relative grayscale\">\n            <img\n              className=\"size-24 rounded-lg object-cover\"\n              src=\"https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90\"\n            />\n            <div className=\"absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset\"></div>\n          </div>\n        </div>\n        <div className=\"flex shrink-0 flex-col items-center\">\n          <p className=\"mb-3 text-center font-mono text-xs font-medium text-gray-500 italic dark:text-gray-400\">\n            combined\n          </p>\n          <div className=\"relative blur-xs grayscale\">\n            <img\n              className=\"size-24 rounded-lg object-cover\"\n              src=\"https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90\"\n            />\n            <div className=\"absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  }\n</Example>

----------------------------------------

TITLE: Using Viewport Height in HTML with Tailwind CSS
DESCRIPTION: Example of using the h-screen utility to make an element span the entire height of the viewport.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/height.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="h-screen">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Floating Element Right TailwindCSS HTML
DESCRIPTION: Demonstrates the use of the 'float-right' utility in TailwindCSS to float an element to the right side of its parent container. Dependencies: TailwindCSS. Key parameters: float-right utility for CSS class. Inputs: HTML element with class attribute. Outputs: Right-floated element within its container.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/float.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- [!code classes:float-right] -->
<article>
  <img class="float-right ..." src="/img/mountains.jpg" />
  <p>Maybe we can live without libraries, people like you and me. ...</p>
</article>

----------------------------------------

TITLE: Using Arbitrary Container Values in Tailwind CSS (HTML)
DESCRIPTION: This HTML snippet shows how to apply arbitrary container values in Tailwind CSS using the @[616px] syntax, allowing for more granular control over container-based styling conditions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_28

LANGUAGE: html
CODE:
<div class="@container">
  <div class="block @[618px]:flex">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Center Alignment with justify-items-center in HTML
DESCRIPTION: Example demonstrating how to use the justify-items-center utility to align grid items to the center of their inline axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-items.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code filename:justify-items-center] -->
<!-- [!code classes:justify-items-center] -->
<div class="grid grid-flow-col justify-items-center ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Using Tailwind CSS Object Position Classes in HTML
DESCRIPTION: This HTML snippet demonstrates the usage of Tailwind CSS object position utility classes. It shows how to apply these classes to img elements to control the positioning of the image content within its container.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-position.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<img class="size-24 object-top-left ..." src="/img/mountains.jpg" />
<img class="size-24 object-top ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: HTML Representation of Sky Color Palette
DESCRIPTION: This snippet demonstrates how to create a simple HTML structure to display the Tailwind CSS sky color palette using div elements with respective background colors and classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div>
  <div class="bg-sky-50"></div>
  <div class="bg-sky-100"></div>
  <div class="bg-sky-200"></div>
  <div class="bg-sky-300"></div>
  <div class="bg-sky-400"></div>
  <div class="bg-sky-500"></div>
  <div class="bg-sky-600"></div>
  <div class="bg-sky-700"></div>
  <div class="bg-sky-800"></div>
  <div class="bg-sky-900"></div>
  <div class="bg-sky-950"></div>
</div>

----------------------------------------

TITLE: Demonstrating Basic Width Utilities in HTML
DESCRIPTION: This HTML snippet demonstrates the usage of basic width utilities in Tailwind CSS, including fixed-width classes like w-96, w-80, w-64, etc. It showcases how to apply these classes to create elements with different widths.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/width.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<div class="w-96 ...">w-96</div>
<div class="w-80 ...">w-80</div>
<div class="w-64 ...">w-64</div>
<div class="w-48 ...">w-48</div>
<div class="w-40 ...">w-40</div>
<div class="w-32 ...">w-32</div>
<div class="w-24 ...">w-24</div>

----------------------------------------

TITLE: HTML Inline Flex Example
DESCRIPTION: This example demonstrates the use of the `inline-flex` utility class in Tailwind CSS to create an inline flex container. Inline flex containers flow with the surrounding text.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/display.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:inline-flex] -->
<p>
  Today I spent most of the day researching ways to ...
  <span class="inline-flex items-baseline">
    <img src="/img/kramer.jpg" class="mx-1 size-5 self-center rounded-full" />
    <span>Kramer</span>
  </span>
  keeps telling me there is no way to make it work, that ...
</p>

----------------------------------------

TITLE: Applying Mask Cover in HTML with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the mask-cover utility to scale the mask image until it fills the mask layer, potentially cropping the image.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-size.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<div class="mask-cover mask-[url(/img/scribble.png)] bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Content-Based Field Sizing in HTML
DESCRIPTION: The HTML snippet uses the 'field-sizing-content' utility to allow a textarea form control to dynamically adjust its width based on its content. This utility is useful for inputs where content size is variable.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/field-sizing.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<textarea class="field-sizing-content ..." rows="2">
  Latex Salesman, Vanderlay Industries
</textarea>

----------------------------------------

TITLE: Implementing Vertical Scrolling with Tailwind CSS
DESCRIPTION: This snippet demonstrates the use of the `overflow-y-scroll` utility class to enable vertical scrolling. It allows content to scroll vertically while always showing scrollbars, unless disabled by the operating system.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overflow.mdx#2025-04-18_snippet_6

LANGUAGE: HTML
CODE:
<div class="overflow-y-scroll ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Tailwind CSS Referencing Attribute Value Example
DESCRIPTION: This example showcases how to reference an attribute value using the `content-[attr(<name>)]` syntax in Tailwind CSS. The `before` attribute's value is used as the content for the `::before` pseudo-element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/content.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
"<!-- [!code classes:before:content-[attr(before)]] -->
<p before="Hello World" class="before:content-[attr(before)] ...">
  <!-- ... -->
</p>"

----------------------------------------

TITLE: Styling with Data Attributes in HTML
DESCRIPTION: This snippet demonstrates how to conditionally apply styles based on data attributes using Tailwind CSS. It shows how to apply different padding values based on the `data-size` attribute.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_9

LANGUAGE: html
CODE:
"<!-- Will apply -->
<div data-size="large" class="data-[size=large]:p-8">
  <!-- ... -->
</div>

<!-- Will not apply -->
<div data-size="medium" class="data-[size=large]:p-8">
  <!-- ... -->
</div>"

----------------------------------------

TITLE: Styling Valid Inputs with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the valid variant in Tailwind CSS to style an input when it's valid. It applies a green border to valid inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_97

LANGUAGE: html
CODE:
<input required class="border valid:border-green-500 ..." />

----------------------------------------

TITLE: Aligning Items with 'items-start' Utility
DESCRIPTION: This HTML snippet shows the use of the 'items-start' utility to align flex items at the start of the cross axis in a flex container. It contains an example with three items with differing paddings, all aligned to the top of the container.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-items.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="flex items-start ...">
  <div class="py-4">01</div>
  <div class="py-12">02</div>
  <div class="py-8">03</div>
</div>

----------------------------------------

TITLE: Handling Reversed Order of Elements with Tailwind CSS
DESCRIPTION: This code snippet uses Tailwind CSS utility classes like 'divide-y-reverse' to manage border placement when using layout reversals such as 'flex-col-reverse'. The method demonstrates the placement of borders between elements rendered in reverse order and requires knowledge of Tailwind CSS flex utilities and reverse orders. It includes three reversed elements in a flex container with borders.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-width.mdx#2025-04-18_snippet_6

LANGUAGE: HTML
CODE:
<div class=\"flex flex-col-reverse divide-y-4 divide-y-reverse divide-gray-200\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>

----------------------------------------

TITLE: JSX Example - font-stretch Percentages
DESCRIPTION: This JSX code showcases the usage of percentage-based `font-stretch` utilities in Tailwind CSS. It renders paragraphs with `font-stretch-50%`, `font-stretch-100%`, and `font-stretch-150%` classes, each displaying the same text. These classes modify the font width based on the given percentage.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-stretch.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<div className="flex flex-col gap-8">
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-stretch-50%</span>
        <p className="font-[system-ui] text-xl font-medium text-gray-900 font-stretch-50% dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-stretch-100%</span>
        <p className="font-[system-ui] text-xl font-medium text-gray-900 font-stretch-100% dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-stretch-150%</span>
        <p className="font-[system-ui] text-xl font-medium text-gray-900 font-stretch-150% dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
    </div>

----------------------------------------

TITLE: Complex Targeting with Hover and Arbitrary Variants in Tailwind CSS
DESCRIPTION: Shows an advanced example of arbitrary variants combined with the hover state to target a specific nested element within a complex HTML structure.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_23

LANGUAGE: html
CODE:
<!-- [!code word:hover\:[&>li\:nth-child(2)>div>p\:first-child\]\:text-indigo-500] -->
<ul
  role="list"
  class="space-y-4 [&>*]:rounded-lg [&>*]:bg-white [&>*]:p-4 [&>*]:shadow hover:[&>li:nth-child(2)>div>p:first-child]:text-indigo-500"
>
  <!-- ... -->
  <li class="flex">
    <img class="h-10 w-10 rounded-full" src="..." alt="" />
    <div class="ml-3 overflow-hidden">
      <p class="text-sm font-medium text-slate-900">Floyd Miles</p>
      <p class="truncate text-sm text-slate-500">floyd.miles@example.com</p>
    </div>
  </li>
  <!-- ... -->
</ul>

----------------------------------------

TITLE: Pretty Text Wrapping in Tailwind CSS
DESCRIPTION: Illustrates the use of the text-pretty utility in Tailwind CSS to prevent orphans (single words on their own line) at the end of a text block.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-wrap.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<!-- [!code classes:text-pretty] -->
<article>
  <h3 class="text-pretty">Beloved Manhattan soup stand closes</h3>
  <p>New Yorkers are facing the winter chill...</p>
</article>

----------------------------------------

TITLE: Applying Line-through Utility in HTML
DESCRIPTION: This example illustrates how to use the 'line-through' utility class in Tailwind CSS to add a line through text.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-line.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code classes:line-through] -->
<p class="line-through">The quick brown fox...</p>

----------------------------------------

TITLE: Directional Padding Examples in HTML
DESCRIPTION: Examples of applying padding to specific sides of elements using pt-6, pr-4, pb-8, and pl-2 utility classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/padding.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:pt-6,pr-4,pb-8,pl-2] -->
<div class="pt-6 ...">pt-6</div>
<div class="pr-4 ...">pr-4</div>
<div class="pb-8 ...">pb-8</div>
<div class="pl-2 ...">pl-2</div>

----------------------------------------

TITLE: Disabling Text Selection Example
DESCRIPTION: Demonstrates using select-none utility to prevent text selection in an element
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/user-select.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="select-none ...">The quick brown fox jumps over the lazy dog.</div>

----------------------------------------

TITLE: Applying Background Position Utilities in Tailwind CSS
DESCRIPTION: This code snippet demonstrates how to apply various background position utilities in Tailwind CSS. It uses a mountain image as an example and shows different positioning options including top, top-right, left, center, right, bottom-left, bottom, and bottom-right.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-position.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<div class="bg-[url(/img/mountains.jpg)] bg-top"></div>
<div class="bg-[url(/img/mountains.jpg)] bg-top-right"></div>
<div class="bg-[url(/img/mountains.jpg)] bg-left"></div>
<div class="bg-[url(/img/mountains.jpg)] bg-center"></div>
<div class="bg-[url(/img/mountains.jpg)] bg-right"></div>
<div class="bg-[url(/img/mountains.jpg)] bg-bottom-left"></div>
<div class="bg-[url(/img/mountains.jpg)] bg-bottom"></div>
<div class="bg-[url(/img/mountains.jpg)] bg-bottom-right"></div>

----------------------------------------

TITLE: Displaying Backdrop Opacity Example with Tailwind CSS
DESCRIPTION: An example component demonstrating the use of `backdrop-opacity-10`, `backdrop-opacity-60`, and `backdrop-opacity-95` utilities to control the opacity of backdrop filters applied to elements. The example showcases multiple images with varying opacities and uses Tailwind CSS classes. Requires Tailwind CSS and the use of React for integration.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-opacity.mdx#2025-04-18_snippet_1

LANGUAGE: JavaScript
CODE:
<Example padding={false}>
  {
    <div className="flex scroll-p-8 justify-start overflow-scroll sm:block sm:overflow-visible">
      <div className="flex shrink-0 items-center justify-around gap-6 p-8 font-mono font-bold sm:gap-4">
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-opacity-10
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-invert backdrop-opacity-10"></div>
            <img
              className="object-coveryea size-32 rounded-lg"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-opacity-60
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-invert backdrop-opacity-60"></div>
            <img
              className="object-coveryea size-32 rounded-lg"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-opacity-95
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-invert backdrop-opacity-95"></div>
            <img
              className="object-coveryea size-32 rounded-lg"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
      </div>
    </div>
  }
</Example>

----------------------------------------

TITLE: React Component with Tailwind CSS for Masking
DESCRIPTION: This React component utilizes Tailwind CSS classes to create linear gradient mask effects. It defines two divs with different mask orientations and background images, demonstrating the usage of `mask-linear-*` utilities. The component depends on `Stripes` component and external image URLs.  The code is used in the Example section of the documentation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_11

LANGUAGE: javascript
CODE:
{
    <div className="grid grid-cols-1 items-end gap-x-2 gap-y-8 p-8 text-center font-mono text-xs font-medium text-gray-500 max-sm:justify-between max-sm:px-2 sm:grid-cols-2 dark:text-gray-400">
      <div className="flex flex-col items-center gap-3">
        <p>mask-linear-50</p>
        <div className="grid aspect-3/2 w-48 grid-cols-1">
          <Stripes className="col-start-1 row-start-1 rounded-lg" border />
          <div className="col-start-1 row-start-1 rounded-lg bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=80)] mask-linear-50 mask-linear-from-60% mask-linear-to-80% bg-cover bg-center mask-no-repeat"></div>
        </div>
      </div>
      <div className="flex flex-col items-center gap-3">
        <p>-mask-linear-50</p>
        <div className="grid aspect-3/2 w-48 grid-cols-1">
          <Stripes className="col-start-1 row-start-1 rounded-lg" border />
          <div className="col-start-1 row-start-1 rounded-lg bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=80)] -mask-linear-50 mask-linear-from-60% mask-linear-to-80% bg-cover bg-center mask-no-repeat"></div>
        </div>
      </div>
    </div>
  }

----------------------------------------

TITLE: Using Divider Styles with Tailwind CSS in HTML
DESCRIPTION: An HTML snippet using Tailwind CSS to define dividing lines between child elements with classes such as `divide-dashed`. This demonstration shows how to add visual separation between grid elements using border styling utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-style.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<!-- [!code classes:divide-dashed] -->
<div class="grid grid-cols-3 divide-x-3 divide-dashed divide-indigo-500">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: HTML Implementation of Basic Background Clip Examples
DESCRIPTION: This HTML snippet shows the application of bg-clip-border, bg-clip-padding, and bg-clip-content using Tailwind CSS classes. No additional dependencies are needed. The elements are styled using base CSS classes and demonstrate the visual differences among the background-clip options.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-clip.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="border-4 bg-indigo-500 bg-clip-border p-3"></div>
<div class="border-4 bg-indigo-500 bg-clip-padding p-3"></div>
<div class="border-4 bg-indigo-500 bg-clip-content p-3"></div>

----------------------------------------

TITLE: Using Default Overscroll Behavior with Tailwind CSS
DESCRIPTION: Use the overscroll-auto utility to allow users to continue scrolling a parent scroll area when they reach the boundary of the primary scroll area.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overscroll-behavior.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="overscroll-auto ...">Well, let me tell you something, ...</div>

----------------------------------------

TITLE: HTML Arbitrary Values Example
DESCRIPTION: This HTML snippet showcases the extended arbitrary value support in Tailwind CSS, allowing for custom values in various utilities.  It demonstrates setting `col-start`, `object-position`, and `placeholder` properties using arbitrary values enclosed in square brackets.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_14

LANGUAGE: html
CODE:
<div class="col-start-[73] object-[50%] placeholder-[#aabbcc] ..."></div>

----------------------------------------

TITLE: Auto-alignment Example with Tailwind CSS
DESCRIPTION: Demonstrates using self-auto utility to align an item based on the container's align-items property value.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-self.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<div class="flex items-stretch ...">
  <div>01</div>
  <div class="self-auto ...">02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Demonstrating Pre-line White-space in Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates the use of the 'whitespace-pre-line' utility class in Tailwind CSS. It preserves newlines but not spaces within an element, with text wrapped normally.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/white-space.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<!-- [!code classes:whitespace-pre-line] -->
<!-- prettier-ignore -->
<p class="whitespace-pre-line">Hey everyone!

It's almost 2022       and we still don't know if there             are aliens living among us, or do we? Maybe the person writing this is an alien.

You will never know.</p>

----------------------------------------

TITLE: HTML Implementation of Mask Composite Utilities
DESCRIPTION: Demonstrates how to implement the different mask composite utilities in HTML. The example shows how to apply mask-add, mask-subtract, mask-intersect, and mask-exclude classes with mask positioning to create different visual effects on background images.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-composite.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:mask-add,mask-subtract,mask-intersect,mask-exclude] -->
<div class="mask-add mask-[url(/img/circle.png),url(/img/circle.png)] mask-[position:30%_50%,70%_50%] bg-[url(/img/mountains.jpg)]"></div>
<div class="mask-subtract mask-[url(/img/circle.png),url(/img/circle.png)] mask-[position:30%_50%,70%_50%] bg-[url(/img/mountains.jpg)]"></div>
<div class="mask-intersect mask-[url(/img/circle.png),url(/img/circle.png)] mask-[position:30%_50%,70%_50%] bg-[url(/img/mountains.jpg)]"></div>
<div class="mask-exclude mask-[url(/img/circle.png),url(/img/circle.png)] mask-[position:30%_50%,70%_50%] bg-[url(/img/mountains.jpg)]"></div>

----------------------------------------

TITLE: Preventing Resizing with Tailwind CSS
DESCRIPTION: Demonstrates how to prevent an element from being resizable using the 'resize-none' class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/resize.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<!-- [!code classes:resize-none] -->
<textarea class="resize-none rounded-md"></textarea>

----------------------------------------

TITLE: Implementing X-Axis Scale Utilities in Tailwind CSS
DESCRIPTION: Example demonstrating how to scale elements horizontally using x-axis specific scale utilities. Uses classes like scale-x-75, scale-x-100, and scale-x-125 to adjust element width while maintaining height.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scale.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<img class="scale-x-75 ..." src="/img/mountains.jpg" />
<img class="scale-x-100 ..." src="/img/mountains.jpg" />
<img class="scale-x-125 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: List Marker Styling
DESCRIPTION: Example of styling list markers using the new marker variant.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<h1>WrestleMania XII Results</h1>

<ol class="marker:font-medium marker:text-gray-500">
  <li>The British Bulldog, Owen Hart, and Vader defeated Ahmed Johnson, Jake Roberts, and Yokozuna</li>
  <li>Roddy Piper defeated Goldust</li>
  <li>Stone Cold Steve Austin defeated Savio Vega</li>
  <li>The Ultimate Warrior defeated Hunter Hearst Helmsley</li>
  <li>The Undertaker defeated Diesel</li>
  <li>Shawn Michaels defeated Bret Hart</li>
</ol>

----------------------------------------

TITLE: Styling In-Range Inputs with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the in-range variant in Tailwind CSS to style an input when its value is within a specified range. It applies a green border to in-range inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_101

LANGUAGE: html
CODE:
<input min="1" max="5" class="in-range:border-green-500 ..." />

----------------------------------------

TITLE: Basic Example of Setting Background Image - HTML
DESCRIPTION: This snippet showcases a basic example of setting a background image using the Tailwind CSS `bg-[<value>]` utility to apply a custom image URL to a div element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-image.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div className="relative mx-auto flex h-48 w-96 items-center justify-center overflow-hidden rounded-lg sm:w-96">
      <div className="h-full w-full bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=80)] bg-cover bg-center bg-no-repeat"></div>
    </div>

----------------------------------------

TITLE: Changing Gradient Interpolation Modes in Tailwind CSS
DESCRIPTION: This snippet shows how to modify the interpolation mode of gradients using different color space modifiers like srgb, hsl, oklab, oklch, and direction modifiers like longer, shorter, increasing, and decreasing.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-image.mdx#2025-04-18_snippet_8

LANGUAGE: html
CODE:
<div class="bg-linear-to-r/srgb from-indigo-500 to-teal-400"></div>
<div class="bg-linear-to-r/hsl from-indigo-500 to-teal-400"></div>
<div class="bg-linear-to-r/oklab from-indigo-500 to-teal-400"></div>
<div class="bg-linear-to-r/oklch from-indigo-500 to-teal-400"></div>
<div class="bg-linear-to-r/longer from-indigo-500 to-teal-400"></div>
<div class="bg-linear-to-r/shorter from-indigo-500 to-teal-400"></div>
<div class="bg-linear-to-r/increasing from-indigo-500 to-teal-400"></div>
<div class="bg-linear-to-r/decreasing from-indigo-500 to-teal-400"></div>

----------------------------------------

TITLE: Running Tailwind CSS Upgrade Tool
DESCRIPTION: Command to run the Tailwind CSS upgrade tool, which automates the migration process from v3 to v4. Requires Node.js 20 or higher.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_0

LANGUAGE: sh
CODE:
$ npx @tailwindcss/upgrade

----------------------------------------

TITLE: Tailwind CSS flex-basis responsive design HTML
DESCRIPTION: This HTML snippet demonstrates using responsive prefixes with flex-basis utilities in Tailwind CSS. The class `md:basis-1/3` sets the flex-basis to 1/3 on medium screens and above, while `basis-1/4` and `basis-1/2` are used for smaller screens.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-basis.mdx#2025-04-18_snippet_6

LANGUAGE: HTML
CODE:
<!-- [!code classes:md:basis-1/3] -->
<div class="flex flex-row">
  <div class="basis-1/4 md:basis-1/3">01</div>
  <div class="basis-1/4 md:basis-1/3">02</div>
  <div class="basis-1/2 md:basis-1/3">03</div>
</div>

----------------------------------------

TITLE: Setting Gradient Stop Positions with Percentage Values in Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use precise percentage values for gradient color stops with the from-10%, via-30%, and to-90% utilities to control gradient positioning.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-image.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<div class="bg-gradient-to-r from-indigo-500 from-10% via-sky-500 via-30% to-emerald-500 to-90% ..."></div>

----------------------------------------

TITLE: Removing Background Images with bg-none in Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the bg-none utility to remove an existing background image from an element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-image.mdx#2025-04-18_snippet_9

LANGUAGE: html
CODE:
<div class="bg-none"></div>

----------------------------------------

TITLE: Compiled Tailwind CSS Theme Variables
DESCRIPTION: This snippet demonstrates how theme variables are compiled into regular CSS variables in the final output.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_21

LANGUAGE: css
CODE:
:root {
  /* prettier-ignore */
  --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;

  --color-red-50: oklch(0.971 0.013 17.38);
  --color-red-100: oklch(0.936 0.032 17.717);
  --color-red-200: oklch(0.885 0.062 18.334);
  /* ... */

  --shadow-2xs: 0 1px rgb(0 0 0 / 0.05);
  --shadow-xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow-sm: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  /* ... */
}

----------------------------------------

TITLE: Basic Example of Transition Duration in Tailwind CSS
DESCRIPTION: Demonstrates the usage of transition duration utilities in Tailwind CSS with buttons that have different durations applied to their hover effects.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-duration.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
<div className="flex flex-col justify-around gap-8 text-sm leading-6 font-bold text-white sm:flex-row sm:gap-0">
  <div className="flex shrink-0 flex-col items-center">
    <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">duration-150</p>
    <button className="rounded-md bg-violet-500 px-4 py-2 text-sm font-semibold text-white duration-150 ease-in-out hover:scale-125">
      Button A
    </button>
  </div>
  <div className="flex shrink-0 flex-col items-center">
    <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">duration-300</p>
    <button className="rounded-md bg-violet-500 px-4 py-2 text-sm font-semibold text-white duration-300 ease-in-out hover:scale-125">
      Button B
    </button>
  </div>
  <div className="flex shrink-0 flex-col items-center">
    <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">duration-700</p>
    <button className="rounded-md bg-violet-500 px-4 py-2 text-sm font-semibold text-white duration-700 ease-in-out hover:scale-125">
      Button C
    </button>
  </div>
</div>

----------------------------------------

TITLE: Removing Line Height with Tailwind CSS
DESCRIPTION: Example showing how to use the leading-none utility to set the line height of an element equal to its font size, eliminating extra vertical spacing.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/line-height.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<p class="text-2xl leading-none ...">The quick brown fox...</p>

----------------------------------------

TITLE: Using Dynamic Viewport Height in HTML with Tailwind CSS
DESCRIPTION: Example of using the h-dvh utility to make an element span the entire height of the viewport, which adjusts as browser UI expands or contracts.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/height.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="h-dvh">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Targeting a Single Breakpoint in HTML
DESCRIPTION: Shows how to target a single breakpoint by combining a responsive variant with the max-* variant for the next breakpoint.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<div class="md:max-lg:flex">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Using Group Hover in HTML with Tailwind CSS
DESCRIPTION: This example demonstrates the `group-hover` class in Tailwind CSS, which styles an element based on its parent's hover state. The class `group-hover:underline` applies an underline effect to the text when the parent link is hovered.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_18

LANGUAGE: html
CODE:
<a href="#" class="group rounded-lg p-8">
  <!-- ... -->
  <span class="group-hover:underline">Read more…</span>
</a>

----------------------------------------

TITLE: Rendering API Table for Blur Filters - React
DESCRIPTION: This snippet renders an API table dynamically displaying the Tailwind CSS utility classes for blur effects. Each class corresponds to a specific blur value defined in the style guide. Dependencies include React and any necessary Tailwind CSS setup.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-blur.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { ApiTable } from "@/components/api-table.tsx";

<ApiTable
  rows={[
    ["blur-xs", "filter: blur(var(--blur-xs)); /* 4px */"],
    ["blur-sm", "filter: blur(var(--blur-sm)); /* 8px */"],
    ["blur-md", "filter: blur(var(--blur-md)); /* 12px */"],
    ["blur-lg", "filter: blur(var(--blur-lg)); /* 16px */"],
    ["blur-xl", "filter: blur(var(--blur-xl)); /* 24px */"],
    ["blur-2xl", "filter: blur(var(--blur-2xl)); /* 40px */"],
    ["blur-3xl", "filter: blur(var(--blur-3xl)); /* 64px */"],
    ["blur-none", "filter: ;"],
    ["blur-(<custom-property>)", "filter: blur(var(<custom-property>));"],
    ["blur-[<value>]", "filter: blur(<value>);"]
  ]}
/>

----------------------------------------

TITLE: Using Text Decoration Thickness Classes in HTML
DESCRIPTION: Demonstrates the usage of Tailwind CSS classes for controlling text decoration thickness, including decoration-1, decoration-2, and decoration-4.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-thickness.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:decoration-1] -->
<p class="underline decoration-1">The quick brown fox...</p>
<!-- [!code classes:decoration-2] -->
<p class="underline decoration-2">The quick brown fox...</p>
<!-- [!code classes:decoration-4] -->
<p class="underline decoration-4">The quick brown fox...</p>

----------------------------------------

TITLE: Basic Outline Color Examples in Tailwind CSS
DESCRIPTION: HTML example demonstrating the usage of different outline color utility classes (outline-blue-500, outline-cyan-500, outline-pink-500) on buttons with additional outline styling properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/outline-color.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:outline-blue-500,outline-cyan-500,outline-pink-500] -->
<button class="outline-2 outline-offset-2 outline-blue-500 ...">Button A</button>
<button class="outline-2 outline-offset-2 outline-cyan-500 ...">Button B</button>
<button class="outline-2 outline-offset-2 outline-pink-500 ...">Button C</button>

----------------------------------------

TITLE: Negative Text Indentation Example
DESCRIPTION: Shows how to use negative text indentation in TailwindCSS using the -indent-8 class prefix.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-indent.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:-indent-8] -->
<p class="-indent-8">So I started to walk into the water...</p>

----------------------------------------

TITLE: Basic Aspect Ratio Example
DESCRIPTION: Demonstrates using the aspect-3/2 utility class to set a specific aspect ratio on an image element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/aspect-ratio.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<img class="aspect-3/2 object-cover ..." src="/img/villas.jpg" />

----------------------------------------

TITLE: Adding Colored Drop Shadows in HTML
DESCRIPTION: This snippet introduces how to implement colored drop shadows in SVG components using Tailwind utilities like 'drop-shadow-cyan-500'. It extends support for color customization in shadows, enhancing visual design in Tailwind CSS v4.1. The input is structured HTML with SVG elements styled accordingly.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_8

LANGUAGE: html
CODE:
<!-- [!code classes:drop-shadow-cyan-500/50,drop-shadow-blue-500/50,drop-shadow-indigo-500/50] -->
<svg class="fill-cyan-500 drop-shadow-xl drop-shadow-cyan-500/50 ...">...</svg>
<svg class="fill-blue-500 drop-shadow-xl drop-shadow-blue-500/50 ...">...</svg>
<svg class="fill-indigo-500 drop-shadow-xl drop-shadow-indigo-500/50 ...">...</svg>

----------------------------------------

TITLE: Applying Max-Width Breakpoints in HTML
DESCRIPTION: This HTML snippet demonstrates how to apply styles based on max-width media queries using the `max-*` variant. The `p-8` class will be applied until the `lg` breakpoint is reached.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_14

LANGUAGE: html
CODE:
"<div class="max-lg:p-8">
  <!-- Will apply `p-8` until the `lg` breakpoint kicks in -->
</div>"

----------------------------------------

TITLE: Using Custom Border Color with Tailwind CSS
DESCRIPTION: This snippet showcases how to apply a custom border color using Tailwind's utility classes in a React component. The example gives an explicit value for the border color.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-color.mdx#2025-04-18_snippet_7

LANGUAGE: jsx
CODE:
<UsingACustomValue utility="border" name="border color" value="#243c5a" />

----------------------------------------

TITLE: Stretch-alignment Example with Tailwind CSS
DESCRIPTION: Shows how to use self-stretch utility to stretch an item to fill the container's cross axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-self.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="flex items-stretch ...">
  <div>01</div>
  <div class="self-stretch ...">02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Using CSS Variables for List Markers in HTML
DESCRIPTION: Demonstrates using a CSS custom property (variable) to define list markers with the list-image-(--custom-property) syntax. This approach allows for dynamic or theme-based list markers.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/list-style-image.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<ul class="list-image-(--my-list-image)">
  <!-- ... -->
</ul>

----------------------------------------

TITLE: Start-Aligned Image Carousel
DESCRIPTION: Example implementation of a horizontally scrolling image carousel with start-aligned snap points using Tailwind CSS utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-snap-align.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="snap-x ...">
  <div class="snap-start ...">
    <img src="/img/vacation-01.jpg" />
  </div>
  <div class="snap-start ...">
    <img src="/img/vacation-02.jpg" />
  </div>
  <div class="snap-start ...">
    <img src="/img/vacation-03.jpg" />
  </div>
  <div class="snap-start ...">
    <img src="/img/vacation-04.jpg" />
  </div>
  <div class="snap-start ...">
    <img src="/img/vacation-05.jpg" />
  </div>
  <div class="snap-start ...">
    <img src="/img/vacation-06.jpg" />
  </div>
</div>

----------------------------------------

TITLE: Rendering Backdrop Grayscale Examples in JSX
DESCRIPTION: This JSX snippet renders a series of divs demonstrating the use of `backdrop-grayscale-0`, `backdrop-grayscale-50`, and `backdrop-grayscale` classes.  Each div contains an image with a backdrop filter applied, showcasing different grayscale levels.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-grayscale.mdx#2025-04-18_snippet_0

LANGUAGE: JSX
CODE:
{
    <div className="flex scroll-p-8 justify-start overflow-scroll sm:block sm:overflow-visible">
      <div className="flex shrink-0 items-center justify-around gap-6 p-8 font-mono font-bold sm:gap-4">
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-grayscale-0
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-grayscale-0"></div>
            <img
              className="size-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-grayscale-50
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-grayscale-50"></div>
            <img
              className="size-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-grayscale
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-grayscale"></div>
            <img
              className="size-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
      </div>
    </div>
  }

----------------------------------------

TITLE: Displaying Examples of Box Decoration Slice and Clone in React
DESCRIPTION: This snippet shows how to use the 'Example' component to render basic usage examples of the 'box-decoration-slice' and 'box-decoration-clone' utilities. It includes a grid layout and demonstrates proper styling to visually differentiate the two methods of rendering fragmented elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-decoration-break.mdx#2025-04-18_snippet_1

LANGUAGE: typescript
CODE:
<Figure>
<Example>
  {
    <div className="grid grid-cols-1 gap-10 px-10 font-mono font-bold sm:grid-cols-2">
      <div className="flex flex-col">
        <p className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">box-decoration-slice</p>
        <div className="font-sans text-5xl leading-none font-extrabold tracking-tight">
          <span className="bg-linear-to-r from-indigo-600 to-pink-500 box-decoration-slice px-2 leading-[3.5rem] text-white">
            Hello
            <br />
            World
          </span>
        </div>
      </div>
      <div className="flex flex-col">
        <p className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">box-decoration-clone</p>
        <div className="font-sans text-5xl leading-none font-extrabold tracking-tight">
          <span className="bg-linear-to-r from-indigo-600 to-pink-500 box-decoration-clone px-2 leading-[3.5rem] text-white">
            Hello
            <br />
            World
          </span>
        </div>
      </div>
    </div>
  }
</Example>
{/* prettier-ignore */}
```html
<!-- [!code classes:box-decoration-slice,box-decoration-clone] -->
<span class="box-decoration-slice bg-linear-to-r from-indigo-600 to-pink-500 px-2 text-white ...">
  Hello<br />World
</span>
<span class="box-decoration-clone bg-linear-to-r from-indigo-600 to-pink-500 px-2 text-white ...">
  Hello<br />World
</span>
```

----------------------------------------

TITLE: Aligning to Bottom with Tailwind CSS
DESCRIPTION: Demonstrates the use of the 'align-bottom' utility to align the bottom of an element and its descendants with the bottom of the entire line.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/vertical-align.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<span class="inline-block align-bottom">The quick brown fox...</span>

----------------------------------------

TITLE: Styling Indeterminate Inputs with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the indeterminate variant in Tailwind CSS to style a checkbox in an indeterminate state. It changes the background color of indeterminate checkboxes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_93

LANGUAGE: html
CODE:
<input type="checkbox" class="appearance-none indeterminate:bg-gray-300 ..." />

----------------------------------------

TITLE: Changing Inset Shadow Color with TailwindCSS HTML
DESCRIPTION: Illustrates the use of Tailwind CSS utilities `inset-shadow-indigo-500` and `inset-shadow-indigo-500/50` to change the color of inset box shadows. Tailwind CSS is a prerequisite. The snippet includes HTML elements showcasing different shadow colors using Tailwind classes. It allows for visual customization and vibrant UI designs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_9

LANGUAGE: html
CODE:
<!-- [!code classes:inset-shadow-indigo-500,inset-shadow-indigo-500/75] -->
<div class="inset-shadow-sm inset-shadow-indigo-500 ..."></div>
<div class="inset-shadow-sm inset-shadow-indigo-500/50 ..."></div>

----------------------------------------

TITLE: Demonstrating Transform Style Classes in HTML with Tailwind CSS
DESCRIPTION: Provides HTML examples of using transform-flat and transform-3d classes to control the 3D positioning of child elements. The example includes multiple div elements with various transform and styling classes applied.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transform-style.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<!-- [!code classes:transform-flat,transform-3d] -->
<div class="size-20 transform-flat ...">
  <div class="translate-z-12 rotate-x-0 bg-sky-300/75 ...">1</div>
  <div class="-translate-z-12 rotate-y-18 bg-sky-300/75 ...">2</div>
  <div class="translate-x-12 rotate-y-90 bg-sky-300/75 ...">3</div>
  <div class="-translate-x-12 -rotate-y-90 bg-sky-300/75 ...">4</div>
  <div class="-translate-y-12 rotate-x-90 bg-sky-300/75 ...">5</div>
  <div class="translate-y-12 -rotate-x-90 bg-sky-300/75 ...">6</div>
</div>

<div class="size-20 transform-3d ...">
  <div class="translate-z-12 rotate-x-0 bg-sky-300/75 ...">1</div>
  <div class="-translate-z-12 rotate-y-18 bg-sky-300/75 ...">2</div>
  <div class="translate-x-12 rotate-y-90 bg-sky-300/75 ...">3</div>
  <div class="-translate-x-12 -rotate-y-90 bg-sky-300/75 ...">4</div>
  <div class="-translate-y-12 rotate-x-90 bg-sky-300/75 ...">5</div>
  <div class="translate-y-12 -rotate-x-90 bg-sky-300/75 ...">6</div>
</div>

----------------------------------------

TITLE: Demonstrating Basic Tailwind CSS Positioning Examples
DESCRIPTION: This HTML snippet showcases various positioning examples using Tailwind CSS utilities, including pinning elements to corners, spanning edges, and filling the entire parent.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/top-right-bottom-left.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- Pin to top left corner -->
<div class="relative size-32 ...">
  <div class="absolute top-0 left-0 size-16 ...">01</div>
</div>

<!-- Span top edge -->
<div class="relative size-32 ...">
  <div class="absolute inset-x-0 top-0 h-16 ...">02</div>
</div>

<!-- Pin to top right corner -->
<div class="relative size-32 ...">
  <div class="absolute top-0 right-0 size-16 ...">03</div>
</div>

<!-- Span left edge -->
<div class="relative size-32 ...">
  <div class="absolute inset-y-0 left-0 w-16 ...">04</div>
</div>

<!-- Fill entire parent -->
<div class="relative size-32 ...">
  <div class="absolute inset-0 ...">05</div>
</div>

<!-- Span right edge -->
<div class="relative size-32 ...">
  <div class="absolute inset-y-0 right-0 w-16 ...">06</div>
</div>

<!-- Pin to bottom left corner -->
<div class="relative size-32 ...">
  <div class="absolute bottom-0 left-0 size-16 ...">07</div>
</div>

<!-- Span bottom edge -->
<div class="relative size-32 ...">
  <div class="absolute inset-x-0 bottom-0 h-16 ...">08</div>
</div>

<!-- Pin to bottom right corner -->
<div class="relative size-32 ...">
  <div class="absolute right-0 bottom-0 size-16 ...">09</div>
</div>

----------------------------------------

TITLE: Adding Ring with TailwindCSS HTML
DESCRIPTION: Shows how to apply a solid ring around elements using Tailwind CSS utilities `ring`, `ring-2`, and `ring-4`. Prerequisite is the inclusion of Tailwind CSS in the project. The snippet provides examples of buttons with different ring styles to illustrate how rings can enhance element aesthetics.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_10

LANGUAGE: html
CODE:
<!-- [!code classes:ring,ring-2,ring-4] -->
<button class="ring ...">Subscribe</button>
<button class="ring-2 ...">Subscribe</button>
<button class="ring-4 ...">Subscribe</button>

----------------------------------------

TITLE: CSS Theme Configuration with Variables
DESCRIPTION: Defining custom theme variables using the @theme directive for font family, breakpoints, and colors
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-alpha/index.mdx#2025-04-18_snippet_3

LANGUAGE: css
CODE:
@theme {
  --font-family-display: "Satoshi", "sans-serif";
  --breakpoint-3xl: 1920px;
  --color-neon-pink: oklch(71.7% 0.25 360);
}

----------------------------------------

TITLE: Masking Edges with Tailwind CSS Linear Gradient Utilities
DESCRIPTION: Shows how to use Tailwind CSS utilities like mask-t-from-50% and mask-r-from-30% to apply linear gradient masks to specific sides of an element. Multiple examples demonstrate different edge masking techniques.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_7

LANGUAGE: HTML
CODE:
<div class="mask-t-from-50% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-r-from-30% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-l-from-50% mask-l-to-90% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-b-from-20% mask-b-to-80% bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: HTML Examples of Tailwind CSS Text Underline Offset Classes
DESCRIPTION: HTML code snippets demonstrating the usage of Tailwind CSS underline offset utility classes. It shows how to apply different offset values to paragraph elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-underline-offset.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<!-- [!code classes:underline-offset-1] -->
<p class="underline underline-offset-1">The quick brown fox...</p>
<!-- [!code classes:underline-offset-2] -->
<p class="underline underline-offset-2">The quick brown fox...</p>
<!-- [!code classes:underline-offset-4] -->
<p class="underline underline-offset-4">The quick brown fox...</p>
<!-- [!code classes:underline-offset-8] -->
<p class="underline underline-offset-8">The quick brown fox...</p>

----------------------------------------

TITLE: React Component with Tailwind CSS for Radial Masking
DESCRIPTION: This React component demonstrates radial gradient masking using Tailwind CSS. It includes two image elements, one for light mode and one for dark mode, each with a radial gradient mask.  The `mask-radial-[100%_200%]` class sets the mask size and position, while `mask-radial-from-*` and `mask-radial-to-*` control the gradient colors.  It relies on external image imports (KeyboardLight, KeyboardDark).
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_12

LANGUAGE: javascript
CODE:
{
    <div className="mx-auto flex items-center p-16 max-sm:p-6">
      <img
        src={KeyboardLight.src}
        className="aspect-square max-h-72 w-full mask-radial-[100%_200%] mask-radial-from-transparent mask-radial-from-15% mask-radial-to-black mask-radial-to-60% mask-radial-at-right object-cover object-top-left dark:hidden"
        alt=""
      />
      <img
        src={KeyboardDark.src}
        className="hidden aspect-square max-h-72 w-full mask-radial-[100%_200%] mask-radial-from-transparent mask-radial-from-15% mask-radial-to-black mask-radial-to-60% mask-radial-at-right object-cover object-top-left dark:block"
        alt=""
      />
      <div className="font-medium max-sm:-mx-3">
        <p className="font-mono text-xs text-blue-500 uppercase dark:text-blue-400">Speed</p>
        <p className="mt-2 text-base whitespace-nowrap text-gray-700 dark:text-gray-300">Built for power users</p>
        <p className="mt-1 text-sm leading-relaxed text-balance text-gray-500">
          Work faster than ever with our keyboard shortcuts
        </p>
      </div>
    </div>
  }

----------------------------------------

TITLE: Implementing Normal Justification with Tailwind CSS
DESCRIPTION: Shows the justify-normal utility which positions flex items in their default position as if no justify-content value was set, useful for resetting justify content behavior.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-content.mdx#2025-04-18_snippet_9

LANGUAGE: html
CODE:
<div class="flex justify-normal ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Implementing Scroll Margin in a Snap Container with Tailwind CSS
DESCRIPTION: Demonstrates the use of scroll-margin utilities in a horizontal snap container with images, showcasing the scroll-ml-6 class for left margin control.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-margin.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="snap-x ...">
  <div class="snap-start scroll-ml-6 ...">
    <img src="/img/vacation-01.jpg"/>
  </div>
  <div class="snap-start scroll-ml-6 ...">
    <img src="/img/vacation-02.jpg"/>
  </div>
  <div class="snap-start scroll-ml-6 ...">
    <img src="/img/vacation-03.jpg"/>
  </div>
  <div class="snap-start scroll-ml-6 ...">
    <img src="/img/vacation-04.jpg"/>
  </div>
  <div class="snap-start scroll-ml-6 ...">
    <img src="/img/vacation-05.jpg"/>
  </div>
</div>

----------------------------------------

TITLE: Tailwind CSS Grid Auto Rows Example
DESCRIPTION: This HTML snippet demonstrates the usage of the `auto-rows-max` utility class in Tailwind CSS to set the height of implicitly created grid rows to the maximum content height within the grid container. The `grid grid-flow-row` classes define the grid and its row flow.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-auto-rows.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:auto-rows-max] -->
<div class="grid grid-flow-row auto-rows-max">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Vite Configuration for Tailwind CSS v4
DESCRIPTION: Setting up Tailwind CSS v4 plugin in a Vite configuration file
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-alpha/index.mdx#2025-04-18_snippet_9

LANGUAGE: typescript
CODE:
import tailwindcss from "@tailwindcss/vite";
import { defineConfig } from "vite";

export default defineConfig({
  plugins: [tailwindcss()],
});

----------------------------------------

TITLE: Using Percentage-Based Height Utilities in HTML with Tailwind CSS
DESCRIPTION: Example of using h-full and h-<fraction> utilities like h-1/2 and h-2/5 to give elements percentage-based heights relative to their parent containers.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/height.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="h-full ...">h-full</div>
<div class="h-9/10 ...">h-9/10</div>
<div class="h-3/4 ...">h-3/4</div>
<div class="h-1/2 ...">h-1/2</div>
<div class="h-1/3 ...">h-1/3</div>

----------------------------------------

TITLE: Creating and Displaying an API Table with Utilities
DESCRIPTION: This JavaScript code imports React components needed for rendering UI elements and defines a table that lists utilities for `background-attachment`. It specifies the mappings of utility classes like `bg-fixed`, `bg-local`, and `bg-scroll` to corresponding CSS behavior. Dependencies include React for component usage and `ApiTable` component for rendering definitions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-attachment.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

export const title = "background-attachment";
export const description = "Utilities for controlling how a background image behaves when scrolling.";

<ApiTable
  rows={[
    ["bg-fixed", "background-attachment: fixed;"],
    ["bg-local", "background-attachment: local;"],
    ["bg-scroll", "background-attachment: scroll;"],
  ]}
/>

----------------------------------------

TITLE: Basic Text Shadow Example in HTML with Tailwind CSS Classes
DESCRIPTION: This HTML snippet demonstrates the usage of different text shadow utilities in Tailwind CSS, ranging from extra small (2xs) to large (lg) shadows.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-shadow.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<p class="text-shadow-2xs ...">The quick brown fox...</p>
<p class="text-shadow-xs ...">The quick brown fox...</p>
<p class="text-shadow-sm ...">The quick brown fox...</p>
<p class="text-shadow-md ...">The quick brown fox...</p>
<p class="text-shadow-lg ...">The quick brown fox...</p>

----------------------------------------

TITLE: Implementing Stretch Justification with Tailwind CSS
DESCRIPTION: Demonstrates the justify-stretch utility which allows flex items to fill the available space along the container's main axis, ensuring items expand to fill the container width.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-content.mdx#2025-04-18_snippet_8

LANGUAGE: html
CODE:
<div class="flex justify-stretch ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Fixed Field Sizing in HTML
DESCRIPTION: This HTML snippet applies the 'field-sizing-fixed' utility to a textarea, ensuring it maintains a consistent width regardless of the content. It's ideal for inputs requiring a specific size constraint.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/field-sizing.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<textarea class="field-sizing-fixed w-80 ..." rows="2">
  Latex Salesman, Vanderlay Industries
</textarea>

----------------------------------------

TITLE: Using noscript Variant in Tailwind CSS
DESCRIPTION: Demonstrates the new noscript variant that allows conditionally applying styles when JavaScript is disabled in the browser, offering a CSS-based alternative to the <noscript> tag.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_21

LANGUAGE: html
CODE:
<div class="hidden noscript:block">Please enable JavaScript to use this app.</div>

----------------------------------------

TITLE: Managing Prefixes in Tailwind CSS
DESCRIPTION: Explains the usage of prefixes in class names in Tailwind CSS v4, ensuring that generated CSS variables avoid conflicts.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_15

LANGUAGE: HTML
CODE:
<div class="tw:flex tw:bg-red-500 tw:hover:bg-red-600">
  <!-- ... -->
</div>

LANGUAGE: CSS
CODE:
@import "tailwindcss" prefix(tw);

@theme {
  --font-display: "Satoshi", "sans-serif";

  --breakpoint-3xl: 120rem;

  --color-avocado-100: oklch(0.99 0 0);
  --color-avocado-200: oklch(0.98 0.04 113.22);
  --color-avocado-300: oklch(0.94 0.11 115.03);

  /* ... */
}

LANGUAGE: CSS
CODE:
:root {
  --tw-font-display: "Satoshi", "sans-serif";

  --tw-breakpoint-3xl: 120rem;

  --tw-color-avocado-100: oklch(0.99 0 0);
  --tw-color-avocado-200: oklch(0.98 0.04 113.22);
  --tw-color-avocado-300: oklch(0.94 0.11 115.03);

  /* ... */
}

----------------------------------------

TITLE: HTML Flow Root Example
DESCRIPTION: This example showcases the use of the `flow-root` utility class in Tailwind CSS.  `flow-root` creates a new block formatting context. This is used to contain floats or prevent margin collapsing.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/display.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:flow-root] -->
<div class="p-4">
  <div class="flow-root ...">
    <div class="my-4 ...">Well, let me tell you something, ...</div>
  </div>
  <div class="flow-root ...">
    <div class="my-4 ...">Sure, go ahead, laugh if you want...</div>
  </div>
</div>

----------------------------------------

TITLE: HTML Background Repeat Utility Examples
DESCRIPTION: Demonstrates various Tailwind CSS background repeat classes with cloud image background
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-repeat.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="bg-[url(/img/clouds.svg)] bg-center bg-repeat ..."></div>

LANGUAGE: html
CODE:
<div class="bg-[url(/img/clouds.svg)] bg-center bg-repeat-x ..."></div>

LANGUAGE: html
CODE:
<div class="bg-[url(/img/clouds.svg)] bg-center bg-repeat-y ..."></div>

LANGUAGE: html
CODE:
<div class="bg-[url(/img/clouds.svg)] bg-center bg-repeat-space ..."></div>

LANGUAGE: html
CODE:
<div class="bg-[url(/img/clouds.svg)] bg-center bg-repeat-round ..."></div>

LANGUAGE: html
CODE:
<div class="bg-[url(/img/clouds.svg)] bg-center bg-no-repeat ..."></div>

----------------------------------------

TITLE: Automatic Hyphenation with hyphens-auto in HTML
DESCRIPTION: Example showing how to use the hyphens-auto utility class to allow the browser to automatically choose hyphenation points based on the language. The lang attribute is used to specify the language for proper hyphenation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hyphens.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- prettier-ignore -->
<p class="hyphens-auto" lang="de">
  ... Kraftfahrzeughaftpflichtversicherung is a ...
</p>

----------------------------------------

TITLE: Grid Items Alignment with justify-items-end in HTML
DESCRIPTION: Example demonstrating how to use the justify-items-end utility to align grid items to the end of their inline axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-items.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code filename:justify-items-end] -->
<!-- [!code classes:justify-items-end] -->
<div class="grid grid-flow-col justify-items-end ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: React JSX Example with Tailwind CSS Rounded Classes
DESCRIPTION: This JSX code demonstrates the use of various Tailwind CSS rounded classes to apply different border radius sizes to a set of divs. The flex utility classes are used for layout, and each div has a different rounded class (rounded-sm, rounded-md, rounded-lg, rounded-xl) and a background color.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
{
    <div className="flex flex-col items-center justify-around gap-4 text-center text-sm leading-6 font-bold text-white sm:flex-row">
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-sm</p>
        <div className="size-16 rounded-sm bg-purple-500 p-4"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-md</p>
        <div className="size-16 rounded-md bg-purple-500 p-4"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-lg</p>
        <div className="size-16 rounded-lg bg-purple-500 p-4"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">rounded-xl</p>
        <div className="size-16 rounded-xl bg-purple-500 p-4"></div>
      </div>
    </div>
  }

----------------------------------------

TITLE: List Style Reset in Preflight CSS
DESCRIPTION: Shows how Preflight removes default styling from ordered and unordered lists, eliminating bullets and numbers by default.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_5

LANGUAGE: CSS
CODE:
ol,
ul,
menu {
  list-style: none;
}

----------------------------------------

TITLE: Mask Clip Examples with React Components
DESCRIPTION: React component implementation demonstrating three different mask-clip utilities in action. Shows how the mask-clip-border, mask-clip-padding, and mask-clip-content utilities affect the display of masked background images.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-clip.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<Example>
  {
    <div className="flex flex-col items-center justify-center gap-y-10 text-center font-mono text-xs font-medium text-gray-500 sm:flex-row sm:space-y-0 sm:space-x-10 dark:text-gray-400">
      <div className="flex flex-col items-center">
        <p className="mb-3">mask-clip-border</p>
        <div className="relative size-24 rounded-lg border-3 border-dashed border-indigo-500/50 dark:border-indigo-400/75">
          <div className="absolute -inset-[3px] bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=80)] mask-radial-[50%_50%] mask-radial-from-100% bg-cover bg-center mask-clip-border p-1.5"></div>
        </div>
      </div>
      <div className="flex flex-col items-center">
        <p className="mb-3">mask-clip-padding</p>
        <div className="relative size-24 rounded-lg border-3 border-dashed border-indigo-500/50 dark:border-indigo-400/75">
          <div className="absolute -inset-[3px] rounded-lg border-3 bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=80)] mask-radial-[50%_50%] mask-radial-from-100% bg-cover bg-center mask-clip-padding p-1.5"></div>
        </div>
      </div>
      <div className="flex flex-col items-center">
        <p className="mb-3">mask-clip-content</p>
        <div className="relative size-24 rounded-lg border-3 border-dashed border-indigo-500/50 dark:border-indigo-400/75">
          <div className="absolute -inset-[3px] rounded-lg border-3 bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=80)] mask-radial-[50%_50%] mask-radial-from-100% bg-cover bg-center mask-clip-content p-1.5"></div>
        </div>
      </div>
    </div>
  }
</Example>

----------------------------------------

TITLE: Opacity Modifier Example in Tailwind CSS
DESCRIPTION: This JSX snippet demonstrates using the opacity modifier to adjust box shadow opacity. It shows `shadow-xl`, `shadow-xl/20`, and `shadow-xl/30` classes applied to divs, showcasing different shadow opacities using Tailwind CSS's opacity modifier.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_4

LANGUAGE: jsx
CODE:
<Figure>

<Example padding={false}>
  {
    <div className="flex items-center justify-around gap-4 gap-y-6 bg-white px-6 py-14 font-mono font-bold max-sm:flex-col max-sm:py-10">
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500">shadow-xl</p>
        <div className="size-24 rounded-lg bg-white shadow-xl"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500">shadow-xl/20</p>
        <div className="size-24 rounded-lg bg-white shadow-xl/20"></div>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500">shadow-xl/30</p>
        <div className="size-24 rounded-lg bg-white shadow-xl/30"></div>
      </div>
    </div>
  }
</Example>

```html
<!-- [!code classes:shadow-xl,shadow-xl/20,shadow-xl/30] -->
<div class="shadow-xl ..."></div>
<div class="shadow-xl/20 ..."></div>
<div class="shadow-xl/30 ..."></div>
```

</Figure>

----------------------------------------

TITLE: First and Last Order Positioning
DESCRIPTION: Shows how to use order-first and order-last utilities to position flex items at the beginning or end of a flex container.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/order.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="flex justify-between ...">
  <div class="order-last ...">01</div>
  <div class="...">02</div>
  <div class="order-first ...">03</div>
</div>

----------------------------------------

TITLE: Example of Border Styles in HTML
DESCRIPTION: An HTML example using Tailwind CSS classes `border-solid`, `border-dashed`, `border-dotted`, and `border-double` to demonstrate different border styles applied to div elements. This snippet shows how to visually represent border utilities applied via Tailwind CSS classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-style.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<!-- [!code classes:border-solid,border-dashed,border-dotted,border-double] -->
<div class="border-2 border-solid ..."></div>
<div class="border-2 border-dashed ..."></div>
<div class="border-2 border-dotted ..."></div>
<div class="border-4 border-double ..."></div>

----------------------------------------

TITLE: HTML Structure for Color Utilities in Tailwind CSS
DESCRIPTION: This HTML snippet outlines a component that demonstrates the usage of Tailwind CSS color utilities such as background colors and borders in a visually structured layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="flex items-center gap-4 rounded-lg bg-white p-6 shadow-md outline outline-black/5 dark:bg-gray-800">
  <span class="inline-flex shrink-0 rounded-full border border-pink-300 bg-pink-100 p-2 dark:border-pink-300/10 dark:bg-pink-400/10">
    <svg class="size-6 stroke-pink-700 dark:stroke-pink-500"><!-- ... --></svg>
  </span>
  <div>
    <p class="text-gray-700 dark:text-gray-400">
      <span class="font-medium text-gray-950 dark:text-white">Tom Watson</span> mentioned you in
      <span class="font-medium text-gray-950 dark:text-white">Logo redesign</span>
    </p>
    <time class="mt-1 block text-gray-500" datetime="9:37">9:37am</time>
  </div>
</div>

----------------------------------------

TITLE: Custom Container Size Configuration
DESCRIPTION: Shows how to define custom container query sizes using theme variables.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_13

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --container-8xl: 96rem;
}

----------------------------------------

TITLE: Basic Text Decoration Color Example
DESCRIPTION: HTML example showing how to apply text decoration colors to links using TailwindCSS utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-color.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<p>
  I'm Derek, an astro-engineer based in Tattooine. I like to build X-Wings
  at <a class="underline decoration-sky-500">My Company, Inc</a>. Outside
  of work, I like to <a class="underline decoration-pink-500">watch pod-racing</a>
  and have <a class="underline decoration-indigo-500">light-saber</a> fights.
</p>

----------------------------------------

TITLE: Implementing Basic Scroll Padding in Tailwind CSS
DESCRIPTION: Using the scroll-pl-6 utility to apply scroll padding to a horizontal snap container, which creates proper padding when scrolling through a gallery of images.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-padding.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- [!code classes:scroll-pl-6] -->
<div class="snap-x scroll-pl-6 ...">
  <div class="snap-start ...">
    <img src="/img/vacation-01.jpg" />
  </div>
  <div class="snap-start ...">
    <img src="/img/vacation-02.jpg" />
  </div>
  <div class="snap-start ...">
    <img src="/img/vacation-03.jpg" />
  </div>
  <div class="snap-start ...">
    <img src="/img/vacation-04.jpg" />
  </div>
  <div class="snap-start ...">
    <img src="/img/vacation-05.jpg" />
  </div>
</div>

----------------------------------------

TITLE: Using Numeric Figure Styles
DESCRIPTION: Demonstrate various numeric figure styles like lining, oldstyle, proportional, and tabular numeric glyphs
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-variant-numeric.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<p class="lining-nums ...">1234567890</p>

LANGUAGE: html
CODE:
<p class="oldstyle-nums ...">1234567890</p>

LANGUAGE: html
CODE:
<p class="proportional-nums ...">12121</p>

LANGUAGE: html
CODE:
<p class="tabular-nums ...">12121</p>

----------------------------------------

TITLE: Applying Container-Based Width Utilities in HTML
DESCRIPTION: This HTML example demonstrates the usage of container-based width utilities in Tailwind CSS, such as w-xl, w-lg, w-md, etc. These classes set fixed widths based on the container scale.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/width.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<div class="w-xl ...">w-xl</div>
<div class="w-lg ...">w-lg</div>
<div class="w-md ...">w-md</div>
<div class="w-sm ...">w-sm</div>
<div class="w-xs ...">w-xs</div>
<div class="w-2xs ...">w-2xs</div>
<div class="w-3xs ...">w-3xs</div>

----------------------------------------

TITLE: Implementing a Subgrid with Tailwind CSS
DESCRIPTION: This snippet illustrates how to use the `grid-rows-subgrid` utility to adopt the row tracks defined by the item's parent in a grid layout. The `grid-rows-subgrid` class allows a grid item to inherit the row definitions from its parent.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-template-rows.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="grid grid-flow-col grid-rows-4 gap-4">
  <div>01</div>
  <!-- ... -->
  <div>05</div>
  <div class="row-span-3 grid grid-rows-subgrid gap-4">
    <div class="row-start-2">06</div>
  </div>
  <div>07</div>
  <!-- ... -->
  <div>10</div>
</div>

----------------------------------------

TITLE: Basic Padding Example in HTML
DESCRIPTION: Example of applying padding to all sides of an element using the p-8 utility class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/padding.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- [!code classes:p-8] -->
<div class="p-8 ...">p-8</div>

----------------------------------------

TITLE: Combining Numeric Variant Utilities
DESCRIPTION: Demonstrate how multiple font-variant-numeric utilities can be combined for complex typographic styling
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-variant-numeric.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<dl class="...">
  <dt class="...">Subtotal</dt>
  <dd class="text-right slashed-zero tabular-nums ...">$100.00</dd>
  <dt class="...">Tax</dt>
  <dd class="text-right slashed-zero tabular-nums ...">$14.50</dd>
  <dt class="...">Total</dt>
  <dd class="text-right slashed-zero tabular-nums ...">$114.50</dd>
</dl>

----------------------------------------

TITLE: Applying Focus States with Tailwind CSS
DESCRIPTION: This snippet illustrates how to manage focus states on inputs by applying Tailwind CSS utility classes. It highlights how the border color changes when the input is focused.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-color.mdx#2025-04-18_snippet_8

LANGUAGE: jsx
CODE:
<label className="mx-auto block max-w-xs">\n      <span className="text-sm font-medium text-gray-900 dark:text-gray-200">Email address</span>\n      <input\n        type="text"\n        placeholder="jane@example.com"\n        className="block w-full rounded-lg border-2 border-gray-700 px-3 py-2 font-sans text-sm leading-5 text-gray-500 focus:border-pink-600 focus:outline-none dark:bg-gray-900 dark:text-gray-400 dark:placeholder:text-gray-600"\n      />\n    </label>

LANGUAGE: html
CODE:
<input class="border-2 border-gray-700 focus:border-pink-600 ..." />

----------------------------------------

TITLE: Italicizing Text with Tailwind CSS
DESCRIPTION: This example demonstrates the usage of the `italic` utility class from Tailwind CSS to make text italicized. It involves a `p` element with relevant Tailwind CSS classes to achieve the desired styled output.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-style.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:italic] -->
<p class="italic ...">The quick brown fox ...</p>

----------------------------------------

TITLE: Center Content Alignment in Grid Layout
DESCRIPTION: Example showing how to center grid items along the cross axis using content-center utility
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-content.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="grid h-56 grid-cols-3 content-center gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
</div>

----------------------------------------

TITLE: HTML Structure for Grid Columns
DESCRIPTION: This snippet shows the HTML structure to implement a grid layout using Tailwind CSS classes for a grid with 4 columns.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-template-columns.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="grid grid-cols-4 gap-4">
  <div>01</div>
  <!-- ... -->
  <div>09</div>
</div>

----------------------------------------

TITLE: Implementing 3D Perspective with Tailwind CSS
DESCRIPTION: Example showing how to use the perspective-dramatic and perspective-normal utilities to control the z-plane distance from the screen. This code creates two 3D cube examples with different perspective values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/perspective.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- [!code classes:perspective-dramatic,perspective-normal] -->
<div class="size-20 perspective-dramatic ...">
  <div class="translate-z-12 rotate-x-0 bg-sky-300/75 ...">1</div>
  <div class="-translate-z-12 rotate-y-18 bg-sky-300/75 ...">2</div>
  <div class="translate-x-12 rotate-y-90 bg-sky-300/75 ...">3</div>
  <div class="-translate-x-12 -rotate-y-90 bg-sky-300/75 ...">4</div>
  <div class="-translate-y-12 rotate-x-90 bg-sky-300/75 ...">5</div>
  <div class="translate-y-12 -rotate-x-90 bg-sky-300/75 ...">6</div>
</div>

<div class="size-20 perspective-normal ...">
  <div class="translate-z-12 rotate-x-0 bg-sky-300/75 ...">1</div>
  <div class="-translate-z-12 rotate-y-18 bg-sky-300/75 ...">2</div>
  <div class="translate-x-12 rotate-y-90 bg-sky-300/75 ...">3</div>
  <div class="-translate-x-12 -rotate-y-90 bg-sky-300/75 ...">4</div>
  <div class="-translate-y-12 rotate-x-90 bg-sky-300/75 ...">5</div>
  <div class="translate-y-12 -rotate-x-90 bg-sky-300/75 ...">6</div>
</div>

----------------------------------------

TITLE: Capitalize Text Example
DESCRIPTION: HTML example showing how to use the capitalize utility class in TailwindCSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-transform.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code classes:capitalize] -->
<p class="capitalize">The quick brown fox ...</p>

----------------------------------------

TITLE: Tailwind CSS flex-basis spacing scale
DESCRIPTION: This example shows how to use the spacing scale utilities like `basis-64` and `basis-128` to set the initial size of flex items in Tailwind CSS. The flex items are arranged in a row with specified spacing.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-basis.mdx#2025-04-18_snippet_0

LANGUAGE: JSX
CODE:
{
    <div className="flex flex-row space-x-4 font-mono text-sm leading-6 font-bold text-white">
      <div className="flex h-14 basis-64 items-center justify-center rounded-lg bg-purple-500">01</div>
      <div className="flex h-14 basis-64 items-center justify-center rounded-lg bg-purple-500">02</div>
      <div className="flex h-14 basis-128 items-center justify-center rounded-lg bg-purple-500">03</div>
    </div>
  }

----------------------------------------

TITLE: Preventing Flex Item Growth
DESCRIPTION: Demonstrates how to use 'grow-0' to prevent specific flex items from growing, useful for maintaining fixed-size elements in a flexible layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-grow.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="flex ...">
  <div class="size-14 grow ...">01</div>
  <div class="size-14 grow-0 ...">02</div>
  <div class="size-14 grow ...">03</div>
</div>

----------------------------------------

TITLE: HTML for opacity modifiers in Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates how to use opacity modifiers with Tailwind CSS shadow utilities. It showcases `shadow-xl`, `shadow-xl/20`, and `shadow-xl/30` classes to vary the opacity of the box shadow.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<!-- [!code classes:shadow-xl,shadow-xl/20,shadow-xl/30] -->
<div class="shadow-xl ..."></div>
<div class="shadow-xl/20 ..."></div>
<div class="shadow-xl/30 ..."></div>

----------------------------------------

TITLE: Tailwind CSS Pointer Events Example - Restoring Pointer Events
DESCRIPTION: Shows how to use the pointer-events-auto utility to revert to the default browser behavior for pointer events, with a responsive example using a media query.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/pointer-events.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="pointer-events-none md:pointer-events-auto ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Default Line Heights for Font Sizes in Tailwind CSS
DESCRIPTION: This JavaScript snippet enables recommended default line heights for all built-in font sizes in Tailwind CSS by setting the 'defaultLineHeights' flag, affecting design consistency.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_12

LANGUAGE: javascript
CODE:
module.exports = {
  experimental: {
    defaultLineHeights: true,
  },
};

----------------------------------------

TITLE: Adding a Radial Gradient Example - HTML
DESCRIPTION: This snippet illustrates the usage of radial gradients in Tailwind CSS using the `bg-radial` utility, demonstrating various positions with customizable color stops.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-image.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<div className="flex justify-around p-8 sm:p-12">
      <div className="size-18 rounded-full bg-radial from-pink-400 from-40% to-fuchsia-700 sm:size-24"></div>
      <div className="size-18 rounded-full bg-radial-[at_50%_75%] from-sky-200 via-blue-400 to-indigo-900 to-90% sm:size-24"></div>
      <div className="size-18 rounded-full bg-radial-[at_25%_25%] from-white to-zinc-900 to-75% sm:size-24"></div>
    </div>

----------------------------------------

TITLE: Demonstrating Break-spaces White-space in Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates the use of the 'whitespace-break-spaces' utility class in Tailwind CSS. It preserves newlines and spaces within an element, with white space at the end of lines wrapping to the next line.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/white-space.mdx#2025-04-18_snippet_7

LANGUAGE: HTML
CODE:
<!-- [!code classes:whitespace-break-spaces] -->
<!-- prettier-ignore -->
<p class="whitespace-break-spaces">Hey everyone!

It's almost 2022       and we still don't know if there             are aliens living among us, or do we? Maybe the person writing this is an alien.

You will never know.</p>

----------------------------------------

TITLE: Basic Mask Origin Example JSX Implementation
DESCRIPTION: React/JSX implementation showing three different mask-origin utility examples with visual demonstrations using images and borders.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-origin.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
<div className="flex flex-col gap-y-10 text-center font-mono text-xs font-medium text-gray-500 sm:flex-row sm:justify-between dark:text-gray-400">
  <div className="flex shrink-0 flex-col items-center">
    <p className="mb-3">mask-origin-border</p>
    <div className="relative size-24 rounded-lg border-3 border-dashed border-indigo-500/50 dark:border-indigo-400/75">
      <div className="absolute -inset-[3px] bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=80)] mask-radial-[50%_50%] mask-radial-from-100% bg-cover bg-center mask-no-repeat mask-origin-border p-1.5"></div>
    </div>
  </div>
  <div className="flex shrink-0 flex-col items-center">
    <p className="mb-3">mask-origin-padding</p>
    <div className="relative size-24 rounded-lg border-3 border-dashed border-indigo-500/50 dark:border-indigo-400/75">
      <div className="absolute -inset-[3px] rounded-lg border-3 bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=80)] mask-radial-[50%_50%] mask-radial-from-100% bg-cover bg-center mask-no-repeat mask-origin-padding p-1.5"></div>
    </div>
  </div>
  <div className="flex shrink-0 flex-col items-center">
    <p className="mb-3">mask-origin-content</p>
    <div className="relative size-24 rounded-lg border-3 border-dashed border-indigo-500/50 dark:border-indigo-400/75">
      <div className="absolute -inset-[3px] rounded-lg border-3 bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=80)] mask-radial-[50%_50%] mask-radial-from-100% bg-cover bg-center mask-no-repeat mask-origin-content p-1.5"></div>
    </div>
  </div>
</div>

----------------------------------------

TITLE: Tailwind CSS Opacity Modifier Example
DESCRIPTION: This example demonstrates how to use the opacity modifier with Tailwind CSS drop shadow utilities (`drop-shadow-xl`, `drop-shadow-xl/25`, `drop-shadow-xl/50`) to adjust the opacity of the drop shadow. The code shows different opacity levels applied to the same shadow size.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-drop-shadow.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
"<svg class=\"fill-white drop-shadow-xl ...\"><!-- ... --></svg>\n<svg class=\"fill-white drop-shadow-xl/25 ...\"><!-- ... --></svg>\n<svg class=\"fill-white drop-shadow-xl/50 ...\"><!-- ... --></svg>"

----------------------------------------

TITLE: Mandatory Scroll Snap Example
DESCRIPTION: HTML structure for implementing mandatory scroll snapping with the snap-always utility, forcing stops at each image in the carousel.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-snap-stop.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="snap-x snap-mandatory ...">
  <div class="snap-center snap-always ...">
    <img src="/img/vacation-01.jpg" />
  </div>
  <div class="snap-center snap-always ...">
    <img src="/img/vacation-02.jpg" />
  </div>
  <div class="snap-center snap-always ...">
    <img src="/img/vacation-03.jpg" />
  </div>
  <div class="snap-center snap-always ...">
    <img src="/img/vacation-04.jpg" />
  </div>
  <div class="snap-center snap-always ...">
    <img src="/img/vacation-05.jpg" />
  </div>
  <div class="snap-center snap-always ...">
    <img src="/img/vacation-06.jpg" />
  </div>
</div>

----------------------------------------

TITLE: Using Custom Box Shadow Value in Tailwind CSS (JSX)
DESCRIPTION: Demonstrates how to use a custom value for box shadow utilities in Tailwind CSS. This component allows customization of shadow, inset-shadow, ring, and inset-ring utilities with a specific shadow value.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_15

LANGUAGE: jsx
CODE:
<UsingACustomValue
  utilities={["shadow", "inset-shadow", "ring", "inset-ring"]}
  name="box shadow"
  value="0_35px_35px_rgba(0,0,0,0.25)"
/>

----------------------------------------

TITLE: Creating Disclosure Component in Vue
DESCRIPTION: Implementation of a disclosure component in Vue using Headless UI for creating expandable/collapsible content sections like FAQs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1/index.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<template>
  <Disclosure>
    <DisclosureButton> Is team pricing available? </DisclosureButton>
    <DisclosurePanel> Yes! You can purchase a license that you can share with your entire team. </DisclosurePanel>
  </Disclosure>
</template>

<script>
  import { Disclosure, DisclosureButton, DisclosurePanel } from "@headlessui/vue";

  export default {
    components: { Disclosure, DisclosureButton, DisclosurePanel },
  };
</script>

----------------------------------------

TITLE: Using clear-none Utility with Floating Images in Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates how to use the clear-none utility in Tailwind CSS to prevent clearing of floated elements. The example shows an article with left and right floated images and text that flows around them without clearing.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/clear.mdx#2025-04-18_snippet_9

LANGUAGE: html
CODE:
<!-- [!code classes:clear-none] -->
<article>
  <img class="float-left ..." src="/img/green-mountains.jpg" />
  <img class="float-right ..." src="/img/snow-mountains.jpg" />
  <p class="clear-none ...">Maybe we can live without libraries...</p>
</article>

----------------------------------------

TITLE: Implementing Responsive Design for Font Weight
DESCRIPTION: This snippet showcases how to make font weight responsive in a React component, allowing different classes based on screen size. It sets a default and featured class to adjust font weight accordingly.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-weight.mdx#2025-04-18_snippet_3

LANGUAGE: javascript
CODE:
<ResponsiveDesign element="p" property="font-weight" defaultClass="font-normal" featuredClass="font-bold" />

----------------------------------------

TITLE: Traditional CSS Approach for Button Styling
DESCRIPTION: Illustrates the traditional CSS approach for styling a button, including hover states, for comparison with Tailwind's utility-first approach.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<button class="btn">Save changes</button>

<style>
  .btn {
    background-color: var(--color-sky-500);
    &:hover {
      background-color: var(--color-sky-700);
    }
  }
</style>

----------------------------------------

TITLE: Clearing Right HTML Example - Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates how to clear right floated elements using the `clear-right` class in Tailwind CSS. The `clear-right` class is applied to the paragraph element to prevent it from wrapping around any right-floated images.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/clear.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
"<article>
  <img class=\"float-left ...\" src=\"/img/green-mountains.jpg\" />
  <img class=\"float-right ...\" src=\"/img/snow-mountains.jpg\" />
  <p class=\"clear-right ...\">Maybe we can live without libraries...</p>
</article>"

----------------------------------------

TITLE: Applying Size Utilities for Width and Height in HTML
DESCRIPTION: This HTML snippet showcases the use of size utilities in Tailwind CSS to set both width and height of elements simultaneously, using classes like size-16, size-20, size-24, etc.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/width.mdx#2025-04-18_snippet_6

LANGUAGE: HTML
CODE:
<div class="size-16 ...">size-16</div>
<div class="size-20 ...">size-20</div>
<div class="size-24 ...">size-24</div>
<div class="size-32 ...">size-32</div>
<div class="size-40 ...">size-40</div>

----------------------------------------

TITLE: Implementing Vertical Scrolling with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to create a vertically scrollable container using the 'overflow-y-auto' utility class from Tailwind CSS. It's typically used with a fixed height to allow content to scroll vertically when it exceeds the container's height.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overflow.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<div class="h-32 overflow-y-auto ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Example of Caption Positioned at Bottom of Table - React
DESCRIPTION: This snippet demonstrates how to use the 'caption-bottom' utility to position a caption element at the bottom of a table. It shows the structural usage of the caption with the table data provided.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/caption-side.mdx#2025-04-18_snippet_2

LANGUAGE: javascript
CODE:
<Figure>

<Example padding={false}>
  {
    <div className="overflow-hidden px-4 py-8 sm:px-8">
      <table className="w-full table-auto border-collapse text-sm">
        <caption className="caption-bottom pt-4 text-xs text-gray-500 dark:text-gray-400">
          Table 3.1: Professional wrestlers and their signature moves.
        </caption>
        <thead>
          <tr>
            <th className="border border-gray-200 bg-gray-50 p-4 py-3 pl-8 text-left font-medium text-gray-400 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-200">
              Wrestler
            </th>
            <th className="border border-gray-200 bg-gray-50 p-4 py-3 pr-8 text-left font-medium text-gray-400 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-200">
              Signature Move(s)
            </th>
          </tr>
        </thead>
        <tbody className="bg-white dark:bg-gray-800">
          <tr>
            <td className="border border-gray-200 p-4 pl-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              "Stone Cold" Steve Austin
            </td>
            <td className="border border-gray-200 p-4 pr-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              Stone Cold Stunner, Lou Thesz Press
            </td>
          </tr>
          <tr>
            <td className="border border-gray-200 p-4 pl-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              Bret "The Hitman" Hart
            </td>
            <td className="border border-gray-200 p-4 pr-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              The Sharpshooter
            </td>
          </tr>
          <tr>
            <td className="border border-gray-200 p-4 pl-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              Razor Ramon
            </td>
            <td className="border border-gray-200 p-4 pr-8 text-gray-500 dark:border-gray-600 dark:text-gray-400">
              Razor's Edge, Fallaway Slam
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  }
</Example>

</Figure>

----------------------------------------

TITLE: Configuring Separated Table Borders
DESCRIPTION: Demonstrates how to use border-separate utility to create distinct borders between table cells, ensuring each cell maintains its individual border style
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-collapse.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<table class="border-separate border border-gray-400 ...">
  <thead>
    <tr>
      <th class="border border-gray-300 ...">State</th>
      <th class="border border-gray-300 ...">City</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td class="border border-gray-300 ...">Ohio</td>
      <td class="border border-gray-300 ...">Columbus</td>
    </tr>
  </tbody>
</table>

----------------------------------------

TITLE: Defining title and description
DESCRIPTION: Defines the title and description for the break-inside utilities page. These variables are exported and likely used for page metadata and rendering.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/break-inside.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
export const title = "break-inside";
export const description = "Utilities for controlling how a column or page should break within an element.";

----------------------------------------

TITLE: Removing Border Radius in Tailwind CSS with HTML
DESCRIPTION: This snippet illustrates the use of the 'rounded-none' utility in Tailwind CSS to completely remove any existing border radius from a button element. It highlights the ease of reverting to a square shape by using the 'rounded-none' class. Tailwind CSS is required as a dependency.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_11

LANGUAGE: html
CODE:
<button class="rounded-none ...">Save Changes</button>

----------------------------------------

TITLE: Implementing Responsive Box Shadow Design in Tailwind CSS (JSX)
DESCRIPTION: Shows how to implement responsive design for box shadows using Tailwind CSS. This component demonstrates the use of different shadow classes for various screen sizes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_16

LANGUAGE: jsx
CODE:
<ResponsiveDesign property="box-shadow" defaultClass="shadow-none" featuredClass="shadow-lg" />

----------------------------------------

TITLE: Using Transform Origin Utilities in HTML with Tailwind CSS
DESCRIPTION: This code demonstrates how to apply transform origin utilities to image elements in HTML using Tailwind CSS classes. It shows examples for center, top-left, and bottom origins.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transform-origin.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<img class="origin-center rotate-45 ..." src="/img/mountains.jpg" />
<img class="origin-top-left rotate-12 ..." src="/img/mountains.jpg" />
<img class="origin-bottom -rotate-12 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Using a Custom Value for Font Weight
DESCRIPTION: This snippet demonstrates how to utilize a custom value for font weight in a React component. It allows for more granular control of styling elements by defining a specific font weight value dynamically.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-weight.mdx#2025-04-18_snippet_2

LANGUAGE: javascript
CODE:
<UsingACustomValue element="p" utility="font" value="1000" name="font weight" variable="font-weight" />

----------------------------------------

TITLE: Using flex-row in Tailwind CSS (HTML)
DESCRIPTION: Demonstrates how to apply the `flex-row` utility in Tailwind CSS to arrange flex items horizontally. The example uses Tailwind utility classes within a `div` to showcase how elements are aligned in a row.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-direction.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<div class=\"flex flex-row ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>

----------------------------------------

TITLE: Implementing place-self-center in Tailwind CSS
DESCRIPTION: Example showing how to use the place-self-center utility class to align an item at the center on both axes in a grid layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-self.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<div class="grid grid-cols-3 gap-4 ...">
  <div>01</div>
  <div class="place-self-center ...">02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
  <div>06</div>
</div>

----------------------------------------

TITLE: End Content Placement in Grid
DESCRIPTION: Positions grid items at the end of the container using place-content-end utility. Creates a 2-column grid with content packed against the end of the block axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-content.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="grid h-48 grid-cols-2 place-content-end gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
</div>

----------------------------------------

TITLE: Applying Styles with inverted-colors Variant in HTML
DESCRIPTION: This example shows how to use the inverted-colors variant in Tailwind CSS to conditionally add styles when the user has enabled an inverted color scheme. It removes the shadow effect when colors are inverted.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_42

LANGUAGE: html
CODE:
<div class="shadow-xl inverted-colors:shadow-none ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Clearing End with RTL HTML Example - Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates using the `clear-end` class with a right-to-left direction.  It is important to note the `dir="rtl"` attribute on the article element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/clear.mdx#2025-04-18_snippet_8

LANGUAGE: HTML
CODE:
"<article dir=\"rtl\">
  <img class=\"float-left ...\" src=\"/img/green-mountains.jpg\" />
  <img class=\"float-right ...\" src=\"/img/green-mountains.jpg\" />
  <p class=\"clear-end ...\">...ربما يمكننا العيش بدون مكتبات،</p>
</article>"

----------------------------------------

TITLE: Implementing Snap End Scrolling with Tailwind CSS
DESCRIPTION: Example showing how to create a horizontally scrollable container where images snap to their end positions using Tailwind CSS utilities. The container uses snap-x for horizontal snapping while child elements use snap-end for end-aligned snap positions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-snap-align.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<div className="relative">
      <div className="mr-6 mb-6 flex items-end justify-end pt-10">
        <div className="dark:highlight-white/10 mr-2 rounded bg-indigo-50 px-1.5 font-mono text-[0.625rem] leading-6 text-indigo-600 ring-1 ring-indigo-600 ring-inset dark:bg-indigo-500 dark:text-white dark:ring-0">
          snap point
        </div>
        <div className="absolute top-0 right-6 bottom-0 border-l border-indigo-500"></div>
      </div>
      <div className="relative flex w-full snap-x snap-mandatory gap-6 overflow-x-auto pb-14">
        <div className="shrink-0 snap-end scroll-mx-6">
          <div className="w-3 shrink-0 sm:-mr-[2px] sm:w-10"></div>
        </div>
        <div className="shrink-0 snap-end scroll-mx-6">
          <img
            className="h-40 w-80 shrink-0 rounded-lg bg-white"
            src="https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80"
          />
        </div>
        <!-- Additional image elements -->
      </div>
    </div>

LANGUAGE: html
CODE:
<div class="snap-x ...">
  <div class="snap-end ...">
    <img src="/img/vacation-01.jpg" />
  </div>
  <div class="snap-end ...">
    <img src="/img/vacation-02.jpg" />
  </div>
  <div class="snap-end ...">
    <img src="/img/vacation-03.jpg" />
  </div>
  <div class="snap-end ...">
    <img src="/img/vacation-04.jpg" />
  </div>
  <div class="snap-end ...">
    <img src="/img/vacation-05.jpg" />
  </div>
  <div class="snap-end ...">
    <img src="/img/vacation-06.jpg" />
  </div>
</div>

----------------------------------------

TITLE: Using Theme Variable in Inline Styles
DESCRIPTION: Shows how to access the theme variable directly using CSS custom property syntax in inline styles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div style="background-color: var(--color-mint-500)">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Basic Example of SVG Stroke Styling with Tailwind CSS
DESCRIPTION: This example demonstrates how to use Tailwind CSS utilities like 'stroke-cyan-500' to change the stroke color of an SVG element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/stroke.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<svg class="stroke-cyan-500 ...">
  <!-- ... -->
</svg>

----------------------------------------

TITLE: Space Evenly Content in Grid
DESCRIPTION: Distributes grid items with equal space between and around rows using place-content-evenly utility. Creates a 2-column grid with even spacing throughout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-content.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div class="grid h-48 grid-cols-2 place-content-evenly gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
</div>

----------------------------------------

TITLE: Installing Tailwind CSS Standalone CLI on macOS
DESCRIPTION: Commands to download, make executable, and rename the Tailwind CSS standalone CLI for macOS arm64.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/standalone-cli/index.mdx#2025-04-18_snippet_0

LANGUAGE: sh
CODE:
# Example for macOS arm64
curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-arm64
chmod +x tailwindcss-macos-arm64
mv tailwindcss-macos-arm64 tailwindcss

----------------------------------------

TITLE: Using Arbitrary Values for Min and Max Breakpoints in HTML
DESCRIPTION: This HTML snippet shows how to use arbitrary values for min and max breakpoints. It applies styles only when the screen width is between 712px and 877px.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_16

LANGUAGE: html
CODE:
"<div class="min-[712px]:max-[877px]:right-16 ...">
  <!-- ... -->
</div>"

----------------------------------------

TITLE: Clearing Both HTML Example - Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates clearing both left and right floated elements using the `clear-both` utility class in Tailwind CSS.  This is used in an `<article>` element with images that are floated.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/clear.mdx#2025-04-18_snippet_6

LANGUAGE: HTML
CODE:
"<article>
  <img class=\"float-left ...\" src=\"/img/snow-mountains.jpg\" />
  <img class=\"float-right ...\" src=\"/img/green-mountains.jpg\" />
  <p class=\"clear-both ...\">Maybe we can live without libraries...</p>
</article>"

----------------------------------------

TITLE: Using Small Viewport Height in HTML with Tailwind CSS
DESCRIPTION: Example of using the h-svh utility to set an element's height to the smallest possible height of the viewport.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/height.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div class="h-svh">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Using Negative Scroll Margin Values in Tailwind CSS
DESCRIPTION: Shows how to apply a negative scroll margin value using Tailwind CSS by prefixing the class name with a dash.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-margin.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="snap-start -scroll-ml-6 ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Line Height API Reference Table in Tailwind CSS
DESCRIPTION: API table component displaying the available line-height utilities in Tailwind CSS, showing both the class names and the CSS they generate.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/line-height.mdx#2025-04-18_snippet_4

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["text-<size>/<number>", "font-size: <size>;\nline-height: calc(var(--spacing) * <number>);"],
    ["text-<size>/(<custom-property>)", "font-size: <size>;\nline-height: var(<custom-property>);"],
    ["text-<size>/[<value>]", "font-size: <size>;\nline-height: <value>;"],
    ["leading-none", "line-height: 1;"],
    ["leading-<number>", "line-height: calc(var(--spacing) * <number>)"],
    ["leading-(<custom-property>)", "line-height: var(<custom-property>);"],
    ["leading-[<value>]", "line-height: <value>;"],
  ]}
/>

----------------------------------------

TITLE: Basic Outline Width Examples
DESCRIPTION: Demonstrates the use of outline, outline-2, and outline-4 utilities for setting element outline widths.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/outline-width.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<button class="outline outline-offset-2 ...">Button A</button>
<button class="outline-2 outline-offset-2 ...">Button B</button>
<button class="outline-4 outline-offset-2 ...">Button C</button>

----------------------------------------

TITLE: Basic Text Indentation Example
DESCRIPTION: Demonstrates the basic usage of TailwindCSS indent utility with indent-8 class to add text indentation to a paragraph.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-indent.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:indent-8] -->
<p class="indent-8">So I started to walk into the water...</p>

----------------------------------------

TITLE: Allowing Text Selection Example
DESCRIPTION: Shows how to use select-text utility to enable text selection in an element
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/user-select.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="select-text ...">The quick brown fox jumps over the lazy dog.</div>

----------------------------------------

TITLE: HTML with Tailwind CSS Rounded Class Examples
DESCRIPTION: This HTML snippet shows how to apply different border radius using tailwind classes. It shows elements with rounded-sm, rounded-md, rounded-lg, and rounded-xl classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:rounded-sm,rounded-md,rounded-lg,rounded-xl] -->
<div class="rounded-sm ..."></div>
<div class="rounded-md ..."></div>
<div class="rounded-lg ..."></div>
<div class="rounded-xl ..."></div>

----------------------------------------

TITLE: Divider Example with Tailwind CSS
DESCRIPTION: This example shows how to use Tailwind CSS classes to create a horizontal divider line. It uses the `hr` element with classes for width, border style, and border color to style the divider.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2024-05-24-catalyst-application-layouts/index.mdx#2025-04-18_snippet_4

LANGUAGE: JSX
CODE:

    <div className="bg-white py-8 dark:bg-zinc-900">
      <hr className="w-full border-t border-zinc-950/10 dark:border-white/10" />
    </div>
  


----------------------------------------

TITLE: Styling Inputs with Shown Placeholders using Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the placeholder-shown variant in Tailwind CSS to style an input when the placeholder is shown. It applies a gray border to inputs with visible placeholders.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_103

LANGUAGE: html
CODE:
<input class="placeholder-shown:border-gray-500 ..." placeholder="you@example.com" />

----------------------------------------

TITLE: Creating a Table with border-spacing using JSX and Tailwind CSS
DESCRIPTION: This JSX code demonstrates creating a table with border-spacing using Tailwind CSS classes within a React component. It uses classes such as `border-separate` and `border-spacing-2` to style the table.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_11

LANGUAGE: jsx
CODE:
"{<div className=\"px-4 py-8 sm:px-8\">\n      <table className=\"w-full border-separate border-spacing-2 text-sm\">\n        <thead className=\"bg-slate-100 dark:bg-slate-700\">\n          <tr>\n            <th className=\"w-1/2 border border-slate-300 p-4 text-left font-semibold text-slate-900 dark:border-slate-600 dark:text-slate-200\">\n              <>State</>\n            </th>\n            <th className=\"w-1/2 border border-slate-300 p-4 text-left font-semibold text-slate-900 dark:border-slate-600 dark:text-slate-200\">\n              <>City</>\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"bg-white\">\n          <tr>\n            <td className=\"border border-slate-300 p-4 text-slate-500 dark:border-slate-700 dark:text-slate-400\">\n              Indiana\n            </td>\n            <td className=\"border border-slate-300 p-4 text-slate-500 dark:border-slate-700 dark:text-slate-400\">\n              <>Indianapolis</>\n            </td>\n          </tr>\n          <tr>\n            <td className=\"border border-slate-300 p-4 text-slate-500 dark:border-slate-700 dark:text-slate-400\">\n              Ohio\n            </td>\n            <td className=\"border border-slate-300 p-4 text-slate-500 dark:border-slate-700 dark:text-slate-400\">\n              Columbus\n            </td>\n          </tr>\n          <tr>\n            <td className=\"border border-slate-300 p-4 text-slate-500 dark:border-slate-700 dark:text-slate-400\">\n              Michigan\n            </td>\n            <td className=\"border border-slate-300 p-4 text-slate-500 dark:border-slate-700 dark:text-slate-400\">\n              Detroit\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>}"

----------------------------------------

TITLE: End-alignment Example with Tailwind CSS
DESCRIPTION: Demonstrates using self-end utility to align an item to the end of the container's cross axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-self.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="flex items-stretch ...">
  <div>01</div>
  <div class="self-end ...">02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Tailwind CSS Responsive Design Content Example
DESCRIPTION: This example shows how to use responsive modifiers to change the content of the `::before` pseudo-element at different screen sizes using Tailwind CSS. The content changes from 'Mobile' to 'Desktop' on medium screens and above.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/content.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
"<!-- [!code classes:md:before:content-['Desktop']] -->
<p class="before:content-['Mobile'] md:before:content-['Desktop'] ..."></p>"

----------------------------------------

TITLE: Using Negative Hue-Rotate Values - JSX
DESCRIPTION: Shows how to utilize negative values for hue rotation adjustments. This example illustrates the application of classes like -hue-rotate for negative rotations, emphasizing the visual impact on images.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-hue-rotate.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<Figure>
<Example padding={false}>
  {
    <div className="flex scroll-p-8 justify-start overflow-scroll sm:block sm:overflow-visible">
      <div className="flex shrink-0 items-center justify-around gap-6 p-8 font-mono font-bold sm:gap-4">
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            -hue-rotate-15
          </p>
          <div className="relative -hue-rotate-15">
            <img
              className="size-24 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            -hue-rotate-45
          </p>
          <div className="relative -hue-rotate-45">
            <img
              className="size-24 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            -hue-rotate-90
          </p>
          <div className="relative -hue-rotate-90">
            <img
              className="size-24 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
      </div>
    </div>
  }
</Example>
</Figure>

----------------------------------------

TITLE: Using Transition Timing Function Utilities in HTML
DESCRIPTION: Demonstrates the usage of transition timing function utilities in HTML elements. The example shows buttons with different easing effects applied.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-timing-function.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<button class="duration-300 ease-in ...">Button A</button>
<button class="duration-300 ease-out ...">Button B</button>
<button class="duration-300 ease-in-out ...">Button C</button>

----------------------------------------

TITLE: Example of Color Utility Usage in Tailwind CSS
DESCRIPTION: This snippet showcases how to use Tailwind CSS color utilities for background and text elements in a practical example. It employs classes to style the elements with specific color characteristics.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_3

LANGUAGE: javascript
CODE:
<Example padding={false}>
  {
    <div className="bg-black/5 p-8 text-sm">
      <div className="mx-auto flex max-w-md items-center gap-4 rounded-lg bg-white p-6 shadow-md outline outline-black/5 dark:bg-gray-800">
        <span className="inline-flex shrink-0 rounded-full border border-pink-300 bg-pink-100 p-2 dark:border-pink-300/10 dark:bg-pink-400/10">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            strokeWidth={1.5}
            className="size-6 stroke-pink-700 dark:stroke-pink-500"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              d="M14.857 17.082a23.848 23.848 0 0 0 5.454-1.31A8.967 8.967 0 0 1 18 9.75V9A6 6 0 0 0 6 9v.75a8.967 8.967 0 0 1-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 0 1-5.714 0m5.714 0a3 3 0 1 1-5.714 0"
            />
          </svg>
        </span>
        <div>
          <p className="text-gray-700 dark:text-gray-400">
            <span className="font-medium text-gray-950 dark:text-white">Tom Watson</span> mentioned you in {" "}
            <span className="font-medium text-gray-950 dark:text-white">Logo redesign</span>
          </p>
          <p className="mt-1 text-gray-500">9:37am</p>
        </div>
      </div>
    </div>
  }
</Example>

----------------------------------------

TITLE: Closing Disclosure Components in React with Headless UI
DESCRIPTION: Example showing how to close a Disclosure component in React by using Disclosure.Button within a Disclosure.Panel. This is useful for mobile navigation menus where clicking a link should close the panel.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-4/index.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
import { Disclosure } from '@headlessui/react'
import MyLink from './MyLink'

function MyDisclosure() {
  return (
    <Disclosure>
      <Disclosure.Button>Open mobile menu</Disclosure.Button>
      <Disclosure.Panel>
        <Disclosure.Button as={MyLink} href="/home">
          Home
        </Disclosure.Button>
        {/* ... */}
      </Disclosure.Panel>
    </Disclosure>
  )
}

----------------------------------------

TITLE: Styling Text Selection
DESCRIPTION: Shows how to customize the appearance of selected text using the selection variant for background and text colors.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_31

LANGUAGE: html
CODE:
<div class="selection:bg-fuchsia-300 selection:text-fuchsia-900">
  <p>
    So I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my
    way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all
    living things but I tell you Jerry at that moment, I <em>was</em> a marine biologist.
  </p>
</div>

----------------------------------------

TITLE: Optimizing Scroll with Will-change in HTML and Tailwind CSS
DESCRIPTION: Demonstrates the use of the will-change-scroll utility class to optimize an element for upcoming scroll changes. This should be applied just before the change occurs and removed after it finishes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/will-change.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:will-change-scroll] -->
<div class="overflow-auto will-change-scroll">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Basic Skew Transform Example
DESCRIPTION: HTML example showing how to apply basic skew transforms using Tailwind CSS classes skew-3, skew-6, and skew-12.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/skew.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<img class="skew-3 ..." src="/img/mountains.jpg" />
<img class="skew-6 ..." src="/img/mountains.jpg" />
<img class="skew-12 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Using Logical Properties for Border Colors - HTML
DESCRIPTION: This snippet shows the use of logical properties (`border-s-indigo-500`) to control border colors based on text directionality (LTR or RTL). It adapts the borders to logical properties, accommodating bidirectional text flows effectively.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-color.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<div dir="ltr">
  <div class="border-s-indigo-500 ..."></div>
</div>
<div dir="rtl">
  <div class="border-s-indigo-500 ..."></div>
</div>

----------------------------------------

TITLE: Using Object Comparison in Headless UI Listbox
DESCRIPTION: Demonstrates the new 'by' prop in Headless UI v1.7 for easier object comparison in form components like Listbox. The example shows how to bind department objects as values using the id field for comparison.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2022-09-09-new-personal-website-heroicons-2-headless-ui-v17/index.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { Listbox } from "@headlessui/react";

const departments = [
  { id: 1, name: "Marketing", contact: "Durward Reynolds" },
  { id: 2, name: "HR", contact: "Kenton Towne" },
  { id: 3, name: "Sales", contact: "Therese Wunsch" },
  { id: 4, name: "Finance", contact: "Benedict Kessler" },
  { id: 5, name: "Customer service", contact: "Katelyn Rohan" },
];

function DepartmentPicker({ selectedDepartment, onChange }) {
  return (
    <Listbox value={selectedDepartment} by="id" onChange={onChange}>
      <Listbox.Button>{selectedDepartment.name}</Listbox.Button>
      <Listbox.Options>
        {departments.map((department) => (
          <Listbox.Option key={department.id} value={department}>
            {department.name}
          </Listbox.Option>
        ))}
      </Listbox.Options>
    </Listbox>
  );
}

----------------------------------------

TITLE: HTML Structure for Backdrop Saturate Examples
DESCRIPTION: This HTML code snippet displays the structure required to showcase various backdrop saturation utilities provided by Tailwind CSS. Each `<div>` represents an example with different utilities applied. No special dependencies beyond a web environment that supports HTML and CSS are needed.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-saturate.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:backdrop-saturate-50,backdrop-saturate-125,backdrop-saturate-200] -->
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-saturate-50 ..."></div>
</div>
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-saturate-125 ..."></div>
</div>
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-saturate-200 ..."></div>
</div>

----------------------------------------

TITLE: Using Current Color for SVG Stroke in Tailwind CSS
DESCRIPTION: This example shows how to use the 'stroke-current' utility to set the stroke color of an SVG to match the current text color, useful for creating dynamic, interactive elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/stroke.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<button class="bg-white text-pink-600 hover:bg-pink-600 hover:text-white ...">
  <svg class="size-5 stroke-current ..." fill="none">
    <!-- ... -->
  </svg>
  Download file
</button>

----------------------------------------

TITLE: Round-based mask-repeat Example in HTML
DESCRIPTION: Demonstrates the mask-repeat-round utility which repeats the mask image without clipping and stretches it if needed to avoid gaps. This ensures full coverage of the element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-repeat.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<div class="mask-repeat-round mask-[url(/img/circle.png)] mask-size-[50px_50px] bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Demonstrating List Style Position with Interactive Example
DESCRIPTION: Renders an interactive example that compares list-inside and list-outside styles with styled list items and visual indicators.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/list-style-position.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<Figure>

<Example>
  {
    <div className="flex flex-col gap-8 sm:flex-row">
      <div className="relative">
        <div className="absolute -top-8 -bottom-8 left-8 w-px bg-pink-400/40 dark:bg-pink-400/30"></div>
        <p className="mb-3 ml-8 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">list-inside</p>
        <ul className="list-inside list-disc rounded-xl p-4 pl-8 text-gray-900 dark:text-gray-200">
          <li>5 cups chopped Porcini mushrooms</li>
          <li>1/2 cup of olive oil</li>
          <li>3lb of celery</li>
        </ul>
      </div>
      <div className="relative">
        <div className="absolute -top-0 -bottom-8 left-8 w-px bg-pink-400/40 sm:-top-8 dark:bg-pink-400/30"></div>
        <p className="mb-3 ml-8 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">list-outside</p>
        <ul className="list-outside list-disc rounded-xl p-4 pl-8 text-gray-900 dark:text-gray-200">
          <li>5 cups chopped Porcini mushrooms</li>
          <li>1/2 cup of olive oil</li>
          <li>3lb of celery</li>
        </ul>
      </div>
    </div>
  }
</Example>

----------------------------------------

TITLE: Using Max-Width to Avoid Undoing Styles in HTML
DESCRIPTION: This HTML snippet shows how to use `max-*` variants to avoid having to undo styles at different breakpoints.  Instead of using `md:sr-only xl:not-sr-only`, use `md:max-xl:sr-only`.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_15

LANGUAGE: html
CODE:
"<div class="md:max-xl:sr-only">
  <!-- ... -->
</div>"

----------------------------------------

TITLE: Using Percentage-Based Max-Width Classes in HTML
DESCRIPTION: Example demonstrating percentage-based maximum widths using classes like max-w-9/10, max-w-3/4, max-w-1/2, and max-w-1/3. These utilities set the element's maximum width as a fraction of its container.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/max-width.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="w-full max-w-9/10 ...">max-w-9/10</div>
<div class="w-full max-w-3/4 ...">max-w-3/4</div>
<div class="w-full max-w-1/2 ...">max-w-1/2</div>
<div class="w-full max-w-1/3 ...">max-w-1/3</div>

----------------------------------------

TITLE: Clearing Left HTML Example - Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates the usage of the `clear-left` utility class in Tailwind CSS. It is used within an `<article>` element containing floated images and a paragraph that needs to clear the left-floated content.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/clear.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
"<article>
  <img class=\"float-left ...\" src=\"/img/snow-mountains.jpg\" />
  <img class=\"float-right ...\" src=\"/img/green-mountains.jpg\" />
  <p class=\"clear-left ...\">Maybe we can live without libraries...</p>
</article>"

----------------------------------------

TITLE: Implementing Responsive Auto Scrolling in HTML
DESCRIPTION: Shows how to implement default browser scrolling behavior using the scroll-auto utility class, with a responsive modifier for medium screens.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-behavior.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:scroll-auto] -->
<html class="scroll-smooth md:scroll-auto">
  <!-- ... -->
</html>

----------------------------------------

TITLE: HTML Background Origin Utilities
DESCRIPTION: These HTML snippets demonstrates the usage of the new `bg-origin-*` utilities in Tailwind CSS to control the origin of the background image.  The `bg-origin-border`, `bg-origin-padding`, and `bg-origin-content` classes set the background origin to the border box, padding box, and content box, respectively.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_21

LANGUAGE: html
CODE:
<div class="border-4 border-dashed bg-origin-border p-4 ..." style="background-image: url(...)">
  Background is rendered under the border
</div>

<div class="border-4 border-dashed bg-origin-padding p-4 ..." style="background-image: url(...)">
  Background is rendered within the border but on top of any padding
</div>

<div class="border-4 border-dashed bg-origin-content p-4 ..." style="background-image: url(...)">
  Background is rendered within any padding and under the content
</div>

----------------------------------------

TITLE: Implementing Scroll Margin with Directional Support in TailwindCSS
DESCRIPTION: Example showing how to use scroll-margin utilities with both left-to-right (LTR) and right-to-left (RTL) text directions in a snap-scrolling image gallery. The scroll-ms-6 class sets the scroll margin for the start edge based on text direction.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-margin.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div dir="ltr">
  <div class="snap-x ...">
    <div class="snap-start scroll-ms-6 ...">
      <img src="/img/vacation-01.jpg"/>
    </div>
    <!-- ... -->
  </div>
</div>

<div dir="rtl">
  <div class="snap-x ...">
    <div class="snap-start scroll-ms-6 ...">
      <img src="/img/vacation-01.jpg"/>
    </div>
    <!-- ... -->
  </div>
</div>

LANGUAGE: jsx
CODE:
<div className="flex w-full snap-x gap-12 overflow-x-auto pb-10" dir="ltr">
  <div className="relative shrink-0 snap-start scroll-ms-6 first:ps-6 last:pr-[calc(100%-21.5rem)]">
    <Stripes border className="absolute start-0 top-0 bottom-0 w-6" />
    <img
      className="relative h-40 w-80 shrink-0 rounded-lg bg-white"
      src="https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80"
    />
  </div>
  <!-- Additional images... -->
</div>

----------------------------------------

TITLE: Displaying Contributors with Repeated Utility Classes in HTML
DESCRIPTION: HTML implementation of a contributors display section using Tailwind CSS utility classes, showing multiple avatar images with the same styling patterns repeated across elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_23

LANGUAGE: html
CODE:
<!-- [!code classes:inline-block,h-12,w-12,rounded-full,ring-2,ring-white] -->
<div>
  <div class="flex items-center space-x-2 text-base">
    <h4 class="font-semibold text-slate-900">Contributors</h4>
    <span class="bg-slate-100 px-2 py-1 text-xs font-semibold text-slate-700 ...">204</span>
  </div>
  <div class="mt-3 flex -space-x-2 overflow-hidden">
    <!-- prettier-ignore -->
    <img class="inline-block h-12 w-12 rounded-full ring-2 ring-white" src="https://images.unsplash.com/photo-1491528323818-fdd1faba62cc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="" />
    <!-- prettier-ignore -->
    <img class="inline-block h-12 w-12 rounded-full ring-2 ring-white" src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="" />
    <!-- prettier-ignore -->
    <img class="inline-block h-12 w-12 rounded-full ring-2 ring-white" src="https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2.25&w=256&h=256&q=80" alt="" />
    <!-- prettier-ignore -->
    <img class="inline-block h-12 w-12 rounded-full ring-2 ring-white" src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="" />
    <!-- prettier-ignore -->
    <img class="inline-block h-12 w-12 rounded-full ring-2 ring-white" src="https://images.unsplash.com/photo-1517365830460-955ce3ccd263?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="" />
  </div>
  <div class="mt-3 text-sm font-medium">
    <a href="#" class="text-blue-500">+ 198 others</a>
  </div>
</div>

----------------------------------------

TITLE: Space Around Content in Grid
DESCRIPTION: Distributes grid items with equal space around each row using place-content-around utility. Creates a 2-column grid with equal spacing around content rows.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-content.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="grid h-48 grid-cols-2 place-content-around gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
</div>

----------------------------------------

TITLE: Implementing Grid Layout with Justify-Items-Stretch in JSX
DESCRIPTION: Example showing how to create a responsive grid layout with stretched items using Tailwind CSS utility classes. The grid contains 6 numbered items with blue backgrounds arranged in 3 columns.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-items.mdx#2025-04-18_snippet_5

LANGUAGE: jsx
CODE:
<div className="grid grid-cols-1">
  <Stripes border className="col-start-1 row-start-1 rounded-lg" />
  <div className="col-start-1 row-start-1 grid grid-cols-3 justify-items-stretch gap-4 font-mono text-sm leading-6 font-bold text-white">
    <div className="flex h-14 items-center justify-center rounded-lg bg-blue-500">01</div>
    <div className="flex h-14 items-center justify-center rounded-lg bg-blue-500">02</div>
    <div className="flex h-14 items-center justify-center rounded-lg bg-blue-500">03</div>
    <div className="flex h-14 items-center justify-center rounded-lg bg-blue-500">04</div>
    <div className="flex h-14 items-center justify-center rounded-lg bg-blue-500">05</div>
    <div className="flex h-14 items-center justify-center rounded-lg bg-blue-500">06</div>
  </div>
</div>

----------------------------------------

TITLE: Displaying Basic Blur Examples - React
DESCRIPTION: This code snippet shows how to implement various blur utilities in a UI with React components. Images with different blur classes ('blur-none', 'blur-sm', 'blur-lg', 'blur-2xl') are displayed to illustrate the effect. Dependencies include React and Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-blur.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
<Figure>
<Example padding={false}>
  {
    <div className="flex scroll-p-8 overflow-scroll sm:block sm:overflow-visible">
      <div className="flex shrink-0 items-center justify-around gap-12 p-8 font-mono font-bold sm:gap-4">
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">blur-none</p>
          <div className="relative blur-none">
            <img
              className="size-24 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">blur-sm</p>
          <div className="relative blur-sm">
            <img
              className="size-24 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">blur-lg</p>
          <div className="relative blur-lg">
            <img
              className="size-24 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">blur-2xl</p>
          <div className="relative blur-2xl">
            <img
              className="size-24 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
      </div>
    </div>
  }
</Example>
</Figure>

----------------------------------------

TITLE: Margin Reset in Preflight CSS
DESCRIPTION: Shows how Preflight removes all default margins from elements to prevent reliance on user-agent stylesheet margins that aren't part of the spacing scale.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_1

LANGUAGE: CSS
CODE:
*,
::after,
::before,
::backdrop,
::file-selector-button {
  margin: 0;
  padding: 0;
}

----------------------------------------

TITLE: Lowercase Text Example
DESCRIPTION: HTML example showing how to use the lowercase utility class in TailwindCSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-transform.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:lowercase] -->
<p class="lowercase">The quick brown fox ...</p>

----------------------------------------

TITLE: HTML Example - font-stretch Percentages
DESCRIPTION: This HTML code shows how to use percentage values with Tailwind CSS's `font-stretch` utility. The paragraphs are styled with `font-stretch-50%`, `font-stretch-100%`, and `font-stretch-150%` classes. These classes adjust the font width by the specified percentage values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-stretch.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<p class="font-stretch-50%">The quick brown fox...</p>
<p class="font-stretch-100%">The quick brown fox...</p>
<p class="font-stretch-150%">The quick brown fox...</p>

----------------------------------------

TITLE: Configuring Font Variation Settings in Tailwind CSS
DESCRIPTION: This code snippet demonstrates how to configure `font-variation-settings` for custom font families in Tailwind CSS. It defines a `fontFamily` in the `theme` section of the `tailwind.config.js` file, specifying both `fontFeatureSettings` and `fontVariationSettings` for the 'Inter var' font.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_11

LANGUAGE: javascript
CODE:
module.exports = {
  theme: {
    fontFamily: {
      sans: [
        "Inter var, sans-serif"
        // [!code highlight:5]
        {
          fontFeatureSettings: '"cv11", "ss01"',
          fontVariationSettings: '"opsz" 32',
        },
      ],
    },
  },
};


----------------------------------------

TITLE: Vue Style Reference Implementation
DESCRIPTION: Shows how to use @reference directive in Vue components to access Tailwind utilities and theme values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_27

LANGUAGE: html
CODE:
<template>
  <h1>Hello world!</h1>
</template>

<style>
  @reference "../../app.css";

  h1 {
    @apply text-2xl font-bold text-red-500;
  }
</style>

----------------------------------------

TITLE: Styling Invalid Inputs with Tailwind CSS
DESCRIPTION: This example shows how to use the invalid variant in Tailwind CSS to style an input when it's invalid. It applies a red border to invalid inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_98

LANGUAGE: html
CODE:
<input required class="border invalid:border-red-500 ..." />

----------------------------------------

TITLE: Object Cover Implementation in HTML
DESCRIPTION: Example showing how to use the object-cover utility to resize an element's content to cover its container while maintaining aspect ratio.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-fit.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<img class="h-48 w-96 object-cover ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Right-aligned Text Example
DESCRIPTION: Shows implementation of right-aligned text using the text-right utility class in TailwindCSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-align.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:text-right] -->
<p class="text-right">So I started to walk into the water...</p>

----------------------------------------

TITLE: Removing Box Shadow with TailwindCSS HTML
DESCRIPTION: Explains how to remove box shadows from elements using Tailwind CSS. Utility classes such as `shadow-none`, `inset-shadow-none`, `ring-0`, and `inset-ring-0` are demonstrated. Requires Tailwind CSS. HTML example shows a div with removed shadow styles, simplifying an element's border appearance.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_14

LANGUAGE: html
CODE:
<!-- [!code classes:shadow-none] -->
<div class="shadow-none ..."></div>

----------------------------------------

TITLE: Customizing Letter Spacing Scale in CSS with Tailwind Theme
DESCRIPTION: Example of customizing the letter spacing scale in Tailwind CSS by defining custom tracking variables with numerical values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/letter-spacing.mdx#2025-04-18_snippet_1

LANGUAGE: css
CODE:
@theme {
  --tracking-1: 0em;
  --tracking-2: 0.025em;
  --tracking-3: 0.05em;
  --tracking-4: 0.1em;
}

----------------------------------------

TITLE: Space Between Content in Grid Layout
DESCRIPTION: Example showing how to distribute grid items with equal space between rows using content-between utility
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-content.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="grid h-56 grid-cols-3 content-between gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
</div>

----------------------------------------

TITLE: Basic Stroke Width Usage Example
DESCRIPTION: Shows basic HTML implementation of stroke width utilities using stroke-1 and stroke-2 classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/stroke-width.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<svg class="stroke-1 ..."></svg>
<svg class="stroke-2 ..."></svg>

----------------------------------------

TITLE: Allowing flex items to shrink in Tailwind CSS
DESCRIPTION: This example demonstrates how to use the `shrink` class in Tailwind CSS to allow a flex item to shrink if necessary. The `shrink` class sets the `flex-shrink` property to `1`, allowing the item to shrink relative to other flex items.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-shrink.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<div class="flex ...">
  <div class="h-14 w-14 flex-none ...">01</div>
  <div class="h-14 w-64 shrink ...">02</div>
  <div class="h-14 w-14 flex-none ...">03</div>
</div>

----------------------------------------

TITLE: Dialog Component Implementation with Improved Overlay
DESCRIPTION: This code snippet shows the implementation of a Dialog component using a new Panel instead of Overlay for improved functionality. The Panel allows closing the dialog by clicking outside of it while maintaining usability during scrolling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2022-05-23-headless-ui-v1-6-tailwind-ui-team-management/index.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<Dialog
  open={isOpen}
  onClose={closeModal}
  className="fixed inset-0 flex items-center justify-center ..."
>
   <Dialog.Overlay className="fixed inset-0 bg-black/25" /> /* [!code --] */
   <div className="fixed inset-0 bg-black/25" /> /* [!code ++] */

   <div className="bg-white shadow-xl rounded-2xl ..."> /* [!code --] */
   <Dialog.Panel className="bg-white shadow-xl rounded-2xl ..."> /* [!code ++] */
    <Dialog.Title>Payment successful</Dialog.Title>
    {/* ... */}
  </div> /* [!code --] */
  </Dialog.Panel> /* [!code ++] */
</Dialog>


----------------------------------------

TITLE: Reversing Child Order with space-x-reverse Utility in HTML
DESCRIPTION: This snippet shows how to use space-x-4 together with space-x-reverse when elements are in reverse order (using flex-row-reverse). The space-x-reverse utility ensures spacing is added to the correct side of each element when direction is reversed.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/margin.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<!-- [!code classes:flex-row-reverse,space-x-4,space-x-reverse] -->
<div class="flex flex-row-reverse space-x-4 space-x-reverse ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Clearing Left Example - Tailwind CSS
DESCRIPTION: This JSX snippet demonstrates the usage of the `clear-left` utility class in Tailwind CSS. It positions a paragraph element below any preceding left-floated elements, ensuring the text doesn't wrap around the floated image.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/clear.mdx#2025-04-18_snippet_1

LANGUAGE: JSX
CODE:
  "<>
      <img
        className=\"float-left mr-6 mb-4 aspect-16/9 w-1/4 rounded-lg object-cover outline -outline-offset-1 outline-black/10\"
        src=\"https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90\"
      />
      <img
        className=\"float-right ml-6 aspect-6/5 w-2/5 rounded-lg object-cover outline -outline-offset-1 outline-black/10\"
        src=\"https://images.unsplash.com/photo-1434394354979-a235cd36269d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1000&h=1000&q=90\"
      />
      <p className=\"clear-left text-justify\">
        Maybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but
        what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding
        drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve
        better? Look. If you think this is about overdue fines and missing books, you'd better think again. This is
        about that kid's right to read a book without getting his mind warped! Or: maybe that turns you on, Seinfeld;
        maybe that's how y'get your kicks. You and your good-time buddies.
      </p>
    </>"

----------------------------------------

TITLE: Custom Font Family Theme Variable
DESCRIPTION: Demonstrates how to add a custom font family theme variable that generates a new font utility class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_4

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --font-poppins: Poppins, sans-serif;
}

----------------------------------------

TITLE: Responsive Blur Design - React
DESCRIPTION: This snippet exemplifies how to apply responsive design principles to blur utilities, allowing images to change blur classes based on screen size. It is useful for ensuring optimal visibility and aesthetic across devices.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-blur.mdx#2025-04-18_snippet_4

LANGUAGE: javascript
CODE:
<ResponsiveDesign
  element="img"
  elementAttributes={{ src: "/img/mountains.jpg" }}
  property="filter: blur()"
  defaultClass="blur-none"
  featuredClass="blur-lg"
/>

----------------------------------------

TITLE: Text Decoration Color with Opacity
DESCRIPTION: Example demonstrating how to apply text decoration colors with opacity modifiers.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-color.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<p>
  I'm Derek, an astro-engineer based in Tattooine. I like to build X-Wings
  at <a class="underline decoration-sky-500/30">My Company, Inc</a>. Outside
  of work, I like to <a class="underline decoration-pink-500/30">watch pod-racing</a>
  and have <a class="underline decoration-indigo-500/30">light-saber</a> fights.
</p>

----------------------------------------

TITLE: Defining Default Color Palette in CSS
DESCRIPTION: This code snippet defines a default color palette using custom properties in CSS. The colors are represented using the oklch color model, which stands for OK Lightness, Chroma, and Hue, offering a perceptually uniform color space. These colors can be easily used to maintain consistency in design themes. There are no specific dependencies for this snippet, though it assumes knowledge of CSS and color models.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_16

LANGUAGE: CSS
CODE:
/* [!code filename:CSS] */
@theme {
  --color-red-50: oklch(0.971 0.013 17.38);
  --color-red-100: oklch(0.936 0.032 17.717);
  --color-red-200: oklch(0.885 0.062 18.334);
  --color-red-300: oklch(0.808 0.114 19.571);
  --color-red-400: oklch(0.704 0.191 22.216);
  --color-red-500: oklch(0.637 0.237 25.331);
  --color-red-600: oklch(0.577 0.245 27.325);
  --color-red-700: oklch(0.505 0.213 27.518);
  --color-red-800: oklch(0.444 0.177 26.899);
  --color-red-900: oklch(0.396 0.141 25.723);
  --color-red-950: oklch(0.258 0.092 26.042);

  --color-orange-50: oklch(0.98 0.016 73.684);
  --color-orange-100: oklch(0.954 0.038 75.164);
  --color-orange-200: oklch(0.901 0.076 70.697);
  --color-orange-300: oklch(0.837 0.128 66.29);
  --color-orange-400: oklch(0.75 0.183 55.934);
  --color-orange-500: oklch(0.705 0.213 47.604);
  --color-orange-600: oklch(0.646 0.222 41.116);
  --color-orange-700: oklch(0.553 0.195 38.402);
  --color-orange-800: oklch(0.47 0.157 37.304);
  --color-orange-900: oklch(0.408 0.123 38.172);
  --color-orange-950: oklch(0.266 0.079 36.259);

  --color-amber-50: oklch(0.987 0.022 95.277);
  --color-amber-100: oklch(0.962 0.059 95.617);
  --color-amber-200: oklch(0.924 0.12 95.746);
  --color-amber-300: oklch(0.879 0.169 91.605);
  --color-amber-400: oklch(0.828 0.189 84.429);
  --color-amber-500: oklch(0.769 0.188 70.08);
  --color-amber-600: oklch(0.666 0.179 58.318);
  --color-amber-700: oklch(0.555 0.163 48.998);
  --color-amber-800: oklch(0.473 0.137 46.201);
  --color-amber-900: oklch(0.414 0.112 45.904);
  --color-amber-950: oklch(0.279 0.077 45.635);

  --color-yellow-50: oklch(0.987 0.026 102.212);
  --color-yellow-100: oklch(0.973 0.071 103.193);
  --color-yellow-200: oklch(0.945 0.129 101.54);
  --color-yellow-300: oklch(0.905 0.182 98.111);
  --color-yellow-400: oklch(0.852 0.199 91.936);
  --color-yellow-500: oklch(0.795 0.184 86.047);
  --color-yellow-600: oklch(0.681 0.162 75.834);
  --color-yellow-700: oklch(0.554 0.135 66.442);
  --color-yellow-800: oklch(0.476 0.114 61.907);
  --color-yellow-900: oklch(0.421 0.095 57.708);
  --color-yellow-950: oklch(0.286 0.066 53.813);

  --color-lime-50: oklch(0.986 0.031 120.757);
  --color-lime-100: oklch(0.967 0.067 122.328);
  --color-lime-200: oklch(0.938 0.127 124.321);
  --color-lime-300: oklch(0.897 0.196 126.665);
  --color-lime-400: oklch(0.841 0.238 128.85);
  --color-lime-500: oklch(0.768 0.233 130.85);
  --color-lime-600: oklch(0.648 0.2 131.684);
  --color-lime-700: oklch(0.532 0.157 131.589);
  --color-lime-800: oklch(0.453 0.124 130.933);
  --color-lime-900: oklch(0.405 0.101 131.063);
  --color-lime-950: oklch(0.274 0.072 132.109);

  --color-green-50: oklch(0.982 0.018 155.826);
  --color-green-100: oklch(0.962 0.044 156.743);
  --color-green-200: oklch(0.925 0.084 155.995);
  --color-green-300: oklch(0.871 0.15 154.449);
  --color-green-400: oklch(0.792 0.209 151.711);
  --color-green-500: oklch(0.723 0.219 149.579);
  --color-green-600: oklch(0.627 0.194 149.214);
  --color-green-700: oklch(0.527 0.154 150.069);
  --color-green-800: oklch(0.448 0.119 151.328);
  --color-green-900: oklch(0.393 0.095 152.535);
  --color-green-950: oklch(0.266 0.065 152.934);

  --color-emerald-50: oklch(0.979 0.021 166.113);
  --color-emerald-100: oklch(0.95 0.052 163.051);
  --color-emerald-200: oklch(0.905 0.093 164.15);
  --color-emerald-300: oklch(0.845 0.143 164.978);
  --color-emerald-400: oklch(0.765 0.177 163.223);
  --color-emerald-500: oklch(0.696 0.17 162.48);
  --color-emerald-600: oklch(0.596 0.145 163.225);
  --color-emerald-700: oklch(0.508 0.118 165.612);
  --color-emerald-800: oklch(0.432 0.095 166.913);
  --color-emerald-900: oklch(0.378 0.077 168.94);
  --color-emerald-950: oklch(0.262 0.051 172.552);

  --color-teal-50: oklch(0.984 0.014 180.72);
  --color-teal-100: oklch(0.953 0.051 180.801);
  --color-teal-200: oklch(0.91 0.096 180.426);
  --color-teal-300: oklch(0.855 0.138 181.071);
  --color-teal-400: oklch(0.777 0.152 181.912);
  --color-teal-500: oklch(0.704 0.14 182.503);
  --color-teal-600: oklch(0.6 0.118 184.704);
  --color-teal-700: oklch(0.511 0.096 186.391);
  --color-teal-800: oklch(0.437 0.078 188.216);
  --color-teal-900: oklch(0.386 0.063 188.416);
  --color-teal-950: oklch(0.277 0.046 192.524);

  --color-cyan-50: oklch(0.984 0.019 200.873);
  --color-cyan-100: oklch(0.956 0.045 203.388);
  --color-cyan-200: oklch(0.917 0.08 205.041);
  --color-cyan-300: oklch(0.865 0.127 207.078);
  --color-cyan-400: oklch(0.789 0.154 211.53);
  --color-cyan-500: oklch(0.715 0.143 215.221);
  --color-cyan-600: oklch(0.609 0.126 221.723);
  --color-cyan-700: oklch(0.52 0.105 223.128);
  --color-cyan-800: oklch(0.45 0.085 224.283);
  --color-cyan-900: oklch(0.398 0.07 227.392);
  --color-cyan-950: oklch(0.302 0.056 229.695);

  --color-sky-50: oklch(0.977 0.013 236.62);
  --color-sky-100: oklch(0.951 0.026 236.824);
  --color-sky-200: oklch(0.901 0.058 230.902);
  --color-sky-300: oklch(0.828 0.111 230.318);
  --color-sky-400: oklch(0.746 0.16 232.661);
  --color-sky-500: oklch(0.685 0.169 237.323);
  --color-sky-600: oklch(0.588 0.158 241.966);
  --color-sky-700: oklch(0.5 0.134 242.749);
  --color-sky-800: oklch(0.443 0.11 240.79);
  --color-sky-900: oklch(0.391 0.09 240.876);
  --color-sky-950: oklch(0.293 0.066 243.157);

  --color-blue-50: oklch(0.97 0.014 254.604);
  --color-blue-100: oklch(0.932 0.032 255.585);
  --color-blue-200: oklch(0.882 0.059 254.128);
  --color-blue-300: oklch(0.809 0.105 251.813);
  --color-blue-400: oklch(0.707 0.165 254.624);
  --color-blue-500: oklch(0.623 0.214 259.815);
  --color-blue-600: oklch(0.546 0.245 262.881);
  --color-blue-700: oklch(0.488 0.243 264.376);
  --color-blue-800: oklch(0.424 0.199 265.638);
  --color-blue-900: oklch(0.379 0.146 265.522);
  --color-blue-950: oklch(0.282 0.091 267.935);

  --color-indigo-50: oklch(0.962 0.018 272.314);
  --color-indigo-100: oklch(0.93 0.034 272.788);
  --color-indigo-200: oklch(0.87 0.065 274.039);
  --color-indigo-300: oklch(0.785 0.115 274.713);
  --color-indigo-400: oklch(0.673 0.182 276.935);
  --color-indigo-500: oklch(0.585 0.233 277.117);
  --color-indigo-600: oklch(0.511 0.262 276.966);
  --color-indigo-700: oklch(0.457 0.24 277.023);
  --color-indigo-800: oklch(0.398 0.195 277.366);
  --color-indigo-900: oklch(0.359 0.144 278.697);
  --color-indigo-950: oklch(0.257 0.09 281.288);

  --color-violet-50: oklch(0.969 0.016 293.756);
  --color-violet-100: oklch(0.943 0.029 294.588);
  --color-violet-200: oklch(0.894 0.057 293.283);
  --color-violet-300: oklch(0.811 0.111 293.571);
  --color-violet-400: oklch(0.702 0.183 293.541);
  --color-violet-500: oklch(0.606 0.25 292.717);
  --color-violet-600: oklch(0.541 0.281 293.009);
  --color-violet-700: oklch(0.491 0.27 292.581);
  --color-violet-800: oklch(0.432 0.232 292.759);
  --color-violet-900: oklch(0.38 0.189 293.745);
  --color-violet-950: oklch(0.283 0.141 291.089);

  --color-purple-50: oklch(0.977 0.014 308.299);
  --color-purple-100: oklch(0.946 0.033 307.174);
  --color-purple-200: oklch(0.902 0.063 306.703);
  --color-purple-300: oklch(0.827 0.119 306.383);
  --color-purple-400: oklch(0.714 0.203 305.504);
  --color-purple-500: oklch(0.627 0.265 303.9);
  --color-purple-600: oklch(0.558 0.288 302.321);
  --color-purple-700: oklch(0.496 0.265 301.924);
  --color-purple-800: oklch(0.438 0.218 303.724);
  --color-purple-900: oklch(0.381 0.176 304.987);
  --color-purple-950: oklch(0.291 0.149 302.717);

  --color-fuchsia-50: oklch(0.977 0.017 320.058);
  --color-fuchsia-100: oklch(0.952 0.037 318.852);
  --color-fuchsia-200: oklch(0.903 0.076 319.62);
  --color-fuchsia-300: oklch(0.833 0.145 321.434);
  --color-fuchsia-400: oklch(0.74 0.238 322.16);
  --color-fuchsia-500: oklch(0.667 0.295 322.15);
  --color-fuchsia-600: oklch(0.591 0.293 322.896);
  --color-fuchsia-700: oklch(0.518 0.253 323.949);
  --color-fuchsia-800: oklch(0.452 0.211 324.591);
  --color-fuchsia-900: oklch(0.401 0.17 325.612);
  --color-fuchsia-950: oklch(0.293 0.136 325.661);

  --color-pink-50: oklch(0.971 0.014 343.198);
  --color-pink-100: oklch(0.948 0.028 342.258);
  --color-pink-200: oklch(0.899 0.061 343.231);
  --color-pink-300: oklch(0.823 0.12 346.018);
  --color-pink-400: oklch(0.718 0.202 349.761);
  --color-pink-500: oklch(0.656 0.241 354.308);
  --color-pink-600: oklch(0.592 0.249 0.584);
  --color-pink-700: oklch(0.525 0.223 3.958);
  --color-pink-800: oklch(0.459 0.187 3.815);
  --color-pink-900: oklch(0.408 0.153 2.432);
  --color-pink-950: oklch(0.284 0.109 3.907);

  --color-rose-50: oklch(0.969 0.015 12.422);
  --color-rose-100: oklch(0.941 0.03 12.58);
  --color-rose-200: oklch(0.892 0.058 10.001);
  --color-rose-300: oklch(0.81 0.117 11.638);
  --color-rose-400: oklch(0.712 0.194 13.428);
  --color-rose-500: oklch(0.645 0.246 16.439);
  --color-rose-600: oklch(0.586 0.253 17.585);
  --color-rose-700: oklch(0.514 0.222 16.935);
  --color-rose-800: oklch(0.455 0.188 13.697);
  --color-rose-900: oklch(0.41 0.159 10.272);
  --color-rose-950: oklch(0.271 0.105 12.094);

  --color-slate-50: oklch(0.984 0.003 247.858);
  --color-slate-100: oklch(0.968 0.007 247.896);
  --color-slate-200: oklch(0.929 0.013 255.508);
  --color-slate-300: oklch(0.869 0.022 252.894);
  --color-slate-400: oklch(0.704 0.04 256.788);
  --color-slate-500: oklch(0.554 0.046 257.417);
  --color-slate-600: oklch(0.446 0.043 257.281);
  --color-slate-700: oklch(0.372 0.044 257.287);
  --color-slate-800: oklch(0.279 0.041 260.031);
  --color-slate-900: oklch(0.208 0.042 265.755);
  --color-slate-950: oklch(0.129 0.042 264.695);

  --color-gray-50: oklch(0.985 0.002 247.839);
  --color-gray-100: oklch(0.967 0.003 264.542);
  --color-gray-200: oklch(0.928 0.006 264.531);
  --color-gray-300: oklch(0.872 0.01 258.338);

----------------------------------------

TITLE: Safe Center Alignment with justify-items-center-safe in HTML
DESCRIPTION: Example showing how to use the justify-items-center-safe utility which centers items normally but falls back to start alignment when space is limited.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-items.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code filename:justify-items-center-safe] -->
<!-- [!code classes:justify-items-center-safe] -->
<div class="grid grid-flow-col justify-items-center-safe ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Aligning to Top with Tailwind CSS
DESCRIPTION: Shows the usage of the 'align-top' utility to align the top of an element and its descendants with the top of the entire line.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/vertical-align.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<span class="inline-block align-top">The quick brown fox...</span>

----------------------------------------

TITLE: Importing and Setting Up Tailwind CSS Components in JavaScript
DESCRIPTION: This JavaScript snippet imports components necessary for representing an API table and responsive design elements. The components are used to demonstrate Tailwind CSS break-after utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/break-after.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { ApiTable } from \"@/components/api-table.tsx\";\nimport { ResponsiveDesign } from \"@/components/content.tsx\";\n\nexport const title = \"break-after\";\nexport const description = \"Utilities for controlling how a column or page should break after an element.\";

LANGUAGE: JavaScript
CODE:
<ApiTable\n  rows={[\n    [\"break-after-auto\", \"break-after: auto;\"],\n    [\"break-after-avoid\", \"break-after: avoid;\"],\n    [\"break-after-all\", \"break-after: all;\"],\n    [\"break-after-avoid-page\", \"break-after: avoid-page;\"],\n    [\"break-after-page\", \"break-after: page;\"],\n    [\"break-after-left\", \"break-after: left;\"],\n    [\"break-after-right\", \"break-after: right;\"],\n    [\"break-after-column\", \"break-after: column;\"]\n  ]}\n/>

----------------------------------------

TITLE: HTML Structure for Backdrop Sepia Demonstration
DESCRIPTION: Shows the HTML structure used in the examples to demonstrate various backdrop sepia effects on images. Each div applies a different backdrop-sepia class for visual representation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-sepia.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<!-- [!code classes:backdrop-sepia-0,backdrop-sepia-50,backdrop-sepia] -->
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-sepia-0 ..."></div>
</div>
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-sepia-50 ..."></div>
</div>
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-sepia ..."></div>
</div>

----------------------------------------

TITLE: Using @apply with Complex Classes in CSS
DESCRIPTION: This CSS snippet illustrates the use of Tailwind's '@apply' directive to include multiple classes, allowing for better control over responsive and pseudo-variants, enhancing the styling capabilities of Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_8

LANGUAGE: css
CODE:
.btn {
  @apply bg-indigo hover:bg-indigo-700 sm:text-lg;
}

----------------------------------------

TITLE: Styling Accordions with details-content Variant in Tailwind CSS
DESCRIPTION: Demonstrates using the new details-content variant to style the content container of a <details> element, allowing for better positioning of the content relative to the summary element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_19

LANGUAGE: html
CODE:
<details class="rounded-lg border border-transparent p-6 details-content:mt-3 details-content:-ml-0.5" open>
  <summary class="text-sm leading-6 font-semibold text-gray-900 select-none dark:text-white">
    Why do they call it Ovaltine?
  </summary>
  <div class="border-gray-200 bg-gray-50 py-3 pl-3 dark:border-white/10 dark:bg-gray-800/50 ...">
    <p>The mug is round. The jar is round. They should call it Roundtine.</p>
  </div>
</details>

----------------------------------------

TITLE: Basic example of isolation utility in HTML
DESCRIPTION: Shows how to use the isolate utility class to create a new stacking context for an element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/isolation.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:isolate] -->
<div class="isolate ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Applying Radial Mask Positions with Tailwind CSS in HTML
DESCRIPTION: This code snippet demonstrates the application of Tailwind CSS classes to position radial masks at various alignments on an HTML element. Dependencies include Tailwind CSS setup. Each HTML `div` element showcases a different radial mask position using predefined utility classes like `mask-radial-at-top-left` and `mask-radial-at-bottom-right`. It requires a valid Tailwind CSS configuration and appropriate inclusion of Tailwind directives. The snippet expects no inputs as it only displays static examples, and the default output is the rendered HTML with the specified radial mask positions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_13

LANGUAGE: HTML
CODE:
<div class="mask-radial-at-top-left mask-radial-from-100% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-radial-at-top mask-radial-from-100% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-radial-at-top-right mask-radial-from-100% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-radial-at-left mask-radial-from-100% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-radial-at-center mask-radial-from-100% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-radial-at-right mask-radial-from-100% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-radial-at-bottom-left mask-radial-from-100% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-radial-at-bottom mask-radial-from-100% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-radial-at-bottom-right mask-radial-from-100% bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Safe End Alignment with justify-items-end-safe in HTML
DESCRIPTION: Example showing how to use the justify-items-end-safe utility which aligns items to the end normally but falls back to start alignment when space is limited.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-items.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code filename:justify-items-end-safe] -->
<!-- [!code classes:justify-items-end-safe] -->
<div class="grid grid-flow-col justify-items-end-safe ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Outline Color with Opacity Modifiers in Tailwind CSS
DESCRIPTION: HTML example showing how to control the opacity of outline colors using Tailwind's opacity modifiers with the format outline-color/opacity-value, demonstrating 100%, 75%, and 50% opacity levels.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/outline-color.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code word:/100] -->
<!-- [!code word:/75] -->
<!-- [!code word:/50] -->
<button class="outline-2 outline-blue-500/100 ...">Button A</button>
<button class="outline-2 outline-blue-500/75 ...">Button B</button>
<button class="outline-2 outline-blue-500/50 ...">Button C</button>

----------------------------------------

TITLE: Applying Image Mask with Tailwind CSS
DESCRIPTION: Demonstrates how to use the mask-[<value>] syntax to set a mask image on an element using Tailwind CSS. The example shows an image masked with a scribble pattern.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_6

LANGUAGE: HTML
CODE:
<div class="mask-[url(/img/scribble.png)] bg-[url(/img/mountains.jpg)] ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: HTML Example of Invert Filter Classes
DESCRIPTION: Demonstrates different invert filter classes applied to image elements with various inversion levels
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-invert.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:invert-0,invert-20,invert] -->
<img class="invert-0" src="/img/mountains.jpg" />
<img class="invert-20" src="/img/mountains.jpg" />
<img class="invert" src="/img/mountains.jpg" />

----------------------------------------

TITLE: CSS Import Structure with Built-in PostCSS Support
DESCRIPTION: Demonstrates how to organize CSS with imports using the built-in postcss-import support in the Tailwind CLI.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_1

LANGUAGE: css
CODE:
@import "tailwindcss/base";
/* [!code highlight:2] */
@import "./select2-theme.css";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

----------------------------------------

TITLE: Overriding Responsive Image Constraints in HTML
DESCRIPTION: Demonstrates how to override Preflight's responsive image constraints using Tailwind's max-w-none utility class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_11

LANGUAGE: HTML
CODE:
<img class="max-w-none" src="..." alt="..." />

----------------------------------------

TITLE: Vertical Padding Example in HTML
DESCRIPTION: Example of applying vertical padding to an element using the py-8 utility class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/padding.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code classes:py-8] -->
<div class="py-8 ...">py-8</div>

----------------------------------------

TITLE: Clearing Both Example - Tailwind CSS
DESCRIPTION: This JSX snippet demonstrates the usage of the `clear-both` utility class. It ensures the paragraph element is positioned below both left and right floated elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/clear.mdx#2025-04-18_snippet_5

LANGUAGE: JSX
CODE:
  "<>
      <img
        className=\"float-left mr-6 mb-4 aspect-16/9 w-1/4 rounded-lg object-cover outline -outline-offset-1 outline-black/10\"
        src=\"https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=formathttps://images.unsplash.com/photo-1454496522488-7a8e488e8606?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1000&h=1000&q=90\"
      />
      <img
        className=\"float-right mb-4 ml-6 aspect-6/5 w-2/5 rounded-lg object-cover outline -outline-offset-1 outline-black/10\"
        src=\"https://images.unsplash.com/photo-1434394354979-a235cd36269d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1000&h=1000&q=90\"
      />
      <p className=\"clear-both text-justify\">
        Maybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but
        what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding
        drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve
        better? Look. If you think this is about overdue fines and missing books, you'd better think again. This is
        about that kid's right to read a book without getting his mind warped! Or: maybe that turns you on, Seinfeld;
        maybe that's how y'get your kicks. You and your good-time buddies.
      </p>
    </>"

----------------------------------------

TITLE: Basic Line Height Example in HTML with Tailwind CSS
DESCRIPTION: Example showing how to use font size utilities like text-base/6, text-base/7, and text-base/8 to set the font size and line height of paragraphs simultaneously.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/line-height.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<p class="text-base/6 ...">So I started to walk into the water...</p>
<p class="text-base/7 ...">So I started to walk into the water...</p>
<p class="text-base/8 ...">So I started to walk into the water...</p>

----------------------------------------

TITLE: Applying nth-last-of-type Styles in Svelte with Tailwind CSS
DESCRIPTION: This example shows how to use the nth-last-of-type variant in Tailwind CSS within a Svelte component. It applies specific margin styles to elements at certain positions from the end.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_88

LANGUAGE: svelte
CODE:
<nav>
  <img src="/logo.svg" alt="Vandelay Industries" />
  {#each links as link}
    <a href="#" class="mx-2 nth-last-of-type-3:mx-6 nth-last-of-type-[3n+1]:mx-7 ...">
      <!-- ... -->
    </a>
  {/each}
  <button>More</button>
</nav>

----------------------------------------

TITLE: Rendering API Table for Transform Utilities in Tailwind CSS
DESCRIPTION: Uses the ApiTable component to display a table of transform utility classes and their corresponding CSS properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transform.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["transform-(<custom-property>)", "transform: var(<custom-property>);"],
    ["transform-[<value>]", "transform: <value>;"],
    ["transform-none", "transform: none;"],
    [
      "transform-gpu",
      "transform: translateZ(0) var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);",
    ],
    [
      "transform-cpu",
      "transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);",
    ],
  ]}
/>

----------------------------------------

TITLE: Theme Function with Color Opacity Adjustment
DESCRIPTION: Shows how to use the new opacity modifier with the theme() function to adjust color opacity in custom CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_4

LANGUAGE: css
CODE:
.select2-dropdown {
  border-radius: theme(borderRadius.lg);
  /* [!code highlight:2] */
  background-color: theme(colors.gray.100 / 50%);
  color: theme(colors.gray.900);
}
/* ... */

----------------------------------------

TITLE: Normal Wrapping Example
DESCRIPTION: HTML example showing the wrap-normal utility that only breaks text at natural wrapping points.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overflow-wrap.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<p class="wrap-normal">The longest word in any of the major...</p>

----------------------------------------

TITLE: Interactive Example Component
DESCRIPTION: React component implementation showing various opacity levels with styled buttons and labels.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/opacity.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<div className="flex flex-col items-center justify-center gap-8 text-sm leading-6 font-bold text-white sm:flex-row sm:gap-16">
  <div className="flex shrink-0 flex-col items-center">
    <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">opacity-100</p>
    <button className="rounded-md bg-indigo-500 px-4 py-2 text-sm font-semibold text-white opacity-100">
      Button A
    </button>
  </div>
  <div className="flex shrink-0 flex-col items-center">
    <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">opacity-75</p>
    <button className="rounded-md bg-indigo-500 px-4 py-2 text-sm font-semibold text-white opacity-75">
      Button B
    </button>
  </div>
  <div className="flex shrink-0 flex-col items-center">
    <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">opacity-50</p>
    <button className="rounded-md bg-indigo-500 px-4 py-2 text-sm font-semibold text-white opacity-50">
      Button C
    </button>
  </div>
  <div className="flex shrink-0 flex-col items-center">
    <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">opacity-25</p>
    <button className="rounded-md bg-indigo-500 px-4 py-2 text-sm font-semibold text-white opacity-25">
      Button D
    </button>
  </div>
</div>

----------------------------------------

TITLE: Defining Page Metadata for Transition Delay Documentation
DESCRIPTION: Sets the title and description for the transition-delay utility documentation page.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-delay.mdx#2025-04-18_snippet_1

LANGUAGE: JavaScript
CODE:
export const title = "transition-delay";
export const description = "Utilities for controlling the delay of CSS transitions.";

----------------------------------------

TITLE: Using Container Scale for Max-Width in HTML
DESCRIPTION: Example showing how to use container scale utilities like max-w-md to set an element to a fixed maximum width based on the container scale, which provides predefined width constraints.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/max-width.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="max-w-md ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Clear Property API Table - Tailwind CSS
DESCRIPTION: This code defines the Tailwind CSS `clear` property API table. It lists the available `clear` utilities and their corresponding CSS declarations, such as `clear-left`, `clear-right`, `clear-both`, `clear-start`, `clear-end`, and `clear-none`.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/clear.mdx#2025-04-18_snippet_0

LANGUAGE: JSX
CODE:
"<ApiTable
  rows={[
    ["clear-left", "clear: left;"],
    ["clear-right", "clear: right;"],
    ["clear-both", "clear: both;"],
    ["clear-start", "clear: inline-start;"],
    ["clear-end", "clear: inline-end;"],
    ["clear-none", "clear: none;"],
  ]}
/>"

----------------------------------------

TITLE: Demonstrating Break Keep Word Break in Tailwind CSS
DESCRIPTION: Shows how to use the break-keep utility class to prevent line breaks in Chinese/Japanese/Korean (CJK) text.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/word-break.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<!-- [!code classes:break-keep] -->
<p class="break-keep">抗衡不屈不挠...</p>

----------------------------------------

TITLE: Using Custom Transform Values in Tailwind CSS
DESCRIPTION: Utilizes the UsingACustomValue component to demonstrate how to apply a custom transform value using Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transform.mdx#2025-04-18_snippet_5

LANGUAGE: jsx
CODE:
<UsingACustomValue utility="transform" value="matrix(1,2,3,4,5,6)" />

----------------------------------------

TITLE: Using Custom Font in HTML with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use a custom font defined in the extended theme within HTML markup.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_11

LANGUAGE: html
CODE:
<p class="font-script">This will use the Great Vibes font family.</p>

----------------------------------------

TITLE: Changing Inset Ring Color with TailwindCSS HTML
DESCRIPTION: Illustrates the customization of inset ring colors using Tailwind CSS utilities `inset-ring-blue-500` and `inset-ring-blue-500/50`. Requires Tailwind CSS. HTML buttons with styled inset rings demonstrate color application, enhancing UI design possibilities with colored accents.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-shadow.mdx#2025-04-18_snippet_13

LANGUAGE: html
CODE:
<!-- [!code classes:inset-ring-blue-500,inset-ring-blue-500/50] -->
<button class="inset-ring-2 inset-ring-blue-500 ...">Subscribe</button>
<button class="inset-ring-2 inset-ring-blue-500/50 ...">Subscribe</button>

----------------------------------------

TITLE: Normal Case Text Example
DESCRIPTION: HTML example showing how to use the normal-case utility class in TailwindCSS to reset text casing.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-transform.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:normal-case] -->
<p class="normal-case">The quick brown fox ...</p>

----------------------------------------

TITLE: Demonstrating Basic Outline Style Utilities in HTML
DESCRIPTION: HTML code snippet showing the usage of Tailwind CSS outline style utilities on button elements, including solid, dashed, dotted, and double outline styles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/outline-style.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<button class="outline-2 outline-offset-2 outline-solid ...">Button A</button>
<button class="outline-2 outline-offset-2 outline-dashed ...">Button B</button>
<button class="outline-2 outline-offset-2 outline-dotted ...">Button C</button>
<button class="outline-3 outline-offset-2 outline-double ...">Button D</button>

----------------------------------------

TITLE: Using Logical Properties TailwindCSS HTML
DESCRIPTION: Shows how to apply 'float-start' and 'float-end' utilities in TailwindCSS using logical properties to align content based on text direction. Dependencies: TailwindCSS. Key parameters: dir attribute and float-start utility. Inputs: HTML elements with class and dir attributes. Outputs: Elements floated logically based on direction.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/float.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code word:dir="rtl"] -->
<!-- [!code classes:float-start] -->
<article>
  <img class="float-start ..." src="/img/mountains.jpg" />
  <p>Maybe we can live without libraries, people like you and me. ...</p>
</article>

<article dir="rtl">
  <img class="float-start ..." src="/img/mountains.jpg" />
  <p>... ربما يمكننا العيش بدون مكتبات، أشخاص مثلي ومثلك. ربما. بالتأكيد</p>
</article>

----------------------------------------

TITLE: Using justify-self-auto with Tailwind CSS
DESCRIPTION: Example showing how to use the justify-self-auto utility to align a grid item based on the value of the grid's justify-items property.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-self.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- [!code classes:justify-self-auto] -->
<div class="grid justify-items-stretch ...">
  <!-- ... -->
  <div class="justify-self-auto ...">02</div>
  <!-- ... -->
</div>

----------------------------------------

TITLE: Rendering Font-Style API Table in React
DESCRIPTION: This React component usage provides a table with Tailwind CSS classes for controlling text style, with two rows: `italic` for italic text and `not-italic` for normal text. It highlights how to use the `ApiTable` component to render these options.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-style.mdx#2025-04-18_snippet_0

LANGUAGE: tsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

export const title = "font-style";
export const description = "Utilities for controlling the style of text.";

<ApiTable
  rows={[
    ["italic", "font-style: italic;"],
    ["not-italic", "font-style: normal;"]
  ]}
/>

----------------------------------------

TITLE: Stacked Container Query Ranges
DESCRIPTION: This HTML code shows how to stack `@min-*` and `@max-*` variants to define container query ranges in Tailwind CSS v4.0. `@min-md:@max-xl:hidden` will hide the element when the container width is between medium and extra large.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_13

LANGUAGE: html
CODE:
<!-- [!code filename:HTML] -->
<!-- [!code classes:@container,@min-md:@max-xl:hidden] -->
<div class="@container">
  <div class="flex @min-md:@max-xl:hidden">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Using Logical Properties for Scroll Padding in Different Text Directions
DESCRIPTION: Demonstrates using scroll-ps-6 (scroll-padding-inline-start) utility with both LTR and RTL text directions to maintain consistent padding regardless of text direction.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-padding.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code word:dir="ltr"] -->
<!-- [!code word:dir="rtl"] -->
<!-- [!code classes:scroll-ps-6] -->
<div dir="ltr">
  <div class="snap-x scroll-ps-6 ...">
    <!-- ... -->
  </div>
</div>

<div dir="rtl">
  <div class="snap-x scroll-ps-6 ...">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: HTML Border Width Example
DESCRIPTION: HTML representation of Tailwind CSS border width utility classes
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-width.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="border border-indigo-600 ..."></div>
<div class="border-2 border-indigo-600 ..."></div>
<div class="border-4 border-indigo-600 ..."></div>
<div class="border-8 border-indigo-600 ..."></div>

----------------------------------------

TITLE: Responsive Hue-Rotate Filter - JSX
DESCRIPTION: Demonstrates the use of responsive design principles with hue-rotate utilities, showcasing how class assignments can adapt based on screen size, ensuring consistent visual styling across devices.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-hue-rotate.mdx#2025-04-18_snippet_4

LANGUAGE: jsx
CODE:
<ResponsiveDesign
  element="img"
  elementAttributes={{ src: "/img/mountains.jpg" }}
  property="filter: hue-rotate()"
  defaultClass="hue-rotate-60"
  featuredClass="hue-rotate-0"
/>

----------------------------------------

TITLE: Custom Breakpoint Configuration
DESCRIPTION: Demonstrates resetting all default breakpoints and defining new custom breakpoints from scratch.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_10

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --breakpoint-*: initial;
  --breakpoint-tablet: 40rem;
  --breakpoint-laptop: 64rem;
  --breakpoint-desktop: 80rem;
}

----------------------------------------

TITLE: Removing Text Decoration in HTML
DESCRIPTION: This example demonstrates how to use the 'no-underline' utility class in Tailwind CSS to remove text decoration.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-line.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:no-underline] -->
<p class="no-underline">The quick brown fox...</p>

----------------------------------------

TITLE: Using Fixed Height Utilities in HTML with Tailwind CSS
DESCRIPTION: Example of using h-<number> utilities like h-24 and h-64 to set elements to fixed heights based on the spacing scale.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/height.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<div class="h-96 ...">h-96</div>
<div class="h-80 ...">h-80</div>
<div class="h-64 ...">h-64</div>
<div class="h-48 ...">h-48</div>
<div class="h-40 ...">h-40</div>
<div class="h-32 ...">h-32</div>
<div class="h-24 ...">h-24</div>

----------------------------------------

TITLE: Using Box-Content Utility in Tailwind CSS
DESCRIPTION: Shows usage of the 'box-content' utility to exclude borders and padding from the element's specified dimensions. Use this for layouts where you want the size of the outlined element to grow beyond set dimensions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-sizing.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="box-content size-32 border-4 p-4 ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Hover State Text Decoration Color
DESCRIPTION: Example showing how to apply text decoration color on hover state using TailwindCSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-color.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<p>The <a href="..." class="underline hover:decoration-pink-500 ...">quick brown fox</a> jumps over the lazy dog.</p>

----------------------------------------

TITLE: Display Block for Media Elements in Preflight CSS
DESCRIPTION: Shows how Preflight sets replaced elements like images, SVGs, and videos to display:block by default to avoid unexpected alignment issues.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_8

LANGUAGE: CSS
CODE:
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  vertical-align: middle;
}

----------------------------------------

TITLE: Aligning Items with 'items-baseline' Utility
DESCRIPTION: This HTML snippet demonstrates the 'items-baseline' utility that aligns items so that the baselines of each item align with the others. This example positions items within a flex container independently to achieve consistent baseline alignment.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-items.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<div class="flex items-baseline ...">
  <div class="pt-2 pb-6">01</div>
  <div class="pt-8 pb-12">02</div>
  <div class="pt-12 pb-4">03</div>
</div>

----------------------------------------

TITLE: Adapting Design with Tailwind CSS Prefers-Contrast
DESCRIPTION: This snippet demonstrates how to implement prefers-contrast adjustments in a form using Tailwind CSS. It utilizes new contrast variants to enhance accessibility for users who prefer higher contrast settings. The form includes a social security number input with styles that change under different contrast settings.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_16

LANGUAGE: JavaScript
CODE:
{
  <div className="mx-auto max-w-sm bg-white px-6 pt-6 pb-4 shadow">
    <form>
      <div>
        <label htmlFor="contrast-example" className="block text-sm font-medium text-slate-700">
          Social Security Number
        </label>
        <div className="mt-1">
          <input
            type="text"
            name="contrast-example"
            id="contrast-example"
            className="block w-full rounded-md border border-slate-200 bg-white px-3 py-2 placeholder-slate-400 shadow-sm focus:border-sky-500 focus:ring-1 focus:ring-sky-500 focus:outline-none contrast-more:border-slate-400 contrast-more:placeholder-slate-500 sm:text-sm"
            placeholder="000-00-0000"
          />
          <p className="mt-2 text-sm text-slate-600 opacity-10 contrast-more:opacity-100">
            <>We need this to steal your identity.</>
          </p>
        </div>
      </div>
    </form>
  </div>
}

----------------------------------------

TITLE: Using justify-self-end-safe with Tailwind CSS
DESCRIPTION: Example showing how to use the justify-self-end-safe utility which aligns items to the end but falls back to start when space is limited.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-self.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<!-- [!code filename:justify-self-end-safe] -->
<!-- [!code classes:justify-self-end-safe] -->
<div class="grid justify-items-stretch ...">
  <!-- ... -->
  <div class="justify-self-end-safe ...">02</div>
  <!-- ... -->
</div>

----------------------------------------

TITLE: Demonstrating Normal White-space in Tailwind CSS
DESCRIPTION: This HTML snippet demonstrates the use of the 'whitespace-normal' utility class in Tailwind CSS. It shows how text wraps normally within an element, with newlines and spaces collapsed.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/white-space.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<!-- [!code classes:whitespace-normal] -->
<!-- prettier-ignore -->
<p class="whitespace-normal">Hey everyone!

It's almost 2022       and we still don't know if there             are aliens living among us, or do we? Maybe the person writing this is an alien.

You will never know.</p>

----------------------------------------

TITLE: Rendering API Table for List Style Position Utilities
DESCRIPTION: Displays an API table showing the list-inside and list-outside utilities with their corresponding CSS properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/list-style-position.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["list-inside", "list-style-position: inside;"],
    ["list-outside", "list-style-position: outside;"],
  ]}
/>

----------------------------------------

TITLE: Using CSS Variables in Vue Components - HTML
DESCRIPTION: Styling Vue components using globally defined CSS variables rather than Tailwind process-specific features.
Dependencies: Vue
Parameters: CSS variable names
Output: Styled Vue components.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/compatibility.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<template>
  <button><slot /></button>
</template>

<style scoped>
  button {
    background-color: var(--color-blue-500);
  }
</style>

----------------------------------------

TITLE: Creating Custom Variants with addVariant in Tailwind CSS
DESCRIPTION: Demonstrates how to create a custom variant using the addVariant API in the Tailwind CSS configuration file. This example creates a 'third' variant that targets the third child element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_18

LANGUAGE: javascript
CODE:
// [!code filename:tailwind.config.js]
const plugin = require("tailwindcss/plugin");

module.exports = {
  // ...
  plugins: [
    plugin(function ({ addVariant }) {
      // [!code highlight:2]
      addVariant("third", "&:nth-child(3)");
    }),
  ],
};

----------------------------------------

TITLE: Tailwind CSS Fill Utilities Table
DESCRIPTION: This code snippet generates a table of Tailwind CSS fill utilities using the ApiTable component. It includes predefined fill classes like `fill-none`, `fill-inherit`, `fill-current`, and `fill-transparent`, as well as fill classes based on the `colors` object and custom properties. The table maps each utility class to its corresponding CSS fill property value.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/fill.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
"<ApiTable
  rows={[
    ["fill-none", "fill: none;"],
    ["fill-inherit", "fill: inherit;"],
    ["fill-current", "fill: currentColor;"],
    ["fill-transparent", "fill: transparent;"],
    ...Object.entries(colors).map(([name, value]) => [`fill-${name}`, `fill: var(--color-${name}); /* ${value} */`]),
    ["fill-(<custom-property>)", "fill: var(<custom-property>);"],
    ["fill-[<color>]", "fill: <color>;"],
  ]}
/>"

----------------------------------------

TITLE: Configuring Flex Item Sizing with Tailwind CSS
DESCRIPTION: Defines utility classes for controlling flex item behavior using flex-grow, flex-shrink, and flex-basis properties
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";

export const title = "flex";
export const description = "Utilities for controlling how flex items both grow and shrink.";

LANGUAGE: html
CODE:
<div class="flex">
  <div class="w-14 flex-none ...">01</div>
  <div class="w-64 flex-1 ...">02</div>
  <div class="w-32 flex-1 ...">03</div>
</div>

----------------------------------------

TITLE: Using Hardware Acceleration with Transform GPU in Tailwind CSS
DESCRIPTION: Demonstrates how to use the transform-gpu utility class to enable GPU rendering for better performance in transitions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transform.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code classes:transform-gpu] -->
<div class="scale-150 transform-gpu">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Implementing Auto-Sized Table Columns with Tailwind CSS
DESCRIPTION: This example demonstrates how to use the 'table-auto' utility to automatically size table columns based on their content. It includes a full HTML structure for a responsive table.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/table-layout.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<table class="table-auto">
  <thead>
    <tr>
      <th>Song</th>
      <th>Artist</th>
      <th>Year</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>The Sliding Mr. Bones (Next Stop, Pottersville)</td>
      <td>Malcolm Lockyer</td>
      <td>1961</td>
    </tr>
    <tr>
      <td>Witchy Woman</td>
      <td>The Eagles</td>
      <td>1972</td>
    </tr>
    <tr>
      <td>Shining Star</td>
      <td>Earth, Wind, and Fire</td>
      <td>1975</td>
    </tr>
  </tbody>
</table>

----------------------------------------

TITLE: HTML Display Examples
DESCRIPTION: This code demonstrates the usage of `inline`, `inline-block`, and `block` Tailwind CSS classes to control the display property of HTML elements. It shows how these classes affect the flow and wrapping of text within elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/display.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:inline,inline-block,block] -->
<p>
  When controlling the flow of text, using the CSS property <span class="inline">display: inline</span> will cause the
  text inside the element to wrap normally.
</p>
<p>
  While using the property <span class="inline-block">display: inline-block</span> will wrap the element to prevent the
  text inside from extending beyond its parent.
</p>
<p>
  Lastly, using the property <span class="block">display: block</span> will put the element on its own line and fill its
  parent.
</p>

----------------------------------------

TITLE: Aligning Items with 'items-stretch' Utility
DESCRIPTION: This HTML snippet demonstrates the use of the 'items-stretch' utility to make flex items stretch to occupy the full height along the container's cross axis. It features three items within a flex container, each with varying paddings, demonstrating how the 'items-stretch' utility uniformly stretches them across the available space.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-items.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<div class="flex items-stretch ...">
  <div class="py-4">01</div>
  <div class="py-12">02</div>
  <div class="py-8">03</div>
</div>

----------------------------------------

TITLE: Customizing Theme with Font Size - CSS
DESCRIPTION: This snippet allows the user to define custom font sizes and associated properties such as line-height and letter-spacing, providing extensibility for typography in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-size.mdx#2025-04-18_snippet_5

LANGUAGE: css
CODE:
@theme {
  --text-tiny: 0.625rem;
  --text-tiny--line-height: 1.5rem; /* [!code highlight] */
  --text-tiny--letter-spacing: 0.125rem; /* [!code highlight] */
  --text-tiny--font-weight: 500; /* [!code highlight] */
}

----------------------------------------

TITLE: Removing Outlines with Tailwind CSS
DESCRIPTION: HTML snippet showing how to use the 'outline-none' utility to completely remove the default browser outline on focused elements, with a note on ensuring accessibility.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/outline-style.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<div class="focus-within:outline-2 focus-within:outline-indigo-600 ...">
  <textarea class="outline-none ..." placeholder="Leave a comment..." />
  <button class="..." type="button">Post</button>
</div>

----------------------------------------

TITLE: Using Focus-Visible Variant
DESCRIPTION: Example of using the new focus-visible variant for keyboard-only focus styles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-5/index.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<button class="focus-visible:shadow-outline focus-visible:outline-none ...">Click me</button>

----------------------------------------

TITLE: Basic Fixed Header Structure in HTML
DESCRIPTION: A simplified HTML structure showing the core fixed positioning implementation using TailwindCSS fixed utility class. Demonstrates the basic structure needed for a fixed header with scrollable content.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/position.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="relative">
  <div class="fixed top-0 right-0 left-0">Contacts</div>
  <div>
    <div>
      <img src="/img/andrew.jpg" />
      <strong>Andrew Alfred</strong>
    </div>
    <div>
      <img src="/img/debra.jpg" />
      <strong>Debra Houston</strong>
    </div>
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Tailwind CSS flex-basis spacing scale HTML
DESCRIPTION: This HTML snippet shows the Tailwind CSS classes to implement flex-basis spacing. The classes `basis-64` and `basis-128` are used to control the initial sizes of the flex items.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-basis.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<!-- [!code classes:basis-64,basis-128] -->
<div class="flex flex-row">
  <div class="basis-64">01</div>
  <div class="basis-64">02</div>
  <div class="basis-128">03</div>
</div>

----------------------------------------

TITLE: Resetting Width with Responsive Utility in HTML
DESCRIPTION: This HTML example demonstrates how to use the w-auto utility to reset an element's width under specific conditions, such as at a particular breakpoint in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/width.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<div class="w-full md:w-auto">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Custom Component Classes in TailwindCSS
DESCRIPTION: Shows how to create custom component classes using the components layer that can be overridden with utility classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_3

LANGUAGE: css
CODE:
@layer components {
  .card {
    background-color: var(--color-white);
    border-radius: var(--rounded-lg);
    padding: var(--spacing-6);
    box-shadow: var(--shadow-xl);
  }
}

----------------------------------------

TITLE: Focus Styles Implementation
DESCRIPTION: Examples of implementing focus indicators using the new outline utilities and custom focus styles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-9/index.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<button class="focus:shadow-outline focus:outline-none ...">
  <!-- ... -->
</button>

LANGUAGE: html
CODE:
<!-- Use `outline-white` on dark backgrounds -->
<div class="bg-gray-900">
  <button class="focus:outline-white ...">
    <!-- ... -->
  </button>
</div>

<!-- Use `outline-black` on light backgrounds -->
<div class="bg-white">
  <button class="focus:outline-black ...">
    <!-- ... -->
  </button>
</div>

----------------------------------------

TITLE: Custom Cursor Value Component
DESCRIPTION: This snippet uses the `UsingACustomValue` component to demonstrate how to use custom cursor values in Tailwind CSS. The component takes the element type (button), utility (cursor), and a custom value (url(hand.cur),_pointer) as props.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/cursor.mdx#2025-04-18_snippet_5

LANGUAGE: typescript
CODE:
<UsingACustomValue element="button" utility="cursor" value="url(hand.cur),_pointer" />

----------------------------------------

TITLE: Basic Hue-Rotate Filter Examples - JSX
DESCRIPTION: Demonstrates the application of basic hue-rotate utilities. Displays examples for various degrees of hue rotation, illustrating how the effect modifies elements' appearance with different classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-hue-rotate.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
<Figure>
<Example padding={false}>
  {
    <div className="flex scroll-p-8 justify-start overflow-scroll sm:block sm:overflow-visible">
      <div className="flex shrink-0 items-center justify-around gap-6 p-8 font-mono font-bold sm:gap-4">
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            hue-rotate-15
          </p>
          <div className="relative hue-rotate-15">
            <img
              className="size-24 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            hue-rotate-90
          </p>
          <div className="relative hue-rotate-90">
            <img
              className="size-24 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            hue-rotate-180
          </p>
          <div className="relative hue-rotate-180">
            <img
              className="size-24 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            hue-rotate-270
          </p>
          <div className="relative hue-rotate-270">
            <img
              className="size-24 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
      </div>
    </div>
  }
</Example>
</Figure>

----------------------------------------

TITLE: Aligning to Parent Bottom with Tailwind CSS
DESCRIPTION: Illustrates the usage of the 'align-text-bottom' utility to align the bottom of an element with the bottom of the parent element's font.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/vertical-align.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<span class="inline-block align-text-bottom">The quick brown fox...</span>

----------------------------------------

TITLE: Importing Components and Functions for Tailwind CSS Documentation
DESCRIPTION: Imports various components and functions used for creating API documentation and examples in a Tailwind CSS documentation page.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-overflow.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";
import dedent from "dedent";

----------------------------------------

TITLE: Horizontal mask-repeat Example in HTML
DESCRIPTION: Shows how to use the mask-repeat-x utility to repeat a mask image only horizontally. This creates a row of circular masks across the background image.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-repeat.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<div class="mask-repeat-x mask-[url(/img/circle.png)] mask-size-[50px_50px] bg-[url(/img/mountains.jpg)]..."></div>

----------------------------------------

TITLE: Guest Author Post Metadata Example
DESCRIPTION: Shows how to add a guest author's information inline within a post's metadata configuration.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/building-the-tailwind-blog/index.mdx#2025-04-18_snippet_4

LANGUAGE: javascript
CODE:
export const meta = {
  title: "An example of a guest post by someone not on the team",
  authors: [
    {
      name: "Simon Vrachliotis",
      twitter: "@simonswiss",
      avatar: "https://pbs.twimg.com/profile_images/1160929863/n510426211_274341_6220_400x400.jpg",
    },
  ],
  // ...
};

----------------------------------------

TITLE: Configuring Container Variants
DESCRIPTION: Configuration example for enabling specific variants for the container class in tailwind.config.js.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-5/index.mdx#2025-04-18_snippet_5

LANGUAGE: javascript
CODE:
module.exports = {
  // ...
  variants: {
    container: ["responsive", "focus", "group-hover"],
  },
};

----------------------------------------

TITLE: Negative Order Values
DESCRIPTION: Example of using negative order values by prefixing the class name with a dash.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/order.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="-order-1">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Using Arbitrary Values with Tailwind CSS
DESCRIPTION: Shows the existing arbitrary values feature in Tailwind CSS that allows specifying any value for a utility directly in HTML markup.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_19

LANGUAGE: html
CODE:
<!-- [!code word:top-[117px]] -->
<div class="top-[117px]">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Webpack Preview Loader Configuration
DESCRIPTION: Custom webpack loader configuration for handling post previews with resource queries and excerpt markers.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/building-the-tailwind-blog/index.mdx#2025-04-18_snippet_5

LANGUAGE: javascript
CODE:
{
  resourceQuery: /preview/,
  use: [
    ...mdx,
    createLoader(function (src) {
      if (src.includes('<!--​more​-->')) {
        const [preview] = src.split('<!--​more​-->')
        return this.callback(null, preview)
      }

      const [preview] = src.split('<!--​/excerpt​-->')
      return this.callback(null, preview.replace('<!--​excerpt​-->', ''))
    }),
  ],
}

----------------------------------------

TITLE: Basic Border Width Example in JSX
DESCRIPTION: Demonstration of border width utility classes applied to div elements with different width values
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-width.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<div className="flex flex-col items-center justify-around gap-4">
  <div className="size-16 border border-indigo-600 p-4"></div>
  <div className="size-16 border-2 border-indigo-600 p-4"></div>
  <div className="size-16 border-4 border-indigo-600 p-4"></div>
</div>

----------------------------------------

TITLE: Nested CSS Handling with Tailwind - CSS
DESCRIPTION: Processing nested CSS rules using Lightning CSS. Flattens nested rules for compatibility with modern browsers.
Dependencies: Lightning CSS
Parameters: Nested CSS rules
Output: Flatten CSS rules.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/compatibility.mdx#2025-04-18_snippet_2

LANGUAGE: css
CODE:
.typography {
  p {
    font-size: var(--text-base);
  }
  img {
    border-radius: var(--radius-lg);
  }
}

----------------------------------------

TITLE: Antialiasing Utility Classes Example
DESCRIPTION: HTML example demonstrating font smoothing utility classes with antialiased and subpixel-antialiased options
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-smoothing.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<p class="antialiased ...">The quick brown fox ...</p>

LANGUAGE: html
CODE:
<p class="subpixel-antialiased ...">The quick brown fox ...</p>

----------------------------------------

TITLE: Determining Next and Previous Posts in a Next.js Component
DESCRIPTION: This snippet is part of a `Post` layout component in a Next.js application. It uses the current router path to find the index of the current post and retrieves the previous and next posts relative to that index. Key components include the `useRouter` hook from Next.js and a `posts` list passed as a prop to the component.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/building-the-tailwind-blog/index.mdx#2025-04-18_snippet_8

LANGUAGE: JavaScript
CODE:
export default function Post({ meta, children, posts }) {
  const router = useRouter();
  const postIndex = posts.findIndex((post) => post.link === router.pathname);
  const previous = posts[postIndex + 1];
  const next = posts[postIndex - 1];

  // ...
}

----------------------------------------

TITLE: Line Clamp Plugin Integrated with Tailwind CSS in HTML
DESCRIPTION: Highlights the use of Tailwind CSS's built-in line-clamp utility that truncates text with ellipsis after a specified number of lines, ensuring cross-browser compatibility. Dependencies include Tailwind CSS v3.3 or later. Parameters involve setting the `line-clamp-*` class on a paragraph element. The primary input is a paragraph text, and the output is a truncated text block.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_8

LANGUAGE: html
CODE:
<article>
  <div>
    <time datetime="2020-03-16" class="block text-sm/6 text-gray-600">Mar 10, 2020</time>
    <h2 class="mt-2 text-lg font-semibold text-gray-900">Boost your conversion rate</h2>
    >
    <p class="mt-4 line-clamp-3 text-sm/6 text-gray-600">
      Nulla dolor velit adipisicing duis excepteur esse in duis nostrud occaecat mollit incididunt deserunt sunt. Ut ut
      sunt laborum ex occaecat eu tempor labore enim adipisicing minim ad. Est in quis eu dolore occaecat excepteur
      fugiat dolore nisi aliqua fugiat enim ut cillum. Labore enim duis nostrud eu. Est ut eiusmod consequat irure quis
      deserunt ex. Enim laboris dolor magna pariatur. Dolor et ad sint voluptate sunt elit mollit officia ad enim sit
      consectetur enim.
    </p>
  </div>
  <div class="mt-4 flex gap-x-2.5 text-sm leading-6 font-semibold text-gray-900">
    <img src="..." class="h-6 w-6 flex-none rounded-full bg-gray-50" />
    Lindsay Walton
  </div>
</article>

----------------------------------------

TITLE: Defining Tailwind CSS Max-Height Utility Classes
DESCRIPTION: This code snippet demonstrates the usage of Tailwind CSS max-height utility classes in an HTML structure. It showcases various max-height values applied to div elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/max-height.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="h-96 ...">
  <div class="h-full max-h-80 ...">max-h-80</div>
  <div class="h-full max-h-64 ...">max-h-64</div>
  <div class="h-full max-h-48 ...">max-h-48</div>
  <div class="h-full max-h-40 ...">max-h-40</div>
  <div class="h-full max-h-32 ...">max-h-32</div>
  <div class="h-full max-h-24 ...">max-h-24</div>
</div>

----------------------------------------

TITLE: SVG Stroke Width Example Implementation
DESCRIPTION: Demonstrates the implementation of stroke width utilities with two SVG globe icons using different stroke widths.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/stroke-width.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
<div className="flex items-center justify-center gap-x-8">
  <svg
    className="stroke-indigo-500 stroke-1"
    width="48"
    height="48"
    viewBox="0 0 48 48"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle cx="24" cy="24" r="23" strokeLinejoin="round" />
    <path d="M23 1C23 1 15 10.4901 15 24C15 37.5099 23 47 23 47" strokeLinejoin="round" />
    <path d="M25 1C25 1 33 10.4901 33 24C33 37.5099 25 47 25 47" strokeLinejoin="round" />
    <path d="M1 24H47" />
  </svg>
  <svg
    className="stroke-indigo-500 stroke-2"
    width="48"
    height="48"
    viewBox="0 0 48 48"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle cx="24" cy="24" r="23" strokeLinejoin="round" />
    <path d="M23 1C23 1 15 10.4901 15 24C15 37.5099 23 47 23 47" strokeLinejoin="round" />
    <path d="M25 1C25 1 33 10.4901 33 24C33 37.5099 25 47 25 47" strokeLinejoin="round" />
    <path d="M1 24H47" />
  </svg>
</div>

----------------------------------------

TITLE: Using Logical Properties for Tailwind CSS Positioning
DESCRIPTION: This HTML snippet shows how to use logical properties (start and end) for positioning elements based on text direction in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/top-right-bottom-left.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div dir="ltr">
  <div class="relative size-32 ...">
    <div class="absolute start-0 top-0 size-14 ..."></div>
  </div>
  <div>
    <div dir="rtl">
      <div class="relative size-32 ...">
        <div class="absolute start-0 top-0 size-14 ..."></div>
      </div>
      <div></div>
    </div>
  </div>
</div>

----------------------------------------

TITLE: Safelisting Using Inline Sources in Tailwind CSS
DESCRIPTION: This CSS snippet demonstrates the use of `@source inline()` to ensure specific class names are generated regardless of their presence in content files. The defined class names will be explicitly pushed into the processed CSS, allowing for customization beyond typical automatic detection.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/detecting-classes-in-source-files.mdx#2025-04-18_snippet_3

LANGUAGE: CSS
CODE:
@import "tailwindcss";
/* [!code highlight:2] */
@source inline("underline");

LANGUAGE: CSS
CODE:
.underline {
  text-decoration: underline;
}

----------------------------------------

TITLE: First/Last Child Styling in Svelte with TailwindCSS
DESCRIPTION: Shows how to style first and last children in a list using Svelte each blocks with TailwindCSS variants.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_84

LANGUAGE: svelte
CODE:
<ul>
  {#each people as person}
    <li class="py-4 first:pt-0 last:pb-0 ...">
      <!-- ... -->
    </li>
  {/each}
</ul>

----------------------------------------

TITLE: Basic ARIA State Usage in HTML
DESCRIPTION: Demonstrates basic usage of ARIA state variants by applying background color conditionally based on aria-checked attribute.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_50

LANGUAGE: html
CODE:
<div aria-checked="true" class="bg-gray-600 aria-checked:bg-sky-700">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Styling Dialog Backdrop with Tailwind CSS
DESCRIPTION: This example shows how to style the backdrop of a native <dialog> element using Tailwind CSS. It applies a light gray background to the backdrop using the 'backdrop' variant.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_33

LANGUAGE: html
CODE:
<dialog class="backdrop:bg-gray-50">
  <form method="dialog">
    <!-- ... -->
  </form>
</dialog>

----------------------------------------

TITLE: Replacing Deprecated Gap Utilities in HTML
DESCRIPTION: This snippet shows how to transition from using the old 'col-gap-{n}' and 'row-gap-{n}' utilities to the new 'gap-x-{n}' and 'gap-y-{n}' utilities in Tailwind CSS. The migration is essential to ensure compatibility with future versions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div class="col-gap-4 row-gap-2 ..."> <!-- [!code --] -->
<div class="gap-x-4 gap-y-2 ..."> <!-- [!code ++] -->
</div>

----------------------------------------

TITLE: Using Description List Component in React with Catalyst
DESCRIPTION: Illustrates the usage of the DescriptionList component from Catalyst to create a structured list of terms and descriptions, useful for displaying key-value data.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2024-05-24-catalyst-application-layouts/index.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
import { DescriptionDetails, DescriptionList, DescriptionTerm } from "@/components/description-list";

function Example() {
  return (
    <DescriptionList>
      <DescriptionTerm>Customer</DescriptionTerm>
      <DescriptionDetails>Michael Foster</DescriptionDetails>

      <DescriptionTerm>Event</DescriptionTerm>
      <DescriptionDetails>Bear Hug: Live in Concert</DescriptionDetails>

      {/* ... */}
    </DescriptionList>
  );
}

----------------------------------------

TITLE: Using Heroicons in a React Component
DESCRIPTION: This code snippet demonstrates how to import and use the BeakerIcon from Heroicons in a React component. The BeakerIcon is styled with Tailwind CSS classes for size and color.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/heroicons-v1/index.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { BeakerIcon } from "@heroicons/react/solid";

function MyComponent() {
  return (
    <div>
      <BeakerIcon className="h-5 w-5 text-blue-500" />
      <p>...</p>
    </div>
  );
}

----------------------------------------

TITLE: Defining Tailwind CSS break-before Classes in API Table
DESCRIPTION: This code defines an API table using the ApiTable component. Each row in the table maps a Tailwind CSS class related to the `break-before` property to its corresponding CSS property. This table provides a quick reference for available classes and their effects on element breaking behavior.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/break-before.mdx#2025-04-18_snippet_1

LANGUAGE: typescript
CODE:
<ApiTable
  rows={[
    ["break-before-auto", "break-before: auto;"],
    ["break-before-avoid", "break-before: avoid;"],
    ["break-before-all", "break-before: all;"],
    ["break-before-avoid-page", "break-before: avoid-page;"],
    ["break-before-page", "break-before: page;"],
    ["break-before-left", "break-before: left;"],
    ["break-before-right", "break-before: right;"],
    ["break-before-column", "break-before: column;"],
  ]}
/>

----------------------------------------

TITLE: Baseline-alignment Example with Tailwind CSS
DESCRIPTION: Demonstrates using self-baseline utility to align items along their baselines.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-self.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div class="flex ...">
  <div class="self-baseline pt-2 pb-6">01</div>
  <div class="self-baseline pt-8 pb-12">02</div>
  <div class="self-baseline pt-12 pb-4">03</div>
</div>

----------------------------------------

TITLE: Aligning to Middle with Tailwind CSS
DESCRIPTION: Illustrates how to use the 'align-middle' utility to align the middle of an element with the baseline plus half the x-height of the parent.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/vertical-align.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<span class="inline-block align-middle">The quick brown fox...</span>

----------------------------------------

TITLE: Using justify-between with Flexbox in HTML
DESCRIPTION: Example of using the justify-between utility to create equal spacing between flex items. The first item is aligned with the start and the last with the end of the container.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-content.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div class="flex justify-between ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Start Content Placement in Grid
DESCRIPTION: Aligns grid items at the start of the container using place-content-start utility. Creates a 2-column grid with content packed against the start of the block axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-content.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="grid h-48 grid-cols-2 place-content-start gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
</div>

----------------------------------------

TITLE: Implementing Responsive Design for Caption Utilities - React
DESCRIPTION: This snippet demonstrates how to implement responsive design for caption elements using the ResponsiveDesign component. It specifies default and featured classes for responsiveness.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/caption-side.mdx#2025-04-18_snippet_3

LANGUAGE: javascript
CODE:
<ResponsiveDesign property="caption-side" element="caption" defaultClass="caption-top" featuredClass="caption-bottom" />

----------------------------------------

TITLE: Defining Page Metadata for Background Repeat
DESCRIPTION: Exports page title and description for background repeat documentation
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-repeat.mdx#2025-04-18_snippet_1

LANGUAGE: typescript
CODE:
export const title = "background-repeat";
export const description = "Utilities for controlling the repetition of an element's background image.";

----------------------------------------

TITLE: Filter Removal Example - HTML
DESCRIPTION: In this HTML snippet, the Tailwind CSS 'filter-none' utility is applied to remove all previously defined filters from an img element. It highlights how to reset visual filters for responsive design considerations. Requires HTML setup with Tailwind CSS for proper class support.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<img class=\"blur-md brightness-150 invert md:filter-none\" src=\"/img/mountains.jpg\" />

----------------------------------------

TITLE: Old Way: CSS Variable Color Configuration with Functions
DESCRIPTION: Shows the previous complex approach to configuring colors using CSS variables in Tailwind.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_7

LANGUAGE: javascript
CODE:
function withOpacityValue(variable) {
  return ({ opacityValue }) => {
    if (opacityValue === undefined) {
      return `rgb(var(${variable}))`;
    }
    return `rgb(var(${variable}) / ${opacityValue})`;
  };
}

module.exports = {
  theme: {
    colors: {
      primary: withOpacityValue("--color-primary"),
      secondary: withOpacityValue("--color-secondary"),
      // ...
    },
  },
};

----------------------------------------

TITLE: Displaying API Table with Backdrop Invert Utilities in React
DESCRIPTION: Shows how to use the `ApiTable` component to present different backdrop invert utilities in Tailwind CSS. Each utility adjusts the inversion filter applied to the backdrop. No special dependencies are required aside from React.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-invert.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { ApiTable } from \"@/components/api-table.tsx\";

<ApiTable
  rows={[
    [\"backdrop-invert\", \"backdrop-filter: invert(100%);\"],
    [\"backdrop-invert-<number>\", \"backdrop-filter: invert(<number>%);\"],
    [\"backdrop-invert-(<custom-property>)\", \"backdrop-filter: invert(var(<custom-property>))\"],
    [\"backdrop-invert-[<value>]\", \"backdrop-filter: invert(<value>);\"],
  ]}
/>

----------------------------------------

TITLE: Responsive Design for Caret Color - TypeScript
DESCRIPTION: This TypeScript snippet demonstrates how to implement responsive design for caret color using the ResponsiveDesign component. It allows defining default and featured caret colors for different screen sizes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/caret-color.mdx#2025-04-18_snippet_3

LANGUAGE: typescript
CODE:
<ResponsiveDesign
  element="textarea"
  property="caret-color"
  defaultClass="caret-rose-500"
  featuredClass="caret-lime-600"
/>

----------------------------------------

TITLE: Auto Select All Text Example
DESCRIPTION: Illustrates using select-all utility to automatically select entire text on click
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/user-select.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<div class="select-all ...">The quick brown fox jumps over the lazy dog.</div>

----------------------------------------

TITLE: Defining Grid Columns with ApiTable in JavaScript
DESCRIPTION: This snippet defines the grid column utilities using the ApiTable component. It lists various classes and their corresponding CSS properties for grid layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-template-columns.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { ApiTable } from "@/components/api-table.tsx";

<ApiTable
  rows={[
    ["grid-cols-<number>", "grid-template-columns: repeat(<number>, minmax(0, 1fr));"],
    ["grid-cols-none", "grid-template-columns: none;"],
    ["grid-cols-subgrid", "grid-template-columns: subgrid;"],
    ["grid-cols-[<value>]", "grid-template-columns: <value>;"],
    ["grid-cols-(<custom-property>)", "grid-template-columns: var(<custom-property>);"]
  ]}
/>

----------------------------------------

TITLE: Rendering API Table for Tailwind CSS Word Break Classes
DESCRIPTION: Uses the ApiTable component to display the available word-break utility classes and their corresponding CSS properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/word-break.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["break-normal", "word-break: normal;"],
    ["break-all", "word-break: break-all;"],
    ["break-keep", "word-break: keep-all;"],
  ]}
/>

----------------------------------------

TITLE: Proportional Flex Item Growing
DESCRIPTION: Shows how to use grow-<number> utilities to make flex items grow proportionally based on their growth factor, enabling complex responsive layouts.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-grow.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="flex ...">
  <div class="size-14 grow-3 ...">01</div>
  <div class="size-14 grow-7 ...">02</div>
  <div class="size-14 grow-3 ...">03</div>
</div>

----------------------------------------

TITLE: Example Usage of Backdrop Saturate in Tailwind CSS
DESCRIPTION: This code snippet provides an example of how to apply various backdrop saturation utilities to elements using Tailwind CSS classes in a React component. The elements have different saturation levels applied, as demonstrated by the class names 'backdrop-saturate-50', 'backdrop-saturate-125', and 'backdrop-saturate-200'. Assumes a setup with Tailwind CSS and React.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-saturate.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
<Example padding={false}>
  {
    <div className="flex scroll-p-8 justify-start overflow-scroll sm:block sm:overflow-visible">
      <div className="flex shrink-0 items-center justify-around gap-6 p-8 font-mono font-bold sm:gap-4">
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-saturate-50
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-saturate-50"></div>
            <img
              className="size-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-saturate-125
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-saturate-125"></div>
            <img
              className="size-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-saturate-200
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-saturate-200"></div>
            <img
              className="size-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
      </div>
    </div>
  }
</Example>

----------------------------------------

TITLE: Removing Transforms with Transform None in Tailwind CSS
DESCRIPTION: Shows how to use the transform-none utility class to remove all transforms from an element, with a responsive example.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transform.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:transform-none] -->
<div class="skew-y-3 md:transform-none">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Importing Tailwind CSS in Main Stylesheet
DESCRIPTION: Basic CSS import of Tailwind CSS using the new @import statement in the main stylesheet
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-alpha/index.mdx#2025-04-18_snippet_2

LANGUAGE: css
CODE:
@import "tailwindcss";

----------------------------------------

TITLE: Styling Text Background with ::before Pseudo-element
DESCRIPTION: Shows how to create a skewed background effect using the ::before pseudo-element with absolute positioning and transform properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_26

LANGUAGE: html
CODE:
<blockquote class="text-center text-2xl font-semibold text-gray-900 italic dark:text-white">
  When you look
  <span class="relative inline-block before:absolute before:-inset-1 before:block before:-skew-y-3 before:bg-pink-500">
    <span class="relative text-white dark:text-gray-950">annoyed</span>
  </span>
  all the time, people think that you're busy.
</blockquote>

----------------------------------------

TITLE: Outline Color Transition Update
DESCRIPTION: Shows the correct way to handle outline color transitions to avoid unwanted color transitions from default values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_21

LANGUAGE: html
CODE:
<button class="transition hover:outline-2 hover:outline-cyan-500"></button>
<button class="outline-cyan-500 transition hover:outline-2"></button>

----------------------------------------

TITLE: Rendering a Border Style API Table in React
DESCRIPTION: This React component imports the ApiTable, Example, Figure, and ResponsiveDesign components to create a utility API table showcasing the border style classes available in Tailwind CSS. It lists possible styles like solid, dashed, and dotted with CSS equivalents. No additional dependencies are specified beyond a React environment and Tailwind CSS being included in the project.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-style.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

export const title = "border-style";
export const description = "Utilities for controlling the style of an element's borders.";

<ApiTable
  rows=[
    ["border-solid", "border-style: solid;"],
    ["border-dashed", "border-style: dashed;"],
    ["border-dotted", "border-style: dotted;"],
    ["border-double", "border-style: double;"],
    ["border-hidden", "border-style: hidden;"],
    ["border-none", "border-style: none;"],
    ["divide-solid", "& > :not(:last-child) {\n  border-style: solid;\n}"],
    ["divide-dashed", "& > :not(:last-child) {\n  border-style: dashed;\n}"],
    ["divide-dotted", "& > :not(:last-child) {\n  border-style: dotted;\n}"],
    ["divide-double", "& > :not(:last-child) {\n  border-style: double;\n}"],
    ["divide-hidden", "& > :not(:last-child) {\n  border-style: hidden;\n}"],
    ["divide-none", "& > :not(:last-child) {\n  border-style: none;\n}"]
  ]
/>

----------------------------------------

TITLE: Defining Table Layout Utilities in Tailwind CSS
DESCRIPTION: This snippet defines the available table layout utilities in Tailwind CSS. It includes 'table-auto' for automatic sizing and 'table-fixed' for fixed column widths.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/table-layout.mdx#2025-04-18_snippet_0

LANGUAGE: JSX
CODE:
<ApiTable
  rows={[
    ["table-auto", "table-layout: auto;"],
    ["table-fixed", "table-layout: fixed;"],
  ]}
/>

----------------------------------------

TITLE: Custom Animation Theme Definition
DESCRIPTION: Example of defining a custom wiggle animation in the Tailwind theme configuration.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/animation.mdx#2025-04-18_snippet_5

LANGUAGE: css
CODE:
@theme {
  --animate-wiggle: wiggle 1s ease-in-out infinite;

  @keyframes wiggle {
    0%,
    100% {
      transform: rotate(-3deg);
    }
    50% {
      transform: rotate(3deg);
    }
  }
}

----------------------------------------

TITLE: Responsive Float TailwindCSS HTML
DESCRIPTION: Demonstrates responsive design utilizing the 'float-right' and 'md:float-left' utilities in TailwindCSS. Dependencies: TailwindCSS. Key parameters: Responsive utility classes for different viewports. Inputs: HTML element with class attribute. Outputs: Right-floated on default, left-floated on medium devices.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/float.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:md:float-left] -->
<img class="float-right md:float-left" src="/img/mountains.jpg" />

----------------------------------------

TITLE: Using Alpha Function for Color Opacity
DESCRIPTION: The `--alpha()` function adjusts color opacity in Tailwind CSS, enhancing control over color visibility in designs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/functions-and-directives.mdx#2025-04-18_snippet_8

LANGUAGE: css
CODE:
.my-element {
  color: --alpha(var(--color-lime-300) / 50%);
}

----------------------------------------

TITLE: Configuring Tailwind CSS Using ES Modules
DESCRIPTION: Example of configuring Tailwind CSS using ES Module syntax in a configuration file.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_1

LANGUAGE: js
CODE:
/** @type {import('tailwindcss').Config} */
export default {
  content: [],
  theme: {
    extend: {},
  },
  plugins: [],
};

----------------------------------------

TITLE: Tailwind CSS Background Origin API Table
DESCRIPTION: This code snippet displays an API table showing the Tailwind CSS classes for controlling the background origin. It defines classes for setting the background origin relative to the border box, padding box, and content box.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-origin.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<ApiTable
  rows={[
    ["bg-origin-border", "background-origin: border-box;"],
    ["bg-origin-padding", "background-origin: padding-box;"],
    ["bg-origin-content", "background-origin: content-box;"],
  ]}
/>

----------------------------------------

TITLE: Basic Margin Example in HTML
DESCRIPTION: Example of using the m-8 utility class to add margin on all sides of an element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/margin.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<div class="m-8 ...">m-8</div>

----------------------------------------

TITLE: Using place-self-end in Tailwind CSS
DESCRIPTION: Demonstration of applying the place-self-end utility class to align an item to the end on both axes in a grid layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-self.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<div class="grid grid-cols-3 gap-4 ...">
  <div>01</div>
  <div class="place-self-end ...">02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
  <div>06</div>
</div>

----------------------------------------

TITLE: Removing List Marker Images in HTML
DESCRIPTION: Shows how to remove existing marker images from list items using the list-image-none utility class. This creates a list without visual markers.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/list-style-image.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<ul class="list-image-none">
  <!-- ... -->
</ul>

----------------------------------------

TITLE: Resetting Numeric Font Variants
DESCRIPTION: Use the normal-nums utility to reset previously applied numeric font variant styles
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-variant-numeric.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<p class="slashed-zero tabular-nums md:normal-nums ..."><!-- ... --></p>

----------------------------------------

TITLE: Responsive Design Example for List Style Position
DESCRIPTION: Renders a responsive design component that demonstrates how list-style-position utilities can be used with responsive variants.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/list-style-position.mdx#2025-04-18_snippet_5

LANGUAGE: jsx
CODE:
<ResponsiveDesign element="ul" property="list-style-position" defaultClass="list-outside" featuredClass="list-inside" />

----------------------------------------

TITLE: HTML Representation of Cropped Text Background Example
DESCRIPTION: This HTML snippet applies the bg-clip-text class in Tailwind CSS to create a gradient background confined to text. Dependencies include Tailwind CSS for base styling and applying a gradient. The expected output is a paragraph element that displays text with a gradient overlay.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-clip.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<p class="bg-gradient-to-r from-pink-500 to-violet-500 bg-clip-text text-5xl font-extrabold text-transparent ...">
  Hello world
</p>

----------------------------------------

TITLE: Specifying Source Files with @source
DESCRIPTION: Use the `@source` directive to declare source files that are not automatically detected by Tailwind, ensuring all necessary styles are included.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/functions-and-directives.mdx#2025-04-18_snippet_2

LANGUAGE: css
CODE:
@source "../node_modules/@my-company/ui-lib";

----------------------------------------

TITLE: Using Custom Value for Auto Columns in React
DESCRIPTION: This React component snippet showcases the usage of a custom value for controlling the size of implicitly-created grid columns using the 'UsingACustomValue' utility.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-auto-columns.mdx#2025-04-18_snippet_2

LANGUAGE: javascript
CODE:
<UsingACustomValue utility="auto-cols" name="size of implicitly-created grid columns" value="minmax(0,2fr)" />

----------------------------------------

TITLE: Importing components for isolation documentation in React/JSX
DESCRIPTION: Imports the ApiTable and ResponsiveDesign components that are used to display the isolation utility documentation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/isolation.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: HTML Example - font-stretch Variations
DESCRIPTION: This HTML snippet demonstrates the use of `font-stretch` Tailwind CSS classes to modify font width. It includes classes such as `font-stretch-extra-condensed`, `font-stretch-condensed`, `font-stretch-normal`, `font-stretch-expanded`, and `font-stretch-extra-expanded`. Each paragraph uses one of these classes to display the sample text with varying font widths.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-stretch.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<p class="font-stretch-extra-condensed">The quick brown fox...</p>
<p class="font-stretch-condensed">The quick brown fox...</p>
<p class="font-stretch-normal">The quick brown fox...</p>
<p class="font-stretch-expanded">The quick brown fox...</p>
<p class="font-stretch-extra-expanded">The quick brown fox...</p>

----------------------------------------

TITLE: Example of Custom Caret Color Value - TypeScript
DESCRIPTION: This TypeScript snippet showcases the use of a custom value for the caret color in a textarea element. It utilizes the UsingACustomValue component to apply a specified color.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/caret-color.mdx#2025-04-18_snippet_2

LANGUAGE: typescript
CODE:
<UsingACustomValue element="textarea" utility="caret" value="#50d71e" name="caret color" variable="caret-color" />

----------------------------------------

TITLE: Dialog Transition with Data Attributes - React JavaScript
DESCRIPTION: This snippet showcases using data attributes for dialog transition stages in Headless UI v2.1. It leverages `useState` for managing dialog state. Requires `@headlessui/react` and `useState` from React.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2024-06-21-headless-ui-v2-1/index.mdx#2025-04-18_snippet_1

LANGUAGE: JavaScript
CODE:
import { Dialog } from "@headlessui/react";
import { useState } from "react";

function Example() {
  let [isOpen, setIsOpen] = useState(false);

  return (
    <>
      <button onClick={() => setIsOpen(true)}>Open dialog</button>
      <Dialog
        open={isOpen}
        onClose={() => setIsOpen(false)}
        // [!code highlight:8]
        transition
        className={`
          transition duration-300 ease-out
          data-[closed]:opacity-0
          data-[closed]:data-[enter]:-translate-x-8
          data-[closed]:data-[leave]:translate-x-8
        `}
      >
        {/* Dialog content… */}
      </Dialog>
    </>
  );
}

----------------------------------------

TITLE: Installing Headless UI v1.4 with npm
DESCRIPTION: Command line instructions for installing Headless UI v1.4 for both React and Vue projects using npm.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-4/index.mdx#2025-04-18_snippet_8

LANGUAGE: sh
CODE:
# For React
npm install @headlessui/react

# For Vue
npm install @headlessui/vue

----------------------------------------

TITLE: Configuring Safelist in Tailwind CSS
DESCRIPTION: This snippet demonstrates how to configure the `safelist` option in your `tailwind.config.js` file. The `safelist` option is used to prevent specific classes from being purged during production builds, especially classes used dynamically from data sources.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_25

LANGUAGE: javascript
CODE:
module.exports = {
  purge: {
    content: ["./src/**/*.html"],
    safelist: [
      "bg-blue-500",
      "text-center",
      "hover:opacity-100",
      // ...
      "lg:text-right",
    ],
  },
  // ...
};

----------------------------------------

TITLE: Using Custom Object Position Values in Tailwind CSS
DESCRIPTION: This snippet shows how to use a custom object position value in Tailwind CSS. It uses the 'object' utility with a custom value of '25%_75%' to position the image within its container.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-position.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<UsingACustomValue
  element="img"
  elementAttributes={{ src: "/img/mountains.jpg" }}
  utility="object"
  name="object position"
  value="25%_75%"
/>

----------------------------------------

TITLE: Start Content Alignment in Grid Layout
DESCRIPTION: Example showing how to align grid items against the start of the cross axis using content-start utility
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-content.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<div class="grid h-56 grid-cols-3 content-start gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
</div>

----------------------------------------

TITLE: Displaying API Table with Alignment Utilities
DESCRIPTION: The ApiTable component, imported from `@/components/api-table.tsx`, displays a list of Tailwind CSS class utilities for setting align-items properties, with each row containing a utility class name and its associated CSS alignment style. This component forms a part of the UI documentation toolset.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-items.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
<ApiTable
  rows={[
    ["items-start", "align-items: flex-start;"],
    ["items-end", "align-items: flex-end;"],
    ["items-end-safe", "align-items: safe flex-end;"],
    ["items-center", "align-items: center;"],
    ["items-center-safe", "align-items: safe center;"],
    ["items-baseline", "align-items: baseline;"],
    ["items-baseline-last", "align-items: last baseline;"],
    ["items-stretch", "align-items: stretch;"]
  ]}
/>

----------------------------------------

TITLE: Example of Using Font Weight Utilities in Component
DESCRIPTION: This snippet showcases how to implement various font weight utilities within a React component. It provides specific examples of using utilities such as font-light, font-normal, etc., to demonstrate how they affect text appearance.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-weight.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
<Example>
  {
    <div className="flex flex-col gap-8">
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-light</span>
        <p className="text-lg font-light text-gray-900 dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-normal</span>
        <p className="text-lg font-normal text-gray-900 dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-medium</span>
        <p className="text-lg font-medium text-gray-900 dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-semibold</span>
        <p className="text-lg font-semibold text-gray-900 dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-bold</span>
        <p className="text-lg font-bold text-gray-900 dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
    </div>
  }
</Example>

----------------------------------------

TITLE: Balancing Text Wrapping in Tailwind CSS
DESCRIPTION: Shows how to use the text-balance utility in Tailwind CSS to distribute text evenly across each line, best suited for headings due to browser performance limitations.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-wrap.mdx#2025-04-18_snippet_4

LANGUAGE: HTML
CODE:
<!-- [!code classes:text-balance] -->
<article>
  <h3 class="text-balance">Beloved Manhattan soup stand closes</h3>
  <p>New Yorkers are facing the winter chill...</p>
</article>

----------------------------------------

TITLE: Configuring Motion Variants in Tailwind Config
DESCRIPTION: This JavaScript snippet shows how to configure the tailwind.config.js file to include motion-safe and motion-reduce variants for utility classes. These variants allow developers to enable or disable animations based on user preferences for reduced motion. Update the variants section with the desired configurations.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-6/index.mdx#2025-04-18_snippet_3

LANGUAGE: javascript
CODE:
module.exports = {\n  // ...\n  variants: {\n    translate: ["responsive", "hover", "focus", "motion-safe", "motion-reduce"],\n  },\n};

----------------------------------------

TITLE: API Table for isolation utilities in JSX
DESCRIPTION: Renders a table showing the available isolation utility classes and their corresponding CSS properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/isolation.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["isolate", "isolation: isolate;"],
    ["isolation-auto", "isolation: auto;"],
  ]}
/>

----------------------------------------

TITLE: Conic Mask Gradient Utilities for TailwindCSS
DESCRIPTION: Defines conic gradient mask utilities with configurable angle and color stop values
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_5

LANGUAGE: css
CODE:
mask-image: conic-gradient(from <number>deg, black var(--tw-mask-conic-from), transparent var(--tw-mask-conic-to));

----------------------------------------

TITLE: Styling Required Inputs with Tailwind CSS
DESCRIPTION: This example shows how to use the required variant in Tailwind CSS to style an input when it's required. It applies a red border to required inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_96

LANGUAGE: html
CODE:
<input required class="border required:border-red-500 ..." />

----------------------------------------

TITLE: Border Width API Table Configuration
DESCRIPTION: Comprehensive table defining various border width utility classes for Tailwind CSS, covering global, directional, and specific border width configurations
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-width.mdx#2025-04-18_snippet_1

LANGUAGE: typescript
CODE:
<ApiTable
  rows={[
    ["border", "border-width: 1px;"],
    ["border-<number>", "border-width: <number>px;"],
    ["border-x", "border-inline-width: 1px;"],
    ["border-y", "border-block-width: 1px;"],
    ["border-t", "border-top-width: 1px;"],
    // ... full list of border width utilities
  ]}
/>

----------------------------------------

TITLE: Using justify-self-center-safe with Tailwind CSS
DESCRIPTION: Example showing how to use the justify-self-center-safe utility which aligns items to the center but falls back to start when space is limited.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-self.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code filename:justify-self-center-safe] -->
<!-- [!code classes:justify-self-center-safe] -->
<div class="grid justify-items-stretch ...">
  <!-- ... -->
  <div class="justify-self-center-safe ...">02</div>
  <!-- ... -->
</div>

----------------------------------------

TITLE: Applying place-self-stretch in Tailwind CSS
DESCRIPTION: Example of using the place-self-stretch utility class to stretch an item on both axes in a grid layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-self.mdx#2025-04-18_snippet_5

LANGUAGE: HTML
CODE:
<div class="grid grid-cols-3 gap-4 ...">
  <div>01</div>
  <div class="place-self-stretch ...">02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
  <div>06</div>
</div>

----------------------------------------

TITLE: Installing Tailwind CSS v2.2
DESCRIPTION: NPM command to install the latest version of Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_1

LANGUAGE: sh
CODE:
npm install -D tailwindcss@latest

----------------------------------------

TITLE: Radial Mask Gradient Utilities for TailwindCSS
DESCRIPTION: Defines radial gradient mask utilities with configurable shapes (circle/ellipse), sizes, positions and color stops
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_3

LANGUAGE: css
CODE:
mask-image: radial-gradient(var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), black <value>, transparent var(--tw-mask-radial-to));

----------------------------------------

TITLE: Importing Components and Defining Metadata for Tailwind Play Blog Post in React/JSX
DESCRIPTION: This code snippet imports various React components and defines the metadata for a blog post about Tailwind Play. It includes imports for UI components, author information, and image assets, followed by a metadata object with the post title, description, date, authors, and an excerpt with links to Tailwind documentation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/introducing-tailwind-play/index.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import Link from "next/link";
import { YouTubeVideo } from "@/components/media";
import { adamwathan } from "@/app/blog/authors";
import image from "./card.jpg";

export const meta = {
  title: `Introducing Tailwind Play`,
  description: `Tailwind Play is an advanced online playground for Tailwind CSS that lets you use all of Tailwind's build-time features directly in the browser.`,
  date: "2020-10-07T13:00:00.000Z",
  authors: [adamwathan],
  image,
  excerpt: (
    <>
      To get the most out of Tailwind, you need a build step. It's the only way to be able to customize your{" "}
      <Link href="https://v2.tailwindcss.com/docs/configuration">tailwind.config.js</Link> file, extract components with{" "}
      <Link href="https://v2.tailwindcss.com/docs/functions-and-directives#apply">@apply</Link>, or include{" "}
      <Link href="https://v2.tailwindcss.com/docs/plugins">plugins</Link>.
    </>
  ),
};

----------------------------------------

TITLE: HTML Example for List Style Position Classes
DESCRIPTION: Shows basic HTML examples of using the list-inside and list-outside utility classes with highlighted class names.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/list-style-position.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:list-inside] -->
<ul class="list-inside">
  <li>5 cups chopped Porcini mushrooms</li>
  <!-- ... -->
</ul>

<!-- [!code classes:list-outside] -->
<ul class="list-outside">
  <li>5 cups chopped Porcini mushrooms</li>
  <!-- ... -->
</ul>

----------------------------------------

TITLE: Applying Negative Scroll Padding Values in Tailwind CSS
DESCRIPTION: Shows how to use negative scroll padding values by prefixing the class name with a dash, which converts the value to negative.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-padding.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:-scroll-ps-6] -->
<div class="-scroll-ps-6 snap-x ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Vertical mask-repeat Example in HTML
DESCRIPTION: Demonstrates the use of mask-repeat-y utility to repeat a mask image only vertically. This creates a column of circular masks down the background image.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-repeat.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<div class="mask-repeat-y mask-[url(/img/circle.png)] mask-size-[50px_50px] bg-[url(/img/mountains.jpg)]..."></div>

----------------------------------------

TITLE: Supporting Multiple Value Types in CSS Utility
DESCRIPTION: This CSS snippet shows how to support multiple types of values (theme, bare, and arbitrary) within a CSS utility. It uses multiple `--value()` declarations, allowing for different treatments of each value type if necessary.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_15

LANGUAGE: css
CODE:
/* [!code filename:CSS] */
@theme {
  --tab-size-github: 8;
}

@utility tab-* {
  tab-size: --value([integer]);
  tab-size: --value(integer);
  /* prettier-ignore */
  tab-size: --value(--tab-size-*);
}

----------------------------------------

TITLE: Displaying Caret Color API Table - TypeScript
DESCRIPTION: This snippet renders an API table displaying the available caret color utilities with examples. It grabs color values from a utility file and formats them for display in a structured table format.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/caret-color.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import colors from "./utils/colors";

<ApiTable
  rows={[
    ["caret-inherit", "caret-color: inherit;"],
    ["caret-current", "caret-color: currentColor;"],
    ["caret-transparent", "caret-color: transparent;"],
    ...Object.entries(colors).map(([name, value]) => [
      `caret-${name}`,
      `caret-color: var(--color-${name}); /* ${value} */`,
    ]),
    ["caret-<custom-property>", "caret-color: var(<custom-property>);"]
  ]}
/>

----------------------------------------

TITLE: Customizing Theme for Blur Utilities - React
DESCRIPTION: This snippet shows how to customize the blur utility classes in Tailwind CSS. It enables developers to define new blur classes or override existing ones, providing a flexible solution for tailoring the design system to specific needs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-blur.mdx#2025-04-18_snippet_5

LANGUAGE: javascript
CODE:
<CustomizingYourTheme
  element="img"
  elementAttributes={{ src: "/img/mountains.jpg" }}
  utility="blur"
  name="blur"
  customName="2xs"
  customValue="2px"
/>

----------------------------------------

TITLE: Tailwind CSS Border Radius API Table
DESCRIPTION: This code defines an ApiTable component, likely a custom component, with rows that map Tailwind CSS class names to their corresponding CSS properties for controlling border radius. The flatMap function generates multiple rows for each base class, defining different border radius sizes and behaviors. It includes common sizes like xs, sm, md, lg, xl, 2xl, 3xl, 4xl, none, and full, as well as options for custom values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["rounded", ["border-radius"]],
    ["rounded-s", ["border-start-start-radius", "border-end-start-radius"]],
    ["rounded-e", ["border-start-end-radius", "border-end-end-radius"]],
    ["rounded-t", ["border-top-left-radius", "border-top-right-radius"]],
    ["rounded-r", ["border-top-right-radius", "border-bottom-right-radius"]],
    ["rounded-b", ["border-bottom-right-radius", "border-bottom-left-radius"]],
    ["rounded-l", ["border-top-left-radius", "border-bottom-left-radius"]],
    ["rounded-ss", ["border-start-start-radius"]],
    ["rounded-se", ["border-start-end-radius"]],
    ["rounded-ee", ["border-end-end-radius"]],
    ["rounded-es", ["border-end-start-radius"]],
    ["rounded-tl", ["border-top-left-radius"]],
    ["rounded-tr", ["border-top-right-radius"]],
    ["rounded-br", ["border-bottom-right-radius"]],
    ["rounded-bl", ["border-bottom-left-radius"]],
  ].flatMap(([className, properties]) => [
    [`${className}-xs`, properties.map((property) => `${property}: var(--radius-xs); /* 0.125rem (2px) */`).join("\n")],
    [`${className}-sm`, properties.map((property) => `${property}: var(--radius-sm); /* 0.25rem (4px) */`).join("\n")],
    [`${className}-md`, properties.map((property) => `${property}: var(--radius-md); /* 0.375rem (6px) */`).join("\n")],
    [`${className}-lg`, properties.map((property) => `${property}: var(--radius-lg); /* 0.5rem (8px) */`).join("\n")],
    [`${className}-xl`, properties.map((property) => `${property}: var(--radius-xl); /* 0.75rem (12px) */`).join("\n")],
    [`${className}-2xl`, properties.map((property) => `${property}: var(--radius-2xl); /* 1rem (16px) */`).join("\n")],
    [
      `${className}-3xl`,
      properties.map((property) => `${property}: var(--radius-3xl); /* 1.5rem (24px) */`).join("\n"),
    ],
    [`${className}-4xl`, properties.map((property) => `${property}: var(--radius-4xl); /* 2rem (32px) */`).join("\n")],
    [`${className}-none`, properties.map((property) => `${property}: 0;`).join("\n")],
    [`${className}-full`, properties.map((property) => `${property}: calc(infinity * 1px);`).join("\n")],
    [
      `${className}-(<custom-property>)`,
      properties.map((property) => `${property}: var(<custom-property>);`).join("\n"),
    ],
    [`${className}-[<value>]`, properties.map((property) => `${property}: <value>;`).join("\n")],
  ]}
/>

----------------------------------------

TITLE: Vue.js Transition Component Implementation
DESCRIPTION: Example of implementing fade in/out transitions using Vue.js built-in transition component with Tailwind utility classes. Shows how to configure enter and leave transitions with opacity.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/utility-friendly-transitions-with-tailwindui-react/index.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<transition
  enter-active-class="transition-opacity duration-75"
  enter-from-class="opacity-0"
  enter-to-class="opacity-100"
  leave-active-class="transition-opacity duration-150"
  leave-from-class="opacity-100"
  leave-to-class="opacity-0"
>
  <div v-show="isShowing">
    <!-- Will fade in and out -->
  </div>
</transition>

----------------------------------------

TITLE: Defining Custom Color Palette in Tailwind CSS
DESCRIPTION: Completely disable default colors and define a custom color palette using CSS custom properties with the @theme directive
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/colors.mdx#2025-04-18_snippet_14

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --color-*: initial;
  --color-white: #fff;
  --color-purple: #3f3cbb;
  --color-midnight: #121063;
  --color-tahiti: #3ab7bf;
  --color-bermuda: #78dcca;
}

----------------------------------------

TITLE: Demonstrating Basic Transition Delay Examples in Tailwind CSS
DESCRIPTION: Provides a visual example of different transition delay utilities applied to buttons, showcasing delays of 150ms, 300ms, and 700ms.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-delay.mdx#2025-04-18_snippet_3

LANGUAGE: JSX
CODE:
<Figure hint="Hover each button to see the expected behavior">

<Example>
  {
    <div className="flex flex-col justify-around gap-8 text-sm leading-6 font-bold text-white sm:flex-row sm:gap-0">
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">delay-150</p>
        <button className="rounded-md bg-blue-500 px-4 py-2 text-sm font-semibold text-white delay-150 duration-300 ease-in-out hover:scale-125">
          Button A
        </button>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">delay-300</p>
        <button className="rounded-md bg-blue-500 px-4 py-2 text-sm font-semibold text-white delay-300 duration-300 ease-in-out hover:scale-125">
          Button B
        </button>
      </div>
      <div className="flex shrink-0 flex-col items-center">
        <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">delay-700</p>
        <button className="rounded-md bg-blue-500 px-4 py-2 text-sm font-semibold text-white delay-700 duration-300 ease-in-out hover:scale-125">
          Button C
        </button>
      </div>
    </div>
  }
</Example>

</Figure>

----------------------------------------

TITLE: Center-aligned Text Example
DESCRIPTION: Demonstrates centering text using the text-center utility class in TailwindCSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-align.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code classes:text-center] -->
<p class="text-center">So I started to walk into the water...</p>

----------------------------------------

TITLE: Background Size Auto Example (Tailwind CSS)
DESCRIPTION: This example demonstrates how to use the `bg-auto` utility class in Tailwind CSS to display the background image at its default size. This is the default behavior if no background size is specified. It uses `bg-[url(...)]` to set the image, `bg-center` to center the image, and `bg-no-repeat` to prevent the image from tiling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-size.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
"<div class=\"bg-[url(/img/mountains.jpg)] bg-auto bg-center bg-no-repeat\"></div>"

----------------------------------------

TITLE: Responsive Design for Font Style with Tailwind CSS
DESCRIPTION: This snippet indicates a `ResponsiveDesign` component configured to demonstrate responsive styling using Tailwind CSS. It's set to toggle between `italic` and `not-italic` classes based on responsive design practices.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-style.mdx#2025-04-18_snippet_3

LANGUAGE: tsx
CODE:
<ResponsiveDesign property="font-style" defaultClass="italic" featuredClass="not-italic" element="p" />

----------------------------------------

TITLE: Removing Perspective with Tailwind CSS
DESCRIPTION: Example showing how to use the perspective-none utility to remove a perspective transform from an element. This effectively removes the 3D depth perception.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/perspective.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:perspective-none] -->
<div class="perspective-none ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Background Position API Table Configuration
DESCRIPTION: Defines a comprehensive table of background position utility classes with their corresponding CSS mappings
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-position.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["bg-top-left", "background-position: top left;"],
    ["bg-top", "background-position: top;"],
    ["bg-top-right", "background-position: top right;"],
    ["bg-left", "background-position: left;"],
    ["bg-center", "background-position: center;"],
    ["bg-right", "background-position: right;"],
    ["bg-bottom-left", "background-position: bottom left;"],
    ["bg-bottom", "background-position: bottom;"],
    ["bg-bottom-right", "background-position: bottom right;"],
    ["bg-position-(<custom-property>)", "background-position: var(<custom-property>);"],
    ["bg-position-[<value>]", "background-position: <value>;"],
  ]}
/>

----------------------------------------

TITLE: Incorrect Usage of Responsive Prefix for Mobile in HTML
DESCRIPTION: Demonstrates incorrect usage of the 'sm:' prefix for targeting mobile devices, which actually applies to screens 640px and wider.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/responsive-design.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="sm:text-center"></div>

----------------------------------------

TITLE: Center-alignment Example with Tailwind CSS
DESCRIPTION: Illustrates using self-center utility to align an item along the center of the container's cross axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-self.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="flex items-stretch ...">
  <div>01</div>
  <div class="self-center ...">02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Basic Rotation Example HTML
DESCRIPTION: Demonstrates basic clockwise rotation using Tailwind CSS rotate utilities with classes rotate-45, rotate-90, and rotate-210.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/rotate.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<img class="rotate-45 ..." src="/img/mountains.jpg" />
<img class="rotate-90 ..." src="/img/mountains.jpg" />
<img class="rotate-210 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Rendering API Table for Transition Delay Utilities
DESCRIPTION: Displays an API table showing the available transition delay utility classes and their corresponding CSS properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-delay.mdx#2025-04-18_snippet_2

LANGUAGE: JSX
CODE:
<ApiTable
  rows={[
    ["delay-<number>", "transition-delay: <number>ms;"],
    ["delay-(<custom-property>)", "transition-delay: var(<custom-property>);"],
    ["delay-[<value>]", "transition-delay: <value>;"],
  ]}
/>

----------------------------------------

TITLE: Generated CSS for Class Composition in Tailwind
DESCRIPTION: Illustrates the CSS generated by Tailwind for class composition, showing how CSS variables are used to combine multiple effects on a single property.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_11

LANGUAGE: css
CODE:
.blur-sm {
  --tw-blur: blur(var(--blur-sm));
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-grayscale,);
}
.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-grayscale,);
}

----------------------------------------

TITLE: Defining Backdrop Blur Utilities in JSX
DESCRIPTION: The snippet defines various utilities for applying backdrop blur effects, such as 'backdrop-blur-xs' up to 'backdrop-blur-3xl'. Each utility corresponds to a CSS rule with specific pixel values, providing a range of blur strengths. The customization allows usage of custom properties and values. Dependencies include the 'ApiTable' component from Tailwind CSS, while inputs consist of CSS class names that define blur intensity. Outputs are CSS rules applied when the respective class is used.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-blur.mdx#2025-04-18_snippet_0

LANGUAGE: TypeScript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { CustomizingYourTheme, ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";

export const title = "backdrop-filter: blur()";
export const description = "Utilities for applying backdrop blur filters to an element.";

<ApiTable
  rows=[
    ["backdrop-blur-xs", "backdrop-filter: blur(var(--blur-xs)); /* 4px */"],
    ["backdrop-blur-sm", "backdrop-filter: blur(var(--blur-sm)); /* 8px */"],
    ["backdrop-blur-md", "backdrop-filter: blur(var(--blur-md)); /* 12px */"],
    ["backdrop-blur-lg", "backdrop-filter: blur(var(--blur-lg)); /* 16px */"],
    ["backdrop-blur-xl", "backdrop-filter: blur(var(--blur-xl)); /* 24px */"],
    ["backdrop-blur-2xl", "backdrop-filter: blur(var(--blur-2xl)); /* 40px */"],
    ["backdrop-blur-3xl", "backdrop-filter: blur(var(--blur-3xl)); /* 64px */"],
    ["backdrop-blur-none", "backdrop-filter: ;"],
    ["backdrop-blur-(<custom-property>)", "backdrop-filter: blur(var(<custom-property>));"],
    ["backdrop-blur-[<value>]", "backdrop-filter: blur(<value>);"],
  ]
/>

----------------------------------------

TITLE: Container Scale Min-width Example
DESCRIPTION: HTML example showing the usage of container-based min-width utilities with different breakpoint sizes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/min-width.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="w-40 ...">
  <div class="min-w-lg ...">min-w-lg</div>
  <div class="min-w-md ...">min-w-md</div>
  <div class="min-w-sm ...">min-w-sm</div>
  <div class="min-w-xs ...">min-w-xs</div>
  <div class="min-w-2xs ...">min-w-2xs</div>
  <div class="min-w-3xs ...">min-w-3xs</div>
</div>

----------------------------------------

TITLE: Basic Example of Grid Auto Columns in HTML
DESCRIPTION: This HTML snippet demonstrates how to use the `auto-cols-max` utility to create a grid with automatically sized columns.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-auto-columns.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:auto-cols-max] -->
<div class="grid auto-cols-max grid-flow-col">
  <div>01</div>
  <div>02</div>
  <div>03</div>
</div>

----------------------------------------

TITLE: Flex Auto Item Behavior
DESCRIPTION: Demonstrates using flex-auto to allow flex items to grow and shrink while considering their initial size
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="flex ...">
  <div class="w-14 flex-none ...">01</div>
  <div class="w-64 flex-auto ...">02</div>
  <div class="w-32 flex-auto ...">03</div>
</div>

----------------------------------------

TITLE: Implementing Special Display Modes in Tailwind CSS
DESCRIPTION: This snippet shows how Tailwind CSS handles special display modes like forced colors and inverted colors using CSS media queries.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_77

LANGUAGE: CSS
CODE:
@media (forced-colors: active)

LANGUAGE: CSS
CODE:
@media (inverted-colors: inverted)

----------------------------------------

TITLE: Styling with Pointer Variants in HTML
DESCRIPTION: This HTML snippet demonstrates how to use the `pointer-coarse` variant in Tailwind CSS to adjust the layout and padding of radio button labels on touchscreen devices. Specifically, it adjusts the `mt`, `grid-cols`, `gap`, and `p` classes when a coarse pointing device is detected.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_10

LANGUAGE: html
CODE:
<!-- [!code classes:pointer-coarse:mt-6,pointer-coarse:grid-cols-3,pointer-coarse:gap-4,pointer-coarse:p-4] -->
<fieldset aria-label="Choose a memory option">
  <div class="flex items-center justify-between">
    <div>RAM</div>
    <a href="#"> See performance specs </a>
  </div>
  <div class="mt-4 grid grid-cols-6 gap-2 pointer-coarse:mt-6 pointer-coarse:grid-cols-3 pointer-coarse:gap-4">
    <label class="p-2 pointer-coarse:p-4 ...">
      <input type="radio" name="memory-option" value="4 GB" className="sr-only" />
      <span>4 GB</span>
    </label>
    <!-- ... -->
  </div>
</fieldset>

----------------------------------------

TITLE: React Component Example with Tailwind CSS Drop Shadows
DESCRIPTION: This JSX snippet demonstrates a React component using Tailwind CSS classes to apply different drop shadow sizes (`drop-shadow-md`, `drop-shadow-lg`, `drop-shadow-xl`) to SVG elements within a grid layout.  The component uses `className` to specify the Tailwind CSS classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-drop-shadow.mdx#2025-04-18_snippet_2

LANGUAGE: JSX
CODE:
"{
    <div className=\"grid grid-cols-3 items-end gap-8 bg-white p-8 max-sm:grid-cols-1\">\n      <div className=\"flex flex-col items-center\">\n        <p className=\"mb-3 text-center font-mono text-xs font-medium text-gray-500\">drop-shadow-md</p>\n        <svg className=\"size-28 text-gray-950/100 drop-shadow-md\" viewBox=\"0 0 84 84\">\n          <path\n            d=\"M22.0992 77L2.19922 42.5L22.0992 8H61.8992L81.7992 42.5L61.8992 77H22.0992Z\"\n            className=\"fill-white\"\n          />\n        </svg>\n      </div>\n      <div className=\"flex flex-col items-center\">\n        <p className=\"mb-3 text-center font-mono text-xs font-medium text-gray-500\">drop-shadow-lg</p>\n        <svg className=\"size-28 text-gray-950/100 drop-shadow-lg\" viewBox=\"0 0 84 84\">\n          <path\n            d=\"M22.0992 77L2.19922 42.5L22.0992 8H61.8992L81.7992 42.5L61.8992 77H22.0992Z\"\n            className=\"fill-white\"\n          />\n        </svg>\n      </div>\n      <div className=\"flex flex-col items-center\">\n        <p className=\"mb-3 text-center font-mono text-xs font-medium text-gray-500\">drop-shadow-xl</p>\n        <svg className=\"size-28 text-gray-950/100 drop-shadow-xl\" viewBox=\"0 0 84 84\">\n          <path\n            d=\"M22.0992 77L2.19922 42.5L22.0992 8H61.8992L81.7992 42.5L61.8992 77H22.0992Z\"\n            className=\"fill-white\"\n          />\n        </svg>\n      </div>\n    </div>
  }"

----------------------------------------

TITLE: Using Theme Function in Arbitrary Values
DESCRIPTION: Shows how to use the theme function with arbitrary values for creating custom gradients in HTML.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<div class="bg-[image:linear-gradient(to_right,theme(colors.red.500)_75%,theme(colors.red.500/25%))]">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Justified Text Example
DESCRIPTION: Shows how to justify text using the text-justify utility class in TailwindCSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-align.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:text-justify] -->
<p class="text-justify">So I started to walk into the water...</p>

----------------------------------------

TITLE: Installing Tailwind CSS Line Clamp Plugin
DESCRIPTION: Command to install the @tailwindcss/line-clamp plugin using npm package manager.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/multi-line-truncation-with-tailwindcss-line-clamp/index.mdx#2025-04-18_snippet_0

LANGUAGE: shell
CODE:
npm install @tailwindcss/line-clamp

----------------------------------------

TITLE: Vertical Margin Example in HTML
DESCRIPTION: Example of using the my-8 utility class to add vertical margin to both top and bottom of an element.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/margin.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="my-8 ...">my-8</div>

----------------------------------------

TITLE: HTML Structure for Caption Bottom Positioning - HTML
DESCRIPTION: This HTML snippet provides an example structure of a table with a caption positioned at the bottom using the 'caption-bottom' class. It serves as a guideline for implementing the table layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/caption-side.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<table>
  <caption class="caption-bottom">
    Table 3.1: Professional wrestlers and their signature moves.
  </caption>
  <thead>
    <tr>
      <th>Wrestler</th>
      <th>Signature Move(s)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>"Stone Cold" Steve Austin</td>
      <td>Stone Cold Stunner, Lou Thesz Press</td>
    </tr>
    <tr>
      <td>Bret "The Hitman" Hart</td>
      <td>The Sharpshooter</td>
    </tr>
    <tr>
      <td>Razor Ramon</td>
      <td>Razor's Edge, Fallaway Slam</td>
    </tr>
  </tbody>
</table>

----------------------------------------

TITLE: Heading Element Reset in Preflight CSS
DESCRIPTION: Shows how Preflight removes default styling from heading elements, making them the same size and weight as normal text to prevent deviation from the type scale.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_4

LANGUAGE: CSS
CODE:
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

----------------------------------------

TITLE: Importing Tailwind CSS Backdrop Contrast Components
DESCRIPTION: Imports React components and utility types used for rendering backdrop contrast documentation and examples
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-contrast.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";

----------------------------------------

TITLE: Enabling Removal of Deprecated Gap Utilities
DESCRIPTION: Configuration to enable the removal of deprecated gap utilities using the new feature flag system.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_2

LANGUAGE: javascript
CODE:
module.exports = {
  future: {
    removeDeprecatedGapUtilities: true
  }
}

----------------------------------------

TITLE: Setting Arbitrary CSS Properties in HTML with Tailwind CSS
DESCRIPTION: This snippet exemplifies how to use arbitrary CSS properties like custom variables with Tailwind. The classes `[--gutter-width:1rem],lg:[--gutter-width:2rem]` adjust gutter widths based on breakpoints.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_15

LANGUAGE: html
CODE:
<div class="[--gutter-width:1rem] lg:[--gutter-width:2rem]">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Wrapping Anywhere vs Break-word Comparison
DESCRIPTION: HTML example comparing wrap-anywhere and wrap-break-word utilities in flex containers with profile cards.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overflow-wrap.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="flex max-w-sm">
  <img class="size-16 rounded-full" src="/img/profile.jpg" />
  <div class="wrap-break-word">
    <p class="font-medium">Jay Riemenschneider</p>
    <p>jason.riemenschneider@vandelayindustries.com</p>
  </div>
</div>
<div class="flex max-w-sm">
  <img class="size-16 rounded-full" src="/img/profile.jpg" />
  <div class="wrap-anywhere">
    <p class="font-medium">Jay Riemenschneider</p>
    <p>jason.riemenschneider@vandelayindustries.com</p>
  </div>
</div>

----------------------------------------

TITLE: Styling Checked Inputs with Tailwind CSS
DESCRIPTION: This example shows how to use the checked variant in Tailwind CSS to style a checkbox when it's checked. It changes the background color of checked checkboxes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_92

LANGUAGE: html
CODE:
<input type="checkbox" class="appearance-none checked:bg-blue-500 ..." />

----------------------------------------

TITLE: HTML Structure for Subgrid Implementation
DESCRIPTION: This snippet showcases the HTML structure required to create a grid layout with subgrid functionality using Tailwind CSS classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-template-columns.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="grid grid-cols-4 gap-4">
  <div>01</div>
  <!-- ... -->
  <div>05</div>
  <div class="col-span-3 grid grid-cols-subgrid gap-4">
    <div class="col-start-2">06</div>
  </div>
</div>

----------------------------------------

TITLE: Tailwind CSS Grid Auto Rows API Table
DESCRIPTION: This component renders a table that displays the Tailwind CSS classes and corresponding CSS for the `grid-auto-rows` property. It provides a quick reference for the available utilities and their CSS values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-auto-rows.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
import { ApiTable } from \"@/components/api-table.tsx\";
import { ResponsiveDesign, UsingACustomValue } from \"@/components/content.tsx\";

export const title = \"grid-auto-rows\";
export const description = \"Utilities for controlling the size of implicitly-created grid rows.\";

<ApiTable
  rows={[
    [\"auto-rows-auto\", \"grid-auto-rows: auto;\"],
    [\"auto-rows-min\", \"grid-auto-rows: min-content;\"],
    [\"auto-rows-max\", \"grid-auto-rows: max-content;\"],
    [\"auto-rows-fr\", \"grid-auto-rows: minmax(0, 1fr);\"],
    [\"auto-rows-(<custom-property>)\", \"grid-auto-rows: var(<custom-property>);\"],
    [\"auto-rows-[<value>]\", \"grid-auto-rows: <value>;\"],
  ]}
/>

----------------------------------------

TITLE: MDX Content Example with React Components
DESCRIPTION: Demonstrates the syntax for writing MDX content that includes embedded React components within markdown.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/building-the-tailwind-blog/index.mdx#2025-04-18_snippet_1

LANGUAGE: markdown
CODE:
# My first MDX post

MDX is a really cool authoring format because it lets
you embed React components right in your markdown:

<MyComponent myProp={5} />

How cool is that?

----------------------------------------

TITLE: Responsive User Select Design
DESCRIPTION: Renders responsive design component for user select property
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/user-select.mdx#2025-04-18_snippet_7

LANGUAGE: jsx
CODE:
<ResponsiveDesign property="user-select" defaultClass="select-none" featuredClass="select-all" />

----------------------------------------

TITLE: Mask Clip Utility API Table Definition
DESCRIPTION: React component that defines an API reference table for mask-clip utilities in Tailwind CSS. Lists all available mask-clip utility classes and their corresponding CSS properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-clip.mdx#2025-04-18_snippet_4

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["mask-clip-border", "mask-clip: border-box;"],
    ["mask-clip-padding", "mask-clip: padding-box;"],
    ["mask-clip-content", "mask-clip: content-box;"],
    ["mask-clip-fill", "mask-clip: fill-box;"],
    ["mask-clip-stroke", "mask-clip: stroke-box;"],
    ["mask-clip-view", "mask-clip: view-box;"],
    ["mask-no-clip", "mask-clip: no-clip;"],
  ]}
/>

----------------------------------------

TITLE: Mask Position and Shape Utilities for TailwindCSS
DESCRIPTION: Defines utility classes for controlling mask position (top, bottom, left, right, center) and shape (circle, ellipse) properties
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_4

LANGUAGE: css
CODE:
--tw-mask-radial-position: center;
--tw-mask-radial-shape: circle;

----------------------------------------

TITLE: Using Custom Font Size Value - JavaScript
DESCRIPTION: This snippet demonstrates the use of a custom value for font size in Tailwind CSS, showcasing flexibility in styling elements dynamically.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-size.mdx#2025-04-18_snippet_3

LANGUAGE: javascript
CODE:
<UsingACustomValue element="p" utility="text" name="font size" value="14px" variable="text-size" dataType="length" />

----------------------------------------

TITLE: Applying RTL and LTR Variants in HTML
DESCRIPTION: Shows how to use rtl and ltr variants for conditional styling in right-to-left and left-to-right layouts.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_59

LANGUAGE: html
CODE:
<div class="group flex items-center">
  <img class="h-12 w-12 shrink-0 rounded-full" src="..." alt="" />
  <div class="ltr:ml-3 rtl:mr-3">
    <p class="text-gray-700 group-hover:text-gray-900 ...">...</p>
    <p class="text-gray-500 group-hover:text-gray-700 ...">...</p>
  </div>
</div>

----------------------------------------

TITLE: Demonstrating Normal Word Break in Tailwind CSS
DESCRIPTION: Shows an example of using the break-normal utility class to add line breaks only at normal word break points.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/word-break.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code classes:break-normal] -->
<p class="break-normal">The longest word in any of the major...</p>

----------------------------------------

TITLE: Invalid Child Styling Override Example in TailwindCSS
DESCRIPTION: Shows an incorrect attempt to override child styling due to specificity constraints. Direct utility classes on children cannot override styles applied using the * variant.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_64

LANGUAGE: html
CODE:
<ul class="*:bg-sky-50 ...">
  <li class="bg-red-50 ...">Sales</li>
  <li>Marketing</li>
  <li>SEO</li>
  <!-- ... -->
</ul>

----------------------------------------

TITLE: Basic HTML Filter Example - HTML
DESCRIPTION: This HTML snippet demonstrates how to apply Tailwind CSS filter utilities like 'blur-xs' and 'grayscale' directly to img elements. It offers a basic example showing how images can have a blur or grayscale effect applied. Requires HTML setup with Tailwind CSS included.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter.mdx#2025-04-18_snippet_2

LANGUAGE: HTML
CODE:
<img class=\"blur-xs\" src=\"/img/mountains.jpg\" />\n<img class=\"grayscale\" src=\"/img/mountains.jpg\" />\n<img class=\"blur-xs grayscale\" src=\"/img/mountains.jpg\" />

----------------------------------------

TITLE: Generating Example Backdrop Brightness Elements
DESCRIPTION: This JavaScript snippet uses example components to create elements with different levels of backdrop brightness. It relies on 'Example' and 'Figure' components to demonstrate utility classes such as 'backdrop-brightness-50'.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-brightness.mdx#2025-04-18_snippet_1

LANGUAGE: JavaScript
CODE:
<Figure>

<Example padding={false}>
  {
    <div className="flex scroll-p-8 justify-start overflow-scroll sm:block sm:overflow-visible">
      <div className="flex shrink-0 items-center justify-around gap-6 p-8 font-mono font-bold sm:gap-4">
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-brightness-50
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-brightness-50"></div>
            <img
              className="h-32 w-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-brightness-150
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-brightness-150"></div>
            <img
              className="h-32 w-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
      </div>
    </div>
  }
</Example>

</Figure>

----------------------------------------

TITLE: Dynamic Peer Variant in HTML
DESCRIPTION: This HTML snippet shows an example of the creation of dynamic peer variants using the `&` character. It applies the `block` class to a sibling div when the input is the third of its type.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_20

LANGUAGE: html
CODE:
"<!-- [!code word:peer-[\:nth-of-type(3)_&\\]\:block] -->
<div>
  <input type="text" class="peer" />
  <div class="peer-[:nth-of-type(3)_&]:block hidden">
    <!-- ... -->
  </div>
</div>"

----------------------------------------

TITLE: Updating Ring Width and Color in HTML
DESCRIPTION: Highlights the adjustments required for the ring utility in Tailwind CSS v4, including setting the ring width to 1px in `ring-3` and updating the default color.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_7

LANGUAGE: HTML
CODE:
<input class="ring ring-blue-500" />

LANGUAGE: HTML
CODE:
<input class="ring-3 ring-blue-500" />

LANGUAGE: HTML
CODE:
<button class="focus:ring ...">

LANGUAGE: HTML
CODE:
<button class="focus:ring-3 ...">

LANGUAGE: HTML
CODE:
<button class="focus:ring-3 focus:ring-blue-500 ...">

----------------------------------------

TITLE: Horizontal Resizing with Tailwind CSS
DESCRIPTION: Illustrates how to make an element horizontally resizable using the 'resize-x' class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/resize.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:resize-x] -->
<textarea class="resize-x rounded-md ..."></textarea>

----------------------------------------

TITLE: Implementing Break-After Utilities in HTML
DESCRIPTION: The HTML example shows how to use Tailwind CSS classes like break-after-column and break-after-page to control the behavior of page breaks after elements. It requires Tailwind CSS configured in the project to render the break-after classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/break-after.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<!-- [!code classes:break-after-column] -->\n<div class=\"columns-2\">\n  <p>Well, let me tell you something, ...</p>\n  <p class=\"break-after-column\">Sure, go ahead, laugh...</p>\n  <p>Maybe we can live without...</p>\n  <p>Look. If you think this is...</p>\n</div>

----------------------------------------

TITLE: Demonstrating Text Truncation in Tailwind CSS
DESCRIPTION: Shows an example of using the 'truncate' utility class to truncate overflowing text with an ellipsis in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-overflow.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:truncate] -->
<p class="truncate">The longest word in any of the major...</p>

----------------------------------------

TITLE: Adding Ellipsis to Overflowing Text in Tailwind CSS
DESCRIPTION: Demonstrates the use of the 'text-ellipsis' utility class to add an ellipsis to overflowing text in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-overflow.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<!-- [!code classes:text-ellipsis] -->
<p class="overflow-hidden text-ellipsis">The longest word in any of the major...</p>

----------------------------------------

TITLE: Responsive Design for Backdrop Sepia
DESCRIPTION: Configures responsive design properties for backdrop sepia utilities, allowing for different classes to be utilized based on screen sizes in a React component environment.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-sepia.mdx#2025-04-18_snippet_4

LANGUAGE: JSX
CODE:
<ResponsiveDesign property="backdrop-filter: sepia()" defaultClass="backdrop-sepia" featuredClass="backdrop-sepia-0" />

----------------------------------------

TITLE: Tailwind CSS Drop Shadow API Table
DESCRIPTION: This API table defines the available Tailwind CSS classes for applying drop shadows, along with their corresponding CSS `filter: drop-shadow()` values. It also includes definitions for shadow colors using CSS variables.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-drop-shadow.mdx#2025-04-18_snippet_0

LANGUAGE: HTML
CODE:
"<ApiTable
  rows={[
    ["drop-shadow-xs", "filter: drop-shadow(var(--drop-shadow-xs)); /* 0 1px 1px rgb(0 0 0 / 0.05) */"],
    ["drop-shadow-sm", "filter: drop-shadow(var(--drop-shadow-sm)); /* 0 1px 2px rgb(0 0 0 / 0.15) */"],
    ["drop-shadow-md", "filter: drop-shadow(var(--drop-shadow-md)); /* 0 3px 3px rgb(0 0 0 / 0.12) */"],
    ["drop-shadow-lg", "filter: drop-shadow(var(--drop-shadow-lg)); /* 0 4px 4px rgb(0 0 0 / 0.15) */"],
    ["drop-shadow-xl", "filter: drop-shadow(var(--drop-shadow-xl); /* 0 9px 7px rgb(0 0 0 / 0.1) */"],
    ["drop-shadow-2xl", "filter: drop-shadow(var(--drop-shadow-2xl)); /* 0 25px 25px rgb(0 0 0 / 0.15) */"],
    ["drop-shadow-none", "filter: drop-shadow(0 0 #0000);"],
    ["drop-shadow-(<custom-property>)", "filter: drop-shadow(var(<custom-property>));"],
    ["drop-shadow-(color:<custom-property>)", "--tw-drop-shadow-color: var(<custom-property>);"],
    ["drop-shadow-[<value>]", "filter: drop-shadow(<value>);"],
    ["drop-shadow-inherit", "--tw-drop-shadow-color: inherit;"],
    ["drop-shadow-current", "--tw-drop-shadow-color: currentColor;"],
    ["drop-shadow-transparent", "--tw-drop-shadow-color: transparent;"],
    ...Object.entries(colors).map(([name, value]) => [
      `drop-shadow-${name}`,
      `--tw-drop-shadow-color: var(--color-${name}); /* ${value} */`,
    ]),
  ]}
/>"

----------------------------------------

TITLE: Defining a Dropdown Menu in Custom HTML Format
DESCRIPTION: This snippet illustrates how to author a dropdown menu using a custom HTML syntax to simplify the conversion process to React and Vue. The custom elements serve as placeholders for actual components, ensuring a streamlined transformation to multiple code formats.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/building-react-and-vue-support-for-tailwind-ui/index.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<x-menu as="div" id="options-menu" class="relative inline-block text-left">
  <div>
    <x-menu-button
      class="inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-gray-100 focus:outline-none"
    >
      Options
      <x-heroicon type="solid" name="chevron-down" class="-mr-1 ml-2 h-5 w-5" />
    </x-menu-button>
  </div>

  <x-transition
    as="x-fragment"
    enter="transition ease-out duration-100"
    enter-start="transform opacity-0 scale-95"
    enter-end="transform opacity-100 scale-100"
    leave="transition ease-in duration-75"
    leave-start="transform opacity-100 scale-100"
    leave-end="transform opacity-0 scale-95"
  >
    <x-menu-items
      class="ring-opacity-5 absolute right-0 mt-2 w-56 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black focus:outline-none"
    >
      <div class="py-1">
        <x-menu-item>
          <a
            href="#"
            class="block px-4 py-2 text-sm"
            x-active-class="bg-gray-100 text-gray-900"
            x-not-active-class="text-gray-700"
          >
            Account settings
          </a>
        </x-menu-item>
        <x-menu-item>
          <a
            href="#"
            class="block px-4 py-2 text-sm"
            x-active-class="bg-gray-100 text-gray-900"
            x-not-active-class="text-gray-700"
          >
            Support
          </a>
        </x-menu-item>
        <x-menu-item>
          <a
            href="#"
            class="block px-4 py-2 text-sm"
            x-active-class="bg-gray-100 text-gray-900"
            x-not-active-class="text-gray-700"
          >
            License
          </a>
        </x-menu-item>
      </div>
    </x-menu-items>
  </x-transition>
</x-menu>

----------------------------------------

TITLE: Implementing Object Position with Tailwind CSS in React JSX
DESCRIPTION: This code snippet demonstrates the use of Tailwind CSS utilities for object positioning in a React component. It creates a grid of image containers showcasing different object position values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-position.mdx#2025-04-18_snippet_3

LANGUAGE: JSX
CODE:
<div className="flex snap-x scroll-p-4 items-end overflow-x-scroll overflow-y-hidden p-8 pt-16 sm:grid sm:grid-cols-3 sm:gap-16">
  <div className="relative w-40 shrink-0 snap-start snap-always sm:w-auto">
    <p className="absolute inset-x-0 top-0 mb-3 -translate-y-8 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
      object-top-left
    </p>
    <div className="group relative mx-auto size-20 rounded-lg">
      <div className="relative z-10 h-full w-full rounded-md bg-[url(https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90)] bg-[size:8rem] bg-top-left ring-1 ring-black/10 ring-inset"></div>
      <img
        className="absolute top-0 left-0 size-32 max-w-none overflow-hidden rounded-md opacity-0 transition duration-100 sm:group-hover:opacity-25"
        src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
      />
    </div>
  </div>
  <!-- More similar div structures for other object positions -->
</div>

----------------------------------------

TITLE: Setting Line Height Independently with Tailwind CSS
DESCRIPTION: Example demonstrating how to use leading-6, leading-7, and leading-8 utilities to set the line height of paragraphs independent of their font size.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/line-height.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<p class="text-sm leading-6">So I started to walk into the water...</p>
<p class="text-sm leading-7">So I started to walk into the water...</p>
<p class="text-sm leading-8">So I started to walk into the water...</p>

----------------------------------------

TITLE: Using not-forced-colors Variant in HTML
DESCRIPTION: This snippet demonstrates how to use the not-forced-colors variant in Tailwind CSS to apply styles when the user is not using a forced colors mode. It applies the appearance-none class conditionally.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_41

LANGUAGE: html
CODE:
<div class="not-forced-colors:appearance-none ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Implementing Pulse Animation in HTML
DESCRIPTION: Example of using animate-pulse utility class for creating a skeleton loader animation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/animation.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="mx-auto w-full max-w-sm rounded-md border border-blue-300 p-4">
  <div class="flex animate-pulse space-x-4">
    <div class="size-10 rounded-full bg-gray-200"></div>
    <div class="flex-1 space-y-6 py-1">
      <div class="h-2 rounded bg-gray-200"></div>
      <div class="space-y-3">
        <div class="grid grid-cols-3 gap-4">
          <div class="col-span-2 h-2 rounded bg-gray-200"></div>
          <div class="col-span-1 h-2 rounded bg-gray-200"></div>
        </div>
        <div class="h-2 rounded bg-gray-200"></div>
      </div>
    </div>
  </div>
</div>

----------------------------------------

TITLE: Applying Slashed Zero
DESCRIPTION: Use the slashed-zero utility to display a zero with a slash in fonts that support this feature
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-variant-numeric.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<p class="slashed-zero ...">0</p>

----------------------------------------

TITLE: HTML Markup with Tailwind CSS Utility Classes
DESCRIPTION: Example of using custom breakpoint and color utility classes in HTML markup
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-alpha/index.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="max-w-lg 3xl:max-w-xl">
  <h1 class="font-display text-4xl">
    Data to <span class="text-neon-cyan">enrich</span> your online business
  </h1>
</div>

----------------------------------------

TITLE: Creating an API Table Using Custom Properties
DESCRIPTION: This JavaScript snippet creates an ApiTable component setup with Tailwind CSS classes for columns. It specifies various column utilities such as fixed numbers, responsive sizes, and custom values. These utilities allow easy management of column layouts in a web application.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/columns.mdx#2025-04-18_snippet_1

LANGUAGE: JavaScript
CODE:
<ApiTable
  rows=[
    ["columns-<number>", "columns: <number>;"],
    ["columns-3xs", "columns: var(--container-3xs); /* 16rem (256px) */"],
    ["columns-2xs", "columns: var(--container-2xs); /* 18rem (288px) */"],
    ["columns-xs", "columns: var(--container-xs); /* 20rem (320px) */"],
    ["columns-sm", "columns: var(--container-sm); /* 24rem (384px) */"],
    ["columns-md", "columns: var(--container-md); /* 28rem (448px) */"],
    ["columns-lg", "columns: var(--container-lg); /* 32rem (512px) */"],
    ["columns-xl", "columns: var(--container-xl); /* 36rem (576px) */"],
    ["columns-2xl", "columns: var(--container-2xl); /* 42rem (672px) */"],
    ["columns-3xl", "columns: var(--container-3xl); /* 48rem (768px) */"],
    ["columns-4xl", "columns: var(--container-4xl); /* 56rem (896px) */"],
    ["columns-5xl", "columns: var(--container-5xl); /* 64rem (1024px) */"],
    ["columns-6xl", "columns: var(--container-6xl); /* 72rem (1152px) */"],
    ["columns-7xl", "columns: var(--container-7xl); /* 80rem (1280px) */"],
    ["columns-auto", "columns: auto;"],
    ["columns-(<custom-property>)", "columns: var(<custom-property>);"],
    ["columns-[<value>]", "columns: <value>;"],
  ]
/>

----------------------------------------

TITLE: Registering a Functional Utility in CSS
DESCRIPTION: This CSS snippet demonstrates how to register a functional utility that accepts an argument using the `@utility` directive. It creates a `tab-*` utility that sets the `tab-size` property based on the provided value.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_10

LANGUAGE: css
CODE:
/* [!code filename:CSS] */
@utility tab-* {
  /* prettier-ignore */
  tab-size: --value(--tab-size-*);
}

----------------------------------------

TITLE: Defining SVG Mask Type Utilities in Tailwind CSS
DESCRIPTION: This snippet defines the available utilities for controlling SVG mask types in Tailwind CSS. It includes classes for both alpha and luminance mask types.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-type.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["mask-type-alpha", "mask-type: alpha;"],
    ["mask-type-luminance", "mask-type: luminance;"],
  ]}
/>

----------------------------------------

TITLE: Scaling Elements on Y-Axis with Tailwind CSS
DESCRIPTION: Demonstrates how to scale elements vertically using Tailwind's scale-y utilities. Shows examples of 75%, 100%, and 125% scaling along the y-axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scale.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<img class="scale-y-75 ..." src="/img/mountains.jpg" />
<img class="scale-y-100 ..." src="/img/mountains.jpg" />
<img class="scale-y-125 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Defining Transition Behavior API Table - TypeScript
DESCRIPTION: This snippet defines an ApiTable component that lists utilities for controlling transition behaviors in Tailwind CSS, specifically 'transition-normal' and 'transition-discrete'. It indicates how transitions are managed through CSS properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-behavior.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
import { ApiTable } from "@/components/api-table.tsx";

<ApiTable
  rows={[
    ["transition-normal", "transition-behavior: normal;"],
    ["transition-discrete", "transition-behavior: allow-discrete;"],
  ]}
/>

----------------------------------------

TITLE: Normal Content Alignment in Grid Layout
DESCRIPTION: Example showing default content positioning using content-normal utility
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/align-content.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<div class="grid h-56 grid-cols-3 content-normal gap-4 ...">
  <div>01</div>
  <div>02</div>
  <div>03</div>
  <div>04</div>
  <div>05</div>
</div>

----------------------------------------

TITLE: Defining Color Variables in CSS using OKLCH
DESCRIPTION: This snippet defines color variables using the OKLCH color space for various shades of slate, gray, zinc, neutral, and stone. It also includes black and white colors.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_27

LANGUAGE: CSS
CODE:
  --color-slate-700: oklch(0.372 0.044 257.287);
  --color-slate-800: oklch(0.279 0.041 260.031);
  --color-slate-900: oklch(0.208 0.042 265.755);
  --color-slate-950: oklch(0.129 0.042 264.695);

  --color-gray-50: oklch(0.985 0.002 247.839);
  --color-gray-100: oklch(0.967 0.003 264.542);
  --color-gray-200: oklch(0.928 0.006 264.531);
  --color-gray-300: oklch(0.872 0.01 258.338);
  --color-gray-400: oklch(0.707 0.022 261.325);
  --color-gray-500: oklch(0.551 0.027 264.364);
  --color-gray-600: oklch(0.446 0.03 256.802);
  --color-gray-700: oklch(0.373 0.034 259.733);
  --color-gray-800: oklch(0.278 0.033 256.848);
  --color-gray-900: oklch(0.21 0.034 264.665);
  --color-gray-950: oklch(0.13 0.028 261.692);

  --color-zinc-50: oklch(0.985 0 0);
  --color-zinc-100: oklch(0.967 0.001 286.375);
  --color-zinc-200: oklch(0.92 0.004 286.32);
  --color-zinc-300: oklch(0.871 0.006 286.286);
  --color-zinc-400: oklch(0.705 0.015 286.067);
  --color-zinc-500: oklch(0.552 0.016 285.938);
  --color-zinc-600: oklch(0.442 0.017 285.786);
  --color-zinc-700: oklch(0.37 0.013 285.805);
  --color-zinc-800: oklch(0.274 0.006 286.033);
  --color-zinc-900: oklch(0.21 0.006 285.885);
  --color-zinc-950: oklch(0.141 0.005 285.823);

  --color-neutral-50: oklch(0.985 0 0);
  --color-neutral-100: oklch(0.97 0 0);
  --color-neutral-200: oklch(0.922 0 0);
  --color-neutral-300: oklch(0.87 0 0);
  --color-neutral-400: oklch(0.708 0 0);
  --color-neutral-500: oklch(0.556 0 0);
  --color-neutral-600: oklch(0.439 0 0);
  --color-neutral-700: oklch(0.371 0 0);
  --color-neutral-800: oklch(0.269 0 0);
  --color-neutral-900: oklch(0.205 0 0);
  --color-neutral-950: oklch(0.145 0 0);

  --color-stone-50: oklch(0.985 0.001 106.423);
  --color-stone-100: oklch(0.97 0.001 106.424);
  --color-stone-200: oklch(0.923 0.003 48.717);
  --color-stone-300: oklch(0.869 0.005 56.366);
  --color-stone-400: oklch(0.709 0.01 56.259);
  --color-stone-500: oklch(0.553 0.013 58.071);
  --color-stone-600: oklch(0.444 0.011 73.639);
  --color-stone-700: oklch(0.374 0.01 67.558);
  --color-stone-800: oklch(0.268 0.007 34.298);
  --color-stone-900: oklch(0.216 0.006 56.043);
  --color-stone-950: oklch(0.147 0.004 49.25);

  --color-black: #000;
  --color-white: #fff;

----------------------------------------

TITLE: Creating Hue Rotate API Table with React
DESCRIPTION: This snippet creates an API table to describe Tailwind CSS classes for backdrop hue rotation filters. The table rows specify how various utility class formats correspond to CSS 'backdrop-filter' properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-hue-rotate.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { ApiTable } from "@/components/api-table";

<ApiTable
  rows={[
    ["backdrop-hue-rotate-<number>", "backdrop-filter: hue-rotate(<number>deg);"]|
    ["-backdrop-hue-rotate-<number>", "backdrop-filter: hue-rotate(calc(<number>deg * -1));"],
    ["backdrop-hue-rotate-(<custom-property>)", "backdrop-filter: hue-rotate(var(<custom-property>));"],
    ["backdrop-hue-rotate-[<value>]", "backdrop-filter: hue-rotate(<value>);"]
  ]}
/>

----------------------------------------

TITLE: Configuring Blog Post Metadata in NextJS
DESCRIPTION: Defines the metadata configuration for a blog post including imports for author information, images, and NextJS components. Exports a meta object containing the post's title, description, date, authors, image, and JSX excerpt.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/welcoming-brad-cornes-to-the-tailwind-team/index.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { adamwathan } from "@/app/blog/authors";
import card from "./card.jpg";
import { Image } from "@/components/media";
import Link from "next/link";
import image from "../introducing-linting-for-tailwindcss-intellisense/card.jpg";

export const meta = {
  title: "Welcoming Brad Cornes to the Team",
  description: `Back in June, Brad Cornes joined our company as our very first team member. We didn't have a blog to announce it back then, but better late than never right?`,
  date: "2020-07-18T15:43:02.988Z",
  authors: [adamwathan],
  image: card,
  excerpt: (
    <>
      Back in June, <Link href="https://twitter.com/bradlc">Brad Cornes</Link> joined our company as our very first team
      member. We didn't have a blog to announce it back then, but better late than never right?
    </>
  ),
};

----------------------------------------

TITLE: HTML Grid Row Span Example
DESCRIPTION: This HTML snippet demonstrates how to use the `row-span-<number>` utilities in Tailwind CSS to control the number of rows an element spans within a grid layout. The example uses `row-span-3` and `row-span-2` to define the row spans of grid items.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-row.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
"<div class=\"grid grid-flow-col grid-rows-3 gap-4\">\n  <div class=\"row-span-3 ...\">01</div>\n  <div class=\"col-span-2 ...\">02</div>\n  <div class=\"col-span-2 row-span-2 ...\">03</div>\n</div>"

----------------------------------------

TITLE: Aligning Items with Baseline Last in React JSX
DESCRIPTION: This JSX snippet demonstrates how to use the `items-baseline-last` utility in Tailwind CSS to align items to the last baseline within a grid layout. The snippet contains profile information with a name, description, and link.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_11

LANGUAGE: jsx
CODE:
{
    <div className="mx-auto grid max-w-md divide-y divide-gray-100 border-x border-x-gray-200 text-gray-700 dark:divide-gray-800 dark:border-x-gray-800 dark:bg-gray-950/10 dark:text-gray-300">
      <div className="grid grid-cols-[1fr_auto] items-baseline-last gap-x-4 px-4 py-6">
        <div className="grid grid-cols-[auto_1fr] gap-x-4 max-sm:grid-cols-1">
          <img
            className="size-[2rem] rounded-full"
            src="https://spotlight.tailwindui.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Favatar.51a13c67.jpg&w=128&q=80"
            alt=""
          />
          <div className="font-semibold text-gray-900 sm:col-start-2 dark:text-white">Spencer Sharp</div>
          <p className="text-sm sm:col-start-2">Working on the future of astronaut recruitment at Space Recruit.</p>
        </div>
        <a
          href="#"
          className="font-mono text-xs font-medium text-gray-400 underline hover:text-blue-500 dark:text-gray-500"
        >
          spacerecruit.com
        </a>
      </div>
      <div className="grid grid-cols-[1fr_auto] items-baseline-last gap-x-4 px-4 py-6">
        <div className="grid grid-cols-[auto_1fr] gap-x-4 max-sm:grid-cols-1">
          <img
            className="size-[2rem] rounded-full"
            src="https://images.unsplash.com/photo-1590895340509-793cb98788c9?q=80&w=256&h=256&&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
            alt=""
          />
          <div className="font-semibold text-gray-900 sm:col-start-2 dark:text-white">Alex Reed</div>
          <p className="text-sm sm:col-start-2">A multidisciplinary designer.</p>
        </div>
        <a
          href="#"
          className="font-mono text-xs font-medium text-gray-400 underline hover:text-blue-500 dark:text-gray-500"
        >
          alex-reed.com
        </a>
      </div>
    </div>
  }


----------------------------------------

TITLE: Basic Mix Blend Mode Example
DESCRIPTION: HTML example demonstrating basic usage of mix-blend-multiply utility with colored circles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mix-blend-mode.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="flex justify-center -space-x-14">
  <div class="bg-blue-500 mix-blend-multiply ..."></div>
  <div class="bg-pink-500 mix-blend-multiply ..."></div>
</div>

----------------------------------------

TITLE: Handling Fraction Styles
DESCRIPTION: Implement diagonal and stacked fraction utilities to replace slash-separated numbers with styled fractions
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-variant-numeric.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<p class="diagonal-fractions ...">1/2 3/4 5/6</p>

LANGUAGE: html
CODE:
<p class="stacked-fractions ...">1/2 3/4 5/6</p>

----------------------------------------

TITLE: Styling with Group Data Attributes in HTML
DESCRIPTION: This HTML snippet shows how to style elements based on data attributes of a parent group. It applies `p-8` to the inner div only when the parent has `data-size="large"`.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_13

LANGUAGE: html
CODE:
"<div data-size="large" class="group">
  <div class="group-data-[size=large]:p-8">
    <!-- Will apply `p-8` -->
  </div>
</div>

<div data-size="medium" class="group">
  <div class="group-data-[size=large]:p-8">
    <!-- Will not apply `p-8` -->
  </div>
</div>"

----------------------------------------

TITLE: Migrating to Flex/Grid Layouts in HTML
DESCRIPTION: Provides an example of restructuring layout code to reduce performance issues by using flex or grid layout with gap utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_9

LANGUAGE: HTML
CODE:
<div class="space-y-4 p-4">
  <label for="name">Name</label>
  <input type="text" name="name" />
</div>

LANGUAGE: HTML
CODE:
<div class="flex flex-col gap-4 p-4">
  <label for="name">Name</label>
  <input type="text" name="name" />
</div>

----------------------------------------

TITLE: Basic Scroll Snap Gallery HTML Implementation
DESCRIPTION: A simplified HTML version of the scroll snap gallery using Tailwind CSS classes snap-x and snap-center for horizontal scrolling behavior.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3/index.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="snap-x ...">
  <div class="snap-center ...">
    <img src="https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?auto=format&fit=crop&w=320&h=160&q=80" />
  </div>
  <div class="snap-center ...">
    <img src="https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?auto=format&fit=crop&w=320&h=160&q=80" />
  </div>
  <!-- Additional image elements -->
</div>

----------------------------------------

TITLE: Using Custom Hue-Rotate Values - JSX
DESCRIPTION: Illustrates the implementation of custom values for hue rotation in Tailwind CSS. This snippet allows developers to set hue rotation using any defined value, such as radians, enhancing customization in design.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-hue-rotate.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<UsingACustomValue
  element="img"
  elementAttributes={{ src: "/img/mountains.jpg" }}
  utility="hue-rotate"
  value="3.142rad"
  name="hue rotation"
/>

----------------------------------------

TITLE: Responsive Design for Box Decoration Break Utilities
DESCRIPTION: This snippet demonstrates the application of responsive design principles by configuring the 'ResponsiveDesign' component. It illustrates how to set default and featured classes to effectively manage the presentation of the 'box-decoration-break' utility based on viewport size.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-decoration-break.mdx#2025-04-18_snippet_2

LANGUAGE: typescript
CODE:
<ResponsiveDesign
  property="box-decoration-break"
  defaultClass="box-decoration-clone"
  featuredClass="box-decoration-slice"
/>

----------------------------------------

TITLE: Configuring Tailwind CSS Using TypeScript
DESCRIPTION: Example of configuring Tailwind CSS using TypeScript with type validation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_2

LANGUAGE: ts
CODE:
import type { Config } from 'tailwindcss'

export default {
  content: [],
  theme: {
    extend: {},
  },
  plugins: [],
} satisfies Config

----------------------------------------

TITLE: Defining SVG Symbol for Gradient Color Stop in mask-image Documentation
DESCRIPTION: SVG symbol definition that uses the checkerboard pattern to create a gradient color stop demonstration for the mask-image documentation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_1

LANGUAGE: JSX
CODE:
<svg className="hidden">
  <symbol id="gradient-color-stop" viewBox="0 0 32 34">
    <path
      fill="url(#checkerboard)"
      stroke="#000"
      strokeOpacity=".05"
      d="M5 .5h22A3.5 3.5 0 0 1 30.5 4v19.6a3.5 3.5 0 0 1-1.853 3.088L16 33.433 3.353 26.688A3.5 3.5 0 0 1 1.5 23.6V4A3.5 3.5 0 0 1 5 .5Z"
    />
    <path
      fill="currentColor"
      d="M1 4a4 4 0 0 1 4-4h22a4 4 0 0 1 4 4v19.6a4 4 0 0 1-2.118 3.53L16 34 3.118 27.13A4 4 0 0 1 1 23.6V4Z"
    />
  </symbol>
</svg>

----------------------------------------

TITLE: Rendering API Table with React Component
DESCRIPTION: This snippet uses the `ApiTable` React component to display utilities for applying backdrop opacity filters, with customizable options using percentages and custom variables. It requires React and Tailwind CSS setup for proper rendering.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-opacity.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
<ApiTable
  rows={[
    ["backdrop-opacity-<number>", "backdrop-filter: opacity(<number>%);"],
    ["backdrop-opacity-(<custom-property>)", "backdrop-filter: opacity(var(<custom-property>));"],
    ["backdrop-opacity-[<value>]", "backdrop-filter: opacity(<value>);"],
  ]}
/>

----------------------------------------

TITLE: Building Custom Radio Group in React
DESCRIPTION: Example of creating a custom radio button group using Headless UI's RadioGroup component in React with styling options.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1/index.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
import { useState } from "react";
import { RadioGroup } from "@headlessui/react";

function MyRadioGroup() {
  let [plan, setPlan] = useState("startup");

  return (
    <RadioGroup value={plan} onChange={setPlan}>
      <RadioGroup.Label>Plan</RadioGroup.Label>
      <RadioGroup.Option value="startup">
        {({ checked }) => <span className={checked ? "bg-blue-200" : ""}>Startup</span>}
      </RadioGroup.Option>
      <RadioGroup.Option value="business">
        {({ checked }) => <span className={checked ? "bg-blue-200" : ""}>Business</span>}
      </RadioGroup.Option>
      <RadioGroup.Option value="enterprise">
        {({ checked }) => <span className={checked ? "bg-blue-200" : ""}>Enterprise</span>}
      </RadioGroup.Option>
    </RadioGroup>
  );
}

----------------------------------------

TITLE: Text Selection Styling
DESCRIPTION: Examples of styling selected text using the new selection variant.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<p class="selection:bg-pink-200">
  After nearly a grueling hour of warfare with neither man scoring a fall, Hart locked in the Sharpshooter, his
  signature submission hold. As Michaels screamed in pain, the crowd were certain that Hart was about to walk away from
  WrestleMania XII as the still-World Heavyweight Champion.
</p>

----------------------------------------

TITLE: Overriding Entire Color Namespace in Tailwind CSS
DESCRIPTION: This snippet shows how to completely override the color namespace in the default theme and define custom colors.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_14

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme {
  --color-*: initial;
  --color-white: #fff;
  --color-purple: #3f3cbb;
  --color-midnight: #121063;
  --color-tahiti: #3ab7bf;
  --color-bermuda: #78dcca;
}

----------------------------------------

TITLE: Styling Native Dialog Backdrops with Tailwind CSS
DESCRIPTION: This HTML snippet illustrates styling the backdrop of a native HTML `<dialog>` element using Tailwind CSS. It applies a backdrop modifier to change the background color and transparency of the dialog's backdrop. The HTML structure includes dialog buttons for interaction.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_17

LANGUAGE: HTML
CODE:
<dialog class="backdrop:bg-slate-900/50 ...">
  <form method="dialog">
    <!-- ... -->
    <button value="cancel">Cancel</button>
    <button>Submit</button>
  </form>
</dialog>

----------------------------------------

TITLE: Implementing new blending mode utilities in HTML
DESCRIPTION: This snippet shows the implementation of mix-blend-mode utilities in HTML, encouraging the use of Tailwind CSS classes for applying blend modes effectively.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-1/index.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<div class="mix-blend-multiply ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Tailwind CSS Responsive Grid Auto Rows Design
DESCRIPTION: This snippet demonstrates using the `<ResponsiveDesign>` component to create a responsive design for the `grid-auto-rows` property in Tailwind CSS. The `property` prop sets the CSS property, `defaultClass` provides the initial classes, and `featuredClass` is likely used to demonstrate a different class at a specific breakpoint.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-auto-rows.mdx#2025-04-18_snippet_3

LANGUAGE: typescript
CODE:
<ResponsiveDesign
  property=\"grid-auto-rows\"
  defaultClass=\"grid grid-flow-row auto-rows-max\"
  featuredClass=\"auto-rows-min\"
/>

----------------------------------------

TITLE: Initializing Blog Post Metadata with Next.js
DESCRIPTION: Sets up the metadata configuration for a blog post including title, description, authors, and image imports using ES6 modules.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/building-the-tailwind-blog/index.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { adamwathan } from "@/app/blog/authors";
import { Image } from "@/components/media";
import Link from "next/link";
import card from "./card.jpg";

export const meta = {
  title: "Building the Tailwind Blog with Next.js",
  description: `One of the things we believe as a team is that everything we make should be sealed with a blog post. Forcing ourselves to write up a short announcement post for every project we work on acts as a built-in quality check, making sure that we never call a project "done" until we feel comfortable telling the world it's out there. The problem was that up until today, we didn't actually have anywhere to publish those posts!`,
  date: "2020-06-30T18:05:31Z",
  authors: [adamwathan],
  image: card,
  excerpt: (
    <>
      One of the things we believe as a team is that everything we make should be{" "}
      <Link href="https://public.3.basecamp.com/p/toAcDMxu8Fvq2yMfd2azTuaV">sealed with a blog post</Link>. Forcing
      ourselves to write up a short announcement post for every project we work on acts as a built-in quality check,
      making sure that we never call a project "done" until we feel comfortable telling the world it's out there.
    </>
  ),
};

----------------------------------------

TITLE: Defining Blog Post Metadata in React
DESCRIPTION: Export of meta object containing blog post information including title, description, date, authors, image, and excerpt with JSX content.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/heroicons-micro/index.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
export const meta = {
  title: "Heroicons Micro: What are these, icons for ants?",
  description: `We just released Heroicons v2.1 which includes a brand new micro style — a full set of almost three hundred 16×16 icons designed for tighter, higher density UIs.`,
  date: "2023-12-18T16:30:00.000Z",
  authors: [adamwathan],
  image: card,
  excerpt: (
    <>
      We just released <Link href="https://heroicons.com">Heroicons v2.1</Link> which includes a brand new micro style —
      a full set of almost three hundred 16&times;16 icons designed for tighter, higher density UIs.
    </>
  ),
};

----------------------------------------

TITLE: API Table Generation in Tailwind CSS with Typescript
DESCRIPTION: Generates an API table for Tailwind CSS translate utilities. The code uses the `flatMap` function to create an array of translate classes based on prefixes, x/y coordinates, and values. It defines CSS translate properties and spacing based on the provided values and calculates translations using spacing variables.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/translate.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
[
      ["translate", true, true],
      ["translate-x", true, false],
      ["translate-y", false, true],
    ].flatMap(([prefix, x, y]) => {
      const css = (value) =>
        ["translate:", x ? value : "var(--tw-translate-x)", y ? value : "var(--tw-translate-y)"].join(" ").concat(";");
      return [
        [`${prefix}-<number>`, css("calc(var(--spacing) * <number>)")],
        [`-${prefix}-<number>`, css("calc(var(--spacing) * -<number>)")],
        [`${prefix}-<fraction>`, css("calc(<fraction> * 100%)")],
        [`-${prefix}-<fraction>`, css("calc(<fraction> * -100%)")],
        [`${prefix}-full`, css("100%)"],
        [`-${prefix}-full`, css("-100%)"],
        [`${prefix}-px`, css("1px")],
        [`-${prefix}-px`, css("-1px")],
        [`${prefix}-(<custom-property>)`, css("var(<custom-property>)")],
        [`${prefix}-[<value>]`, css("<value>")],
      ];
    })

----------------------------------------

TITLE: Installing Prettier Plugin for Tailwind CSS
DESCRIPTION: This snippet shows the command to install the Prettier plugin for Tailwind CSS as a dev-dependency using npm.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/automatic-class-sorting-with-prettier/index.mdx#2025-04-18_snippet_3

LANGUAGE: sh
CODE:
npm install -D prettier prettier-plugin-tailwindcss

----------------------------------------

TITLE: Sharing Tailwind CSS Theme Across Projects
DESCRIPTION: This snippet demonstrates how to create a shared theme file that can be imported into multiple projects.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_19

LANGUAGE: css
CODE:
@theme {
  --*: initial;

  --spacing: 4px;

  --font-body: Inter, sans-serif;

  --color-lagoon: oklch(0.72 0.11 221.19);
  --color-coral: oklch(0.74 0.17 40.24);
  --color-driftwood: oklch(0.79 0.06 74.59);
  --color-tide: oklch(0.49 0.08 205.88);
  --color-dusk: oklch(0.82 0.15 72.09);
}

----------------------------------------

TITLE: Creating a Background Image Container
DESCRIPTION: This HTML snippet illustrates how to create a div element with a background image set to 'bg-top-left' using Tailwind CSS. It uses the appropriate utility classes to define the background image and its position.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-position.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<div class="bg-[url(/img/mountains.jpg)] bg-top-left"></div>

----------------------------------------

TITLE: Importing Tailwind CSS Documentation Components
DESCRIPTION: Imports required React components for displaying API documentation, examples, and figures.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-origin.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Responsive Design Example for Grid Auto Columns in React
DESCRIPTION: This snippet illustrates how to implement responsive design for grid auto columns using the 'ResponsiveDesign' component to demonstrate default and featured classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-auto-columns.mdx#2025-04-18_snippet_3

LANGUAGE: javascript
CODE:
<ResponsiveDesign
  property="grid-auto-columns"
  defaultClass="grid grid-flow-col auto-cols-max"
  featuredClass="auto-cols-min"
/>

----------------------------------------

TITLE: Updating Tailwind CSS Import in Stylesheets
DESCRIPTION: Changes required in CSS files to import Tailwind CSS v4, replacing the old @tailwind directives with a standard CSS import.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_4

LANGUAGE: css
CODE:
@import "tailwindcss";

----------------------------------------

TITLE: Basic Perspective Origin Example in HTML
DESCRIPTION: HTML example demonstrating the use of perspective-origin-top-left and perspective-origin-bottom-right utilities to control the vanishing point of 3D cubes. Each cube has six faces positioned using translate and rotate transformations.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/perspective-origin.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<!-- [!code classes:perspective-origin-top-left,perspective-origin-bottom-right] -->
<div class="size-20 perspective-near perspective-origin-top-left ...">
  <div class="translate-z-12 rotate-x-0 bg-sky-300/75 ...">1</div>
  <div class="-translate-z-12 rotate-y-18 bg-sky-300/75 ...">2</div>
  <div class="translate-x-12 rotate-y-90 bg-sky-300/75 ...">3</div>
  <div class="-translate-x-12 -rotate-y-90 bg-sky-300/75 ...">4</div>
  <div class="-translate-y-12 rotate-x-90 bg-sky-300/75 ...">5</div>
  <div class="translate-y-12 -rotate-x-90 bg-sky-300/75 ...">6</div>
</div>

<div class="size-20 perspective-near perspective-origin-bottom-right …">
  <div class="translate-z-12 rotate-x-0 bg-sky-300/75 ...">1</div>
  <div class="-translate-z-12 rotate-y-18 bg-sky-300/75 ...">2</div>
  <div class="translate-x-12 rotate-y-90 bg-sky-300/75 ...">3</div>
  <div class="-translate-x-12 -rotate-y-90 bg-sky-300/75 ...">4</div>
  <div class="-translate-y-12 rotate-x-90 bg-sky-300/75 ...">5</div>
  <div class="translate-y-12 -rotate-x-90 bg-sky-300/75 ...">6</div>
</div>

----------------------------------------

TITLE: Installing Headless UI
DESCRIPTION: Command line instructions for installing Headless UI package for both React and Vue frameworks.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-5/index.mdx#2025-04-18_snippet_2

LANGUAGE: sh
CODE:
# For React
npm install @headlessui/react

# For Vue
npm install @headlessui/vue

----------------------------------------

TITLE: New Way: Simplified CSS Variable Color Configuration
DESCRIPTION: Demonstrates the new simplified approach to configuring colors with CSS variables using the <alpha-value> placeholder.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_8

LANGUAGE: javascript
CODE:
module.exports = {
  theme: {
    colors: {
      primary: "rgb(var(--color-primary) / <alpha-value>)",
      secondary: "rgb(var(--color-secondary) / <alpha-value>)",
      // ...
    },
  },
};

----------------------------------------

TITLE: Rendering Icon Grid Display in React
DESCRIPTION: JSX component that creates a grid display of all Heroicons, sorting them alphabetically and applying styling classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/heroicons-micro/index.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<div className="my-12 px-2">
  <div className="not-prose grid grid-cols-[repeat(auto-fill,1rem)] justify-between gap-x-12 gap-y-8">
    {Object.entries(icons)
      .sort(([a], [b]) => a.localeCompare(b))
      .map(([name, Icon]) => (
        <Icon key={name} className="h-4 w-4 fill-slate-950 dark:fill-white" />
      ))}
  </div>
</div>

----------------------------------------

TITLE: Styling with group-aria-* modifiers in JavaScript
DESCRIPTION: This JavaScript code snippet shows the CSS generated by Tailwind CSS when using `group-aria-*` modifiers.  It targets the `group-aria-[sort=ascending]:rotate-0` and `group-aria-[sort=descending]:rotate-180` classes to apply rotation transformations based on the `aria-sort` attribute of the parent element with the `group` class. Note: the language is technically CSS, but formatted in Javascript's object syntax here.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_8

LANGUAGE: javascript
CODE:
.group[aria-sort="ascending"] .group-aria-\[sort\=ascending\]\:rotate-0 {
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group[aria-sort="descending"] .group-aria-\[sort\=descending\]\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))

----------------------------------------

TITLE: Upgrading to Tailwind CSS v2.1 via npm
DESCRIPTION: This command line snippet provides the command to upgrade Tailwind CSS to the latest version. It is essential for developers transitioning to take advantage of the new features.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-1/index.mdx#2025-04-18_snippet_5

LANGUAGE: bash
CODE:
npm install tailwindcss@latest

----------------------------------------

TITLE: Applying X-Axis Skew Transformations with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use Tailwind CSS utility classes to skew elements on the x-axis. It shows examples of negative and positive skew angles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/skew.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<img class="-skew-x-12 ..." src="/img/mountains.jpg" />
<img class="skew-x-6 ..." src="/img/mountains.jpg" />
<img class="skew-x-12 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Using justify-self-center with Tailwind CSS
DESCRIPTION: Example showing how to use the justify-self-center utility to align a grid item along the center of its inline axis.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/justify-self.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code filename:justify-self-center] -->
<!-- [!code classes:justify-self-center] -->
<div class="grid justify-items-stretch ...">
  <!-- ... -->
  <div class="justify-self-center ...">02</div>
  <!-- ... -->
</div>

----------------------------------------

TITLE: Using ApiTable to Display Caption Utilities - JavaScript
DESCRIPTION: This snippet imports necessary components and sets the title and description for caption utilities in Tailwind CSS. It uses the ApiTable component to illustrate the available caption alignment options.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/caption-side.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

export const title = "caption-side";
export const description = "Utilities for controlling the alignment of a caption element inside of a table.";

<ApiTable
  rows={["caption-top", "caption-side: top;"], ["caption-bottom", "caption-side: bottom;"]}
/>


----------------------------------------

TITLE: Defining Page Metadata for Object Position Documentation
DESCRIPTION: Exports the title and description for the object-position utilities documentation page.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-position.mdx#2025-04-18_snippet_1

LANGUAGE: typescript
CODE:
export const title = "object-position";
export const description =
  "Utilities for controlling how a replaced element's content should be positioned within its container";

----------------------------------------

TITLE: Rearranging Catalyst Text Field Component Layout
DESCRIPTION: This snippet illustrates how to rearrange the layout of a Catalyst text field component. It shows moving the Description component below the Input, demonstrating the flexibility of Catalyst's composable design.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/introducing-catalyst/index.mdx#2025-04-18_snippet_4

LANGUAGE: JSX
CODE:
import { Description, Field, Label } from '@/components/fieldset'
import { Input } from '@/components/input'

function Example() {
  return (
    <Field>
      <Label>Product name</Label>
      <Input name="product_name" className="max-w-sm" />
      <Description>Use the name you'd like people to see in their cart.</Description>
    </Field>
  )
}

----------------------------------------

TITLE: Tailwind CSS Custom Grid Auto Rows Value
DESCRIPTION: This snippet uses the `<UsingACustomValue>` component to illustrate how to apply a custom value to the `grid-auto-rows` property in Tailwind CSS. The `utility` prop specifies the base utility name, `name` provides a description, and `value` sets the custom `minmax(0,2fr)` value.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-auto-rows.mdx#2025-04-18_snippet_2

LANGUAGE: typescript
CODE:
<UsingACustomValue utility=\"auto-rows\" name=\"size of implicitly-created grid rows\" value=\"minmax(0,2fr)\" />

----------------------------------------

TITLE: Default Browser Text Selection Example
DESCRIPTION: Demonstrates select-auto utility to use default browser text selection behavior
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/user-select.mdx#2025-04-18_snippet_6

LANGUAGE: html
CODE:
<div class="select-auto ...">The quick brown fox jumps over the lazy dog.</div>

----------------------------------------

TITLE: JSX Example - font-stretch Variations
DESCRIPTION: This JSX code demonstrates the use of different `font-stretch` utilities in Tailwind CSS to modify the width of the font. It displays several paragraphs, each styled with a different `font-stretch` class, including `font-stretch-extra-condensed`, `font-stretch-condensed`, `font-stretch-normal`, `font-stretch-expanded`, and `font-stretch-extra-expanded`. The surrounding `div` provides a flex layout for the paragraphs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-stretch.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
<div className="flex flex-col gap-8">
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
          font-stretch-extra-condensed
        </span>
        <p className="font-[system-ui] text-xl font-medium text-gray-900 font-stretch-extra-condensed dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
          font-stretch-condensed
        </span>
        <p className="font-[system-ui] text-xl font-medium text-gray-900 font-stretch-condensed dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">font-stretch-normal</span>
        <p className="font-[system-ui] text-xl font-medium text-gray-900 font-stretch-normal dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
          font-stretch-expanded
        </span>
        <p className="font-[system-ui] text-xl font-medium text-gray-900 font-stretch-expanded dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
      <div>
        <span className="mb-3 font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
          font-stretch-extra-expanded
        </span>
        <p className="font-[system-ui] text-xl font-medium text-gray-900 font-stretch-extra-expanded dark:text-gray-200">
          The quick brown fox jumps over the lazy dog.
        </p>
      </div>
    </div>

----------------------------------------

TITLE: Defining Font Variant Numeric API Table
DESCRIPTION: A table defining all available font-variant-numeric utility classes in Tailwind CSS, showcasing different numeric styling options
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-variant-numeric.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["normal-nums", "font-variant-numeric: normal;"],
    ["ordinal", "font-variant-numeric: ordinal;"],
    ["slashed-zero", "font-variant-numeric: slashed-zero;"],
    ["lining-nums", "font-variant-numeric: lining-nums;"],
    ["oldstyle-nums", "font-variant-numeric: oldstyle-nums;"],
    ["proportional-nums", "font-variant-numeric: proportional-nums;"],
    ["tabular-nums", "font-variant-numeric: tabular-nums;"],
    ["diagonal-fractions", "font-variant-numeric: diagonal-fractions;"],
    ["stacked-fractions", "font-variant-numeric: stacked-fractions;"]
  ]}
/>

----------------------------------------

TITLE: Creating Examples for Backdrop Sepia Filters
DESCRIPTION: Provides an illustrative example of how to use the backdrop-sepia classes in JSX with a series of div elements to visually demonstrate the effect of different levels of sepia on images.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-sepia.mdx#2025-04-18_snippet_1

LANGUAGE: JSX
CODE:
<Example padding={false}>
  {
    <div className="flex scroll-p-8 justify-start overflow-scroll sm:block sm:overflow-visible">
      <div className="flex shrink-0 items-center justify-around gap-6 p-8 font-mono font-bold sm:gap-4">
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-sepia-0
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-sepia-0"></div>
            <img
              className="size-32 rounded-lg object-cover shadow-xl"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-sepia-50
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-sepia-50"></div>
            <img
              className="size-32 rounded-lg object-cover shadow-xl"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-sepia
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-sepia"></div>
            <img
              className="size-32 rounded-lg object-cover shadow-xl"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
      </div>
    </div>
  }
</Example>

----------------------------------------

TITLE: Defining Tailwind CSS Stroke Utility Classes
DESCRIPTION: This code snippet generates an API table for Tailwind CSS stroke utility classes. It includes predefined classes and dynamic classes based on color values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/stroke.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["stroke-none", "stroke: none;"],
    ["stroke-inherit", "stroke: inherit;"],
    ["stroke-current", "stroke: currentColor;"],
    ["stroke-transparent", "stroke: transparent;"],
    ...Object.entries(colors).map(([name, value]) => [
      `stroke-${name}`,
      `stroke: var(--color-${name}); /* ${value} */`,
    ]),
    ["stroke-(<custom-property>)", "stroke: var(<custom-property>);"],
    ["stroke-[<color>]", "stroke: <color>;"],
  ]}
/>

----------------------------------------

TITLE: Applying Y-Axis Skew Transformations with Tailwind CSS
DESCRIPTION: This snippet shows how to use Tailwind CSS utility classes to skew elements on the y-axis. It includes examples of negative and positive skew angles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/skew.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<img class="-skew-y-12 ..." src="/img/mountains.jpg" />
<img class="skew-y-6 ..." src="/img/mountains.jpg" />
<img class="skew-y-12 ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Combining Gradient Masks in Tailwind CSS - HTML
DESCRIPTION: This code snippet showcases how to combine different masking utilities in Tailwind CSS, such as `mask-radial-from-<value>` and `mask-b-from-<value>`, to create more complex gradient effects. It demonstrates layout techniques that provide visual flexibility in user interfaces.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_16

LANGUAGE: html
CODE:
<!-- [!code classes:mask-b-from-50%,mask-radial-[50%_90%],mask-radial-from-80%,mask-r-from-80%,mask-b-from-80%,mask-radial-from-70%,mask-radial-to-85%] -->
<div class="mask-b-from-50% mask-radial-[50%_90%] mask-radial-from-80% bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-r-from-80% mask-b-from-80% mask-radial-from-70% mask-radial-to-85% bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Flex Grow API Table Definition
DESCRIPTION: Defines the API table rows for flex-grow utilities, showing various growth options including default grow, numeric growth, custom value, and custom property usage.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-grow.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["grow", "flex-grow: 1;"],
    ["grow-<number>", "flex-grow: <number>;"],
    ["grow-[<value>]", "flex-grow: <value>;"],
    ["grow-(<custom-property>)", "flex-grow: var(<custom-property>);"],
  ]}
/>

----------------------------------------

TITLE: Importing Components for Will-change Documentation in React/JSX
DESCRIPTION: Imports necessary components for rendering the will-change documentation page, including ApiTable, Example, and UsingACustomValue components.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/will-change.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { UsingACustomValue } from "@/components/content.tsx";

----------------------------------------

TITLE: Implementing Tabs Component in Vue with Headless UI
DESCRIPTION: Example of using the new Tab component from Headless UI v1.4 in Vue. Shows how to import and register the TabGroup, TabList, Tab, TabPanels, and TabPanel components.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-4/index.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<template>
  <TabGroup>
    <TabList>
      <Tab>Tab 1</Tab>
      <Tab>Tab 2</Tab>
      <Tab>Tab 3</Tab>
    </TabList>
    <TabPanels>
      <TabPanel>Content 1</TabPanel>
      <TabPanel>Content 2</TabPanel>
      <TabPanel>Content 3</TabPanel>
    </TabPanels>
  </TabGroup>
</template>

<script>
  import { TabGroup, TabList, Tab, TabPanels, TabPanel } from '@headlessui/vue'

  export default {
    components: {
      TabGroup,
      TabList,
      Tab,
      TabPanels,
      TabPanel,
    },
  }
</script>

----------------------------------------

TITLE: Rendering Custom Value and Responsive Design Examples for Transition Delay
DESCRIPTION: Includes components for demonstrating custom transition delay values and responsive design implementation of transition delay utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-delay.mdx#2025-04-18_snippet_5

LANGUAGE: JSX
CODE:
<UsingACustomValue element="button" utility="delay" value="1s,250ms" name="transition delay" />

<ResponsiveDesign element="button" property="transition-delay" defaultClass="delay-150" featuredClass="delay-300" />

----------------------------------------

TITLE: Defining Place-self Utility Classes in Tailwind CSS
DESCRIPTION: An API table showing the place-self utility classes and their corresponding CSS properties. These classes control the alignment and justification of individual grid items.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/place-self.mdx#2025-04-18_snippet_0

LANGUAGE: JSX
CODE:
<ApiTable
  rows={[
    ["place-self-auto", "place-self: auto;"],
    ["place-self-start", "place-self: start;"],
    ["place-self-end", "place-self: end;"],
    ["place-self-end-safe", "place-self: safe end;"],
    ["place-self-center", "place-self: center;"],
    ["place-self-center-safe", "place-self: safe center;"],
    ["place-self-stretch", "place-self: stretch;"],
  ]}
/>

----------------------------------------

TITLE: Creating CSS-based Logo Timeline Animation
DESCRIPTION: Implements a logo timeline animation using CSS animations with negative delays and custom properties. Includes hover-based animation control through Tailwind CSS classes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2024-09-12-radiant-a-beautiful-new-marketing-site-template/index.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
function Logo({
  label,
  src,
  className,
}: {
  label: string
  src: string
  className: string
}) {
  return (
    <div
      className={clsx(
        className,
        'absolute top-2 grid grid-cols-[1rem,1fr] items-center gap-2 whitespace-nowrap px-3 py-1',
        'rounded-full bg-gradient-to-t from-gray-800 from-50% to-gray-700 ring-1 ring-inset ring-white/10',
        '[--move-x-from:-100%] [--move-x-to:calc(100%+100cqw)] [animation-iteration-count:infinite] [animation-name:move-x] [animation-play-state:paused] [animation-timing-function:linear] group-hover:[animation-play-state:running]',
      )}
    >
      <img alt="" src={src} className="size-4" />
      <span className="text-sm/6 font-medium text-white">{label}</span>
    </div>
  )
}

----------------------------------------

TITLE: Implementing Pointer and Device Capability Queries in Tailwind CSS
DESCRIPTION: This snippet demonstrates how Tailwind CSS translates pointer and device capability modifiers into CSS media queries, covering various pointer types and capabilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_78

LANGUAGE: CSS
CODE:
@media (pointer: fine)

LANGUAGE: CSS
CODE:
@media (pointer: coarse)

LANGUAGE: CSS
CODE:
@media (pointer: none)

LANGUAGE: CSS
CODE:
@media (any-pointer: fine)

LANGUAGE: CSS
CODE:
@media (any-pointer: coarse)

LANGUAGE: CSS
CODE:
@media (any-pointer: none)

----------------------------------------

TITLE: Default Tailwind CSS Import Structure
DESCRIPTION: Shows the default import structure of Tailwind CSS, including the theme, preflight, and utilities layers.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_13

LANGUAGE: CSS
CODE:
@layer theme, base, components, utilities;

@import "tailwindcss/theme.css" layer(theme);
@import "tailwindcss/preflight.css" layer(base);
@import "tailwindcss/utilities.css" layer(utilities);

----------------------------------------

TITLE: Using Forced Colors Variant - HTML
DESCRIPTION: This snippet shows how to implement the `forced-colors` variant for an input checkbox in Tailwind CSS. This feature improves the accessibility of styles in forced colors mode, ensuring better compatibility with user preferences.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-4/index.mdx#2025-04-18_snippet_11

LANGUAGE: html
CODE:
<form>
  <input type="checkbox" class="appearance-none forced-colors:appearance-auto ..." />
</form>

----------------------------------------

TITLE: Styling ARIA Sort with Arbitrary Values in CSS
DESCRIPTION: This CSS snippet demonstrates the output generated by Tailwind CSS when using arbitrary ARIA values for styling.  It shows how the `aria-[sort=ascending]` and `aria-[sort=descending]` selectors are converted into CSS rules that apply background images based on the `aria-sort` attribute.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_6

LANGUAGE: css
CODE:
.aria-\[sort\=ascending\]\:bg-\[url\(\'\/img\/down-arrow\.svg\'\)\][aria-sort="ascending"] {
  background-image: url("/img/down-arrow.svg");
}

.aria-\[sort\=descending\]\:bg-\[url\(\'\/img\/up-arrow\.svg\'\)\][aria-sort="descending"] {
background-image: url("/img/up-arrow.svg");
}

----------------------------------------

TITLE: Defining Text Decoration Line API Table in JSX
DESCRIPTION: This snippet defines an API table component that lists the available text decoration line utilities in Tailwind CSS along with their corresponding CSS properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-line.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["underline", "text-decoration-line: underline;"],
    ["overline", "text-decoration-line: overline;"],
    ["line-through", "text-decoration-line: line-through;"],
    ["no-underline", "text-decoration-line: none;"],
  ]}
/>

----------------------------------------

TITLE: Enabling All Experimental Features in Tailwind CSS
DESCRIPTION: This JavaScript snippet demonstrates how to enable all experimental features in Tailwind CSS by setting the 'experimental' flag to 'all', allowing users to test upcoming functionalities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_7

LANGUAGE: javascript
CODE:
module.exports = {
  experimental: "all",
};

----------------------------------------

TITLE: Overriding Block Display for Images in HTML
DESCRIPTION: Demonstrates how to override Preflight's block display setting for images by using Tailwind's inline utility class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_9

LANGUAGE: HTML
CODE:
<img class="inline" src="..." alt="..." />

----------------------------------------

TITLE: Using composable CSS filters in HTML
DESCRIPTION: This snippet demonstrates how to apply CSS filter utilities in HTML using Tailwind CSS. This allows for dynamic composition of filters such as blur and grayscale directly in the class attributes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-1/index.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="blur-md grayscale invert filter ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Animating Element Appearance with @starting-style in Tailwind CSS
DESCRIPTION: This snippet showcases the new `starting` variant in Tailwind CSS, which leverages the CSS `@starting-style` feature for animating element properties upon their initial display. It demonstrates how to transition the opacity of a popover element when it's first opened using the `starting:open:opacity-0` class. This avoids the need for JavaScript-based animations.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_18

LANGUAGE: html
CODE:
<div>
  <button popovertarget="my-popover">Check for updates</button>
  <div popover id="my-popover" class="transition-discrete starting:open:opacity-0 ...">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Importing TailwindCSS Components
DESCRIPTION: Import statements for required components used in the min-width documentation page.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/min-width.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Stripes } from "@/components/stripes.tsx";
import { CustomizingYourSpacingScale, ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";

----------------------------------------

TITLE: Importing Components for Tailwind CSS Documentation
DESCRIPTION: Imports various custom components used for rendering the documentation page, including API tables, examples, figures, and responsive design components.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transform-style.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Using Custom Font Family Utility
DESCRIPTION: Shows how to use the custom font family utility class in HTML.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<h1 class="font-poppins">This headline will use Poppins.</h1>

----------------------------------------

TITLE: Defining Tailwind CSS Text Overflow Utility Classes
DESCRIPTION: Creates an API table defining Tailwind CSS utility classes for text overflow, including truncate, text-ellipsis, and text-clip.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-overflow.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    [
      "truncate",
      dedent`
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      `,
    ],
    ["text-ellipsis", "text-overflow: ellipsis;"],
    ["text-clip", "text-overflow: clip;"],
  ]}
/>

----------------------------------------

TITLE: Applying Backdrop Grayscale Utilities in HTML
DESCRIPTION: This HTML snippet demonstrates the application of Tailwind CSS backdrop grayscale utilities. It shows how to use `backdrop-grayscale-0`, `backdrop-grayscale-50` and `backdrop-grayscale-200` to control the grayscale effect of the backdrop of a div element. The background image is set using inline styles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-grayscale.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-grayscale-0 ..."></div>
</div>
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-grayscale-50 ..."></div>
</div>
<div class="bg-[url(/img/mountains.jpg)]">
  <div class="bg-white/30 backdrop-grayscale-200 ..."></div>
</div>

----------------------------------------

TITLE: Styling Enabled Inputs with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the enabled variant in Tailwind CSS to style an input element when it's enabled. It applies a hover effect only to enabled inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_91

LANGUAGE: html
CODE:
<input class="enabled:hover:border-gray-400 disabled:opacity-75 ..." />

----------------------------------------

TITLE: Basic Backdrop Contrast Example in JSX
DESCRIPTION: Demonstrates rendering backdrop contrast utility classes with dynamic image and overlay elements to showcase different contrast levels
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-contrast.mdx#2025-04-18_snippet_2

LANGUAGE: jsx
CODE:
<Example padding={false}>
  {
    <div className="flex scroll-p-8 justify-start overflow-scroll sm:block sm:overflow-visible">
      <div className="flex shrink-0 items-center justify-around gap-6 p-8 font-mono font-bold sm:gap-4">
        {/* Backdrop contrast 50% example */}
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-contrast-50
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-contrast-50"></div>
            <img
              className="h-32 w-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
        {/* Backdrop contrast 200% example */}
        <div className="flex shrink-0 flex-col items-center">
          <p className="mb-3 text-center font-mono text-xs font-medium text-gray-500 dark:text-gray-400">
            backdrop-contrast-200
          </p>
          <div className="relative">
            <div className="absolute inset-6 size-20 bg-white/30 backdrop-contrast-200"></div>
            <img
              className="h-32 w-32 rounded-lg object-cover"
              src="https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&h=1000&q=90"
            />
            <div className="absolute inset-0 rounded-lg ring-1 ring-black/10 ring-inset"></div>
          </div>
        </div>
      </div>
    </div>
  }
</Example>

----------------------------------------

TITLE: Importing Components and Utilities in JavaScript
DESCRIPTION: This snippet demonstrates the importation of essential components and utilities necessary to implement background color functionalities within a Tailwind CSS context. Particularly, it imports components for API tables, examples, figures, and utilities for color management. No specific input or output is required, and the file dependencies are sourced from the '@/components' directory and local utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-color.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import {
  CustomizingYourThemeColors,
  ResponsiveDesign,
  TargetingSpecificStates,
  UsingACustomValue,
} from "@/components/content.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import colors from "./utils/colors";

export const title = "background-color";
export const description = "Utilities for controlling an element's background color.";

----------------------------------------

TITLE: Creating a Message in MDX using Protocol Template
DESCRIPTION: Defines an endpoint documentation in MDX for creating a message with necessary post attributes, using a code example in both Bash and JavaScript. It requires MDX and components for structuring the documentation format.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2022-12-15-protocol-api-documentation-template/index.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
````jsx
// [!code filename:messages.mdx]
## Create a message {{ tag: 'POST', label: '/v1/messages' }}

<Row>
  <Col>

    Publishes a new message to a specific conversation.

    ### Required attributes

    <Properties>
      <Property name="conversation_id" type="string">
        Unique identifier for the conversation the message belongs to.
      </Property>
      <Property name="message" type="string">
        The message content.
      </Property>
    </Properties>

  </Col>
  <Col sticky>

    <CodeGroup title="Request" tag="POST" label="/v1/messages">

    ```bash {{ title: 'cURL' }}
    curl https://api.protocol.chat/v1/messages \
      -H "Authorization: Bearer {token}" \
      -d conversation_id="xgQQXg3hrtjh7AvZ" \
      -d message="You're what the French call 'les incompetents.'"
    ```

    ```js
    import ApiClient from '@example/protocol-api'
    const client = new ApiClient(token)
    await client.messages.create({
      conversation_id: 'xgQQXg3hrtjh7AvZ',
      message: 'You\'re what the French call\' les incompetents.\'',
    })
    ```

    </CodeGroup>

    ```json {{ title: 'Response' }}
    {
      "id": "gWqY86BMFRiH5o11",
      "conversation_id": "xgQQXg3hrtjh7AvZ",
      "message": "You're what the French call 'les incompetents.'",
      "reactions": [],
      "created_at": 692233200,
    }
    ```

  </Col>
</Row>
````

----------------------------------------

TITLE: Defining Default Theme Variables in Tailwind CSS
DESCRIPTION: This CSS snippet defines all the default theme variables available in Tailwind CSS, including font families and color palettes. The colors are defined using the OKLCH color space for better color perception and consistency across different displays.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_26

LANGUAGE: css
CODE:
/* [!code filename:tailwindcss/theme.css] */
@theme {
  /* prettier-ignore */
  --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;

  --color-red-50: oklch(0.971 0.013 17.38);
  --color-red-100: oklch(0.936 0.032 17.717);
  --color-red-200: oklch(0.885 0.062 18.334);
  --color-red-300: oklch(0.808 0.114 19.571);
  --color-red-400: oklch(0.704 0.191 22.216);
  --color-red-500: oklch(0.637 0.237 25.331);
  --color-red-600: oklch(0.577 0.245 27.325);
  --color-red-700: oklch(0.505 0.213 27.518);
  --color-red-800: oklch(0.444 0.177 26.899);
  --color-red-900: oklch(0.396 0.141 25.723);
  --color-red-950: oklch(0.258 0.092 26.042);

  --color-orange-50: oklch(0.98 0.016 73.684);
  --color-orange-100: oklch(0.954 0.038 75.164);
  --color-orange-200: oklch(0.901 0.076 70.697);
  --color-orange-300: oklch(0.837 0.128 66.29);
  --color-orange-400: oklch(0.75 0.183 55.934);
  --color-orange-500: oklch(0.705 0.213 47.604);
  --color-orange-600: oklch(0.646 0.222 41.116);
  --color-orange-700: oklch(0.553 0.195 38.402);
  --color-orange-800: oklch(0.47 0.157 37.304);
  --color-orange-900: oklch(0.408 0.123 38.172);
  --color-orange-950: oklch(0.266 0.079 36.259);

  --color-amber-50: oklch(0.987 0.022 95.277);
  --color-amber-100: oklch(0.962 0.059 95.617);
  --color-amber-200: oklch(0.924 0.12 95.746);
  --color-amber-300: oklch(0.879 0.169 91.605);
  --color-amber-400: oklch(0.828 0.189 84.429);
  --color-amber-500: oklch(0.769 0.188 70.08);
  --color-amber-600: oklch(0.666 0.179 58.318);
  --color-amber-700: oklch(0.555 0.163 48.998);
  --color-amber-800: oklch(0.473 0.137 46.201);
  --color-amber-900: oklch(0.414 0.112 45.904);
  --color-amber-950: oklch(0.279 0.077 45.635);

  --color-yellow-50: oklch(0.987 0.026 102.212);
  --color-yellow-100: oklch(0.973 0.071 103.193);
  --color-yellow-200: oklch(0.945 0.129 101.54);
  --color-yellow-300: oklch(0.905 0.182 98.111);
  --color-yellow-400: oklch(0.852 0.199 91.936);
  --color-yellow-500: oklch(0.795 0.184 86.047);
  --color-yellow-600: oklch(0.681 0.162 75.834);
  --color-yellow-700: oklch(0.554 0.135 66.442);
  --color-yellow-800: oklch(0.476 0.114 61.907);
  --color-yellow-900: oklch(0.421 0.095 57.708);
  --color-yellow-950: oklch(0.286 0.066 53.813);

  --color-lime-50: oklch(0.986 0.031 120.757);
  --color-lime-100: oklch(0.967 0.067 122.328);
  --color-lime-200: oklch(0.938 0.127 124.321);
  --color-lime-300: oklch(0.897 0.196 126.665);
  --color-lime-400: oklch(0.841 0.238 128.85);
  --color-lime-500: oklch(0.768 0.233 130.85);
  --color-lime-600: oklch(0.648 0.2 131.684);
  --color-lime-700: oklch(0.532 0.157 131.589);
  --color-lime-800: oklch(0.453 0.124 130.933);
  --color-lime-900: oklch(0.405 0.101 131.063);
  --color-lime-950: oklch(0.274 0.072 132.109);

  --color-green-50: oklch(0.982 0.018 155.826);
  --color-green-100: oklch(0.962 0.044 156.743);
  --color-green-200: oklch(0.925 0.084 155.995);
  --color-green-300: oklch(0.871 0.15 154.449);
  --color-green-400: oklch(0.792 0.209 151.711);
  --color-green-500: oklch(0.723 0.219 149.579);
  --color-green-600: oklch(0.627 0.194 149.214);
  --color-green-700: oklch(0.527 0.154 150.069);
  --color-green-800: oklch(0.448 0.119 151.328);
  --color-green-900: oklch(0.393 0.095 152.535);
  --color-green-950: oklch(0.266 0.065 152.934);

  --color-emerald-50: oklch(0.979 0.021 166.113);
  --color-emerald-100: oklch(0.95 0.052 163.051);
  --color-emerald-200: oklch(0.905 0.093 164.15);
  --color-emerald-300: oklch(0.845 0.143 164.978);
  --color-emerald-400: oklch(0.765 0.177 163.223);
  --color-emerald-500: oklch(0.696 0.17 162.48);
  --color-emerald-600: oklch(0.596 0.145 163.225);
  --color-emerald-700: oklch(0.508 0.118 165.612);
  --color-emerald-800: oklch(0.432 0.095 166.913);
  --color-emerald-900: oklch(0.378 0.077 168.94);
  --color-emerald-950: oklch(0.262 0.051 172.552);

  --color-teal-50: oklch(0.984 0.014 180.72);
  --color-teal-100: oklch(0.953 0.051 180.801);
  --color-teal-200: oklch(0.91 0.096 180.426);
  --color-teal-300: oklch(0.855 0.138 181.071);
  --color-teal-400: oklch(0.777 0.152 181.912);
  --color-teal-500: oklch(0.704 0.14 182.503);
  --color-teal-600: oklch(0.6 0.118 184.704);
  --color-teal-700: oklch(0.511 0.096 186.391);
  --color-teal-800: oklch(0.437 0.078 188.216);
  --color-teal-900: oklch(0.386 0.063 188.416);
  --color-teal-950: oklch(0.277 0.046 192.524);

  --color-cyan-50: oklch(0.984 0.019 200.873);
  --color-cyan-100: oklch(0.956 0.045 203.388);
  --color-cyan-200: oklch(0.917 0.08 205.041);
  --color-cyan-300: oklch(0.865 0.127 207.078);
  --color-cyan-400: oklch(0.789 0.154 211.53);
  --color-cyan-500: oklch(0.715 0.143 215.221);
  --color-cyan-600: oklch(0.609 0.126 221.723);
  --color-cyan-700: oklch(0.52 0.105 223.128);
  --color-cyan-800: oklch(0.45 0.085 224.283);
  --color-cyan-900: oklch(0.398 0.07 227.392);
  --color-cyan-950: oklch(0.302 0.056 229.695);

  --color-sky-50: oklch(0.977 0.013 236.62);
  --color-sky-100: oklch(0.951 0.026 236.824);
  --color-sky-200: oklch(0.901 0.058 230.902);
  --color-sky-300: oklch(0.828 0.111 230.318);
  --color-sky-400: oklch(0.746 0.16 232.661);
  --color-sky-500: oklch(0.685 0.169 237.323);
  --color-sky-600: oklch(0.588 0.158 241.966);
  --color-sky-700: oklch(0.5 0.134 242.749);
  --color-sky-800: oklch(0.443 0.11 240.79);
  --color-sky-900: oklch(0.391 0.09 240.876);
  --color-sky-950: oklch(0.293 0.066 243.157);

  --color-blue-50: oklch(0.97 0.014 254.604);
  --color-blue-100: oklch(0.932 0.032 255.585);
  --color-blue-200: oklch(0.882 0.059 254.128);
  --color-blue-300: oklch(0.809 0.105 251.813);
  --color-blue-400: oklch(0.707 0.165 254.624);
  --color-blue-500: oklch(0.623 0.214 259.815);
  --color-blue-600: oklch(0.546 0.245 262.881);
  --color-blue-700: oklch(0.488 0.243 264.376);
  --color-blue-800: oklch(0.424 0.199 265.638);
  --color-blue-900: oklch(0.379 0.146 265.522);
  --color-blue-950: oklch(0.282 0.091 267.935);

  --color-indigo-50: oklch(0.962 0.018 272.314);
  --color-indigo-100: oklch(0.93 0.034 272.788);
  --color-indigo-200: oklch(0.87 0.065 274.039);
  --color-indigo-300: oklch(0.785 0.115 274.713);
  --color-indigo-400: oklch(0.673 0.182 276.935);
  --color-indigo-500: oklch(0.585 0.233 277.117);
  --color-indigo-600: oklch(0.511 0.262 276.966);
  --color-indigo-700: oklch(0.457 0.24 277.023);
  --color-indigo-800: oklch(0.398 0.195 277.366);
  --color-indigo-900: oklch(0.359 0.144 278.697);
  --color-indigo-950: oklch(0.257 0.09 281.288);

  --color-violet-50: oklch(0.969 0.016 293.756);
  --color-violet-100: oklch(0.943 0.029 294.588);
  --color-violet-200: oklch(0.894 0.057 293.283);
  --color-violet-300: oklch(0.811 0.111 293.571);
  --color-violet-400: oklch(0.702 0.183 293.541);
  --color-violet-500: oklch(0.606 0.25 292.717);
  --color-violet-600: oklch(0.541 0.281 293.009);
  --color-violet-700: oklch(0.491 0.27 292.581);
  --color-violet-800: oklch(0.432 0.232 292.759);
  --color-violet-900: oklch(0.38 0.189 293.745);
  --color-violet-950: oklch(0.283 0.141 291.089);

  --color-purple-50: oklch(0.977 0.014 308.299);
  --color-purple-100: oklch(0.946 0.033 307.174);
  --color-purple-200: oklch(0.902 0.063 306.703);
  --color-purple-300: oklch(0.827 0.119 306.383);
  --color-purple-400: oklch(0.714 0.203 305.504);
  --color-purple-500: oklch(0.627 0.265 303.9);
  --color-purple-600: oklch(0.558 0.288 302.321);
  --color-purple-700: oklch(0.496 0.265 301.924);
  --color-purple-800: oklch(0.438 0.218 303.724);
  --color-purple-900: oklch(0.381 0.176 304.987);
  --color-purple-950: oklch(0.291 0.149 302.717);

  --color-fuchsia-50: oklch(0.977 0.017 320.058);
  --color-fuchsia-100: oklch(0.952 0.037 318.852);
  --color-fuchsia-200: oklch(0.903 0.076 319.62);
  --color-fuchsia-300: oklch(0.833 0.145 321.434);
  --color-fuchsia-400: oklch(0.74 0.238 322.16);
  --color-fuchsia-500: oklch(0.667 0.295 322.15);
  --color-fuchsia-600: oklch(0.591 0.293 322.896);
  --color-fuchsia-700: oklch(0.518 0.253 323.949);
  --color-fuchsia-800: oklch(0.452 0.211 324.591);
  --color-fuchsia-900: oklch(0.401 0.17 325.612);
  --color-fuchsia-950: oklch(0.293 0.136 325.661);

  --color-pink-50: oklch(0.971 0.014 343.198);
  --color-pink-100: oklch(0.948 0.028 342.258);
  --color-pink-200: oklch(0.899 0.061 343.231);
  --color-pink-300: oklch(0.823 0.12 346.018);
  --color-pink-400: oklch(0.718 0.202 349.761);
  --color-pink-500: oklch(0.656 0.241 354.308);
  --color-pink-600: oklch(0.592 0.249 0.584);
  --color-pink-700: oklch(0.525 0.223 3.958);
  --color-pink-800: oklch(0.459 0.187 3.815);
  --color-pink-900: oklch(0.408 0.153 2.432);
  --color-pink-950: oklch(0.284 0.109 3.907);

  --color-rose-50: oklch(0.969 0.015 12.422);
  --color-rose-100: oklch(0.941 0.03 12.58);
  --color-rose-200: oklch(0.892 0.058 10.001);
  --color-rose-300: oklch(0.81 0.117 11.638);
  --color-rose-400: oklch(0.712 0.194 13.428);
  --color-rose-500: oklch(0.645 0.246 16.439);
  --color-rose-600: oklch(0.586 0.253 17.585);
  --color-rose-700: oklch(0.514 0.222 16.935);
  --color-rose-800: oklch(0.455 0.188 13.697);
  --color-rose-900: oklch(0.41 0.159 10.272);
  --color-rose-950: oklch(0.271 0.105 12.094);

  --color-slate-50: oklch(0.984 0.003 247.858);
  --color-slate-100: oklch(0.968 0.007 247.896);
  --color-slate-200: oklch(0.929 0.013 255.508);
  --color-slate-300: oklch(0.869 0.022 252.894);
  --color-slate-400: oklch(0.704 0.04 256.788);
  --color-slate-500: oklch(0.554 0.046 257.417);
  --color-slate-600: oklch(0.446 0.043 257.281);
}

----------------------------------------

TITLE: Importing Tailwind CSS Flex Grow Modules
DESCRIPTION: Importing necessary components and modules for the flex-grow documentation page, including custom components for API table, examples, and content rendering.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-grow.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";
import { Stripes } from "@/components/stripes.tsx";

----------------------------------------

TITLE: Implementing Combobox with Vue
DESCRIPTION: Example of implementing a filterable Combobox component using Headless UI in Vue. Shows the same functionality as the React example but with Vue-specific syntax and computed properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1-5/index.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<script setup>
  import { ref, computed } from 'vue'
  import { Combobox, ComboboxInput, ComboboxOptions, ComboboxOption } from '@headlessui/vue'

  const people = [
    'Wade Cooper',
    'Arlene McCoy',
    'Devon Webb',
    'Tom Cook',
    'Tanya Fox',
    'Hellen Schmidt',
  ]
  const selectedPerson = ref(people[0])
  const query = ref('')

  const filteredPeople = computed(() =>
    query.value === ''
      ? people
      : people.filter((person) => {
          return person.toLowerCase().includes(query.value.toLowerCase())
        })
  )
</script>

<template>
  <Combobox v-model="selectedPerson">
    <ComboboxInput @change="query = $event.target.value" />
    <ComboboxOptions>
      <ComboboxOption v-for="person in filteredPeople" :key="person" :value="person">
        {{ person }}
      </ComboboxOption>
    </ComboboxOptions>
  </Combobox>
</template>

----------------------------------------

TITLE: Configuring the New Color Palette in Tailwind CSS
DESCRIPTION: This JavaScript snippet demonstrates how to enable the new experimental color palette in Tailwind CSS by setting the 'uniformColorPalette' flag, allowing for consistent brightness across colors.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_10

LANGUAGE: javascript
CODE:
module.exports = {
  experimental: {
    uniformColorPalette: true,
  },
};

----------------------------------------

TITLE: Importing Tailwind CSS Background Position Components
DESCRIPTION: Imports reusable components for rendering API tables and examples related to background position utilities
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-position.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";

----------------------------------------

TITLE: Setting Gradient Color Stops Example - HTML
DESCRIPTION: This snippet demonstrates how to set gradient color stops in Tailwind CSS using color utilities such as `from-indigo-500`, `via-purple-500`, and `to-pink-500` for a smooth transition.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-image.mdx#2025-04-18_snippet_6

LANGUAGE: HTML
CODE:
<div className="mx-5">
      <div className="relative h-[3.625rem]">
        <div className="absolute top-0 left-px -ml-4 flex h-12 flex-col items-center">
          <svg viewBox="0 0 32 34" className="w-8 flex-none fill-indigo-500 drop-shadow">
            <use href="#gradient-color-stop" />
          </svg>
          <div className="mt-2 h-2 w-0.5 bg-gray-900/30 dark:bg-white/30"></div>
        </div>
        <div className="absolute top-0 left-1/2 -ml-4 flex h-12 flex-col items-center">
          <svg viewBox="0 0 32 34" className="w-8 flex-none fill-purple-500 drop-shadow">
            <use href="#gradient-color-stop" />
          </svg>
          <div className="mt-2 h-2 w-0.5 bg-gray-900/30 dark:bg-white/30"></div>
        </div>
        <div className="absolute top-0 right-px -mr-4 flex h-12 flex-col items-center">
          <svg viewBox="0 0 32 34" className="w-8 flex-none fill-pink-500 drop-shadow">
            <use href="#gradient-color-stop" />
          </svg>
          <div className="mt-2 h-2 w-0.5 bg-gray-900/30 dark:bg-white/30"></div>
        </div>
      </div>
      <div className="h-10 rounded-lg bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500"></div>
    </div>

----------------------------------------

TITLE: Importing Components for Touch Action Documentation in JavaScript
DESCRIPTION: This code imports various components used in the documentation page for touch action utilities. It includes components for API tables, examples, figures, and responsive design demonstrations.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/touch-action.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Importing Components for Tailwind CSS Documentation
DESCRIPTION: Imports various custom components used for rendering the documentation page, including API tables, examples, and figures.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/outline-style.mdx#2025-04-18_snippet_0

LANGUAGE: JSX
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Configuring Tailwind CSS with Plugins
DESCRIPTION: Example of a Tailwind CSS configuration file using first-party plugins with the standalone CLI.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/standalone-cli/index.mdx#2025-04-18_snippet_2

LANGUAGE: javascript
CODE:
module.exports = {
  // ...
  plugins: [require("@tailwindcss/forms"), require("@tailwindcss/typography")],
};

----------------------------------------

TITLE: HTML Conditional Transform Utilities
DESCRIPTION: This HTML snippet demonstrates how to apply conditional transform utilities in Tailwind CSS. It highlights the change required where instead of toggling the `transform` class, the individual transform utilities must be toggled instead. For example, to have an element scale on hover, you'd use `hover:scale-105`.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_23

LANGUAGE: html
CODE:
<div class="scale-105 -translate-y-1 hover:transform"> <!-- [!code --] -->
<div class="hover:scale-105 hover:-translate-y-1"> <!-- [!code ++] -->
</div>

----------------------------------------

TITLE: Normal Scroll Snap Example
DESCRIPTION: HTML structure for implementing normal scroll snapping behavior that allows skipping past snap points during fast scrolling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-snap-stop.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="snap-x ...">
  <div class="snap-center snap-normal ...">
    <img src="/img/vacation-01.jpg" />
  </div>
  <div class="snap-center snap-normal ...">
    <img src="/img/vacation-02.jpg" />
  </div>
  <div class="snap-center snap-normal ...">
    <img src="/img/vacation-03.jpg" />
  </div>
  <div class="snap-center snap-normal ...">
    <img src="/img/vacation-04.jpg" />
  </div>
  <div class="snap-center snap-normal ...">
    <img src="/img/vacation-05.jpg" />
  </div>
  <div class="snap-center snap-normal ...">
    <img src="/img/vacation-06.jpg" />
  </div>
</div>

----------------------------------------

TITLE: Tailwind CSS Spaces and Underscores Example
DESCRIPTION: This example illustrates how to handle spaces in arbitrary content values by replacing them with underscores in Tailwind CSS.  The underscore is used as a substitute for spaces.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/content.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
"<!-- [!code classes:before:content-['Hello_World']] -->
<p class="before:content-['Hello_World'] ..."></p>"

----------------------------------------

TITLE: CSS Screen Shorthand
DESCRIPTION: This CSS snippet illustrates the change from the `@screen` shorthand to `@media screen()` in Tailwind CSS for media queries, highlighting the updated syntax for breakpoint-based styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_19

LANGUAGE: css
CODE:
@screen sm { /* [!code --] */
@media screen(sm) { /* [!code ++] */
  /* ... */
}

----------------------------------------

TITLE: Demonstrating Border Radius with Logical Properties in HTML
DESCRIPTION: This snippet demonstrates the use of Tailwind CSS utilities such as 'rounded-s-lg' to set border radius logically based on the element's text direction. It requires the Tailwind CSS framework and is used to adapt the border radius depending on whether the text direction is left-to-right or right-to-left, making it versatile for multilingual web applications.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_9

LANGUAGE: html
CODE:
<div dir="ltr">
  <div class="rounded-s-lg ..."></div>
</div>

<div dir="rtl">
  <div class="rounded-s-lg ..."></div>
</div>

----------------------------------------

TITLE: Using the Theme Function in Custom CSS
DESCRIPTION: Demonstrates how to use Tailwind's theme() function to access configuration values in custom CSS files.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_3

LANGUAGE: css
CODE:
.select2-dropdown {
  border-radius: theme(borderRadius.lg);
  background-color: theme(colors.gray.100);
  color: theme(colors.gray.900);
}
/* ... */

----------------------------------------

TITLE: PostCSS Configuration with Tailwind Nesting Plugin
DESCRIPTION: This JavaScript snippet demonstrates how to configure PostCSS to use the Tailwind CSS nesting plugin.  It shows how to include the `tailwindcss/nesting` plugin before the `tailwindcss` plugin in the `postcss.config.js` file to ensure proper nesting support.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_16

LANGUAGE: javascript
CODE:
// postcss.config.js
module.exports = {
  plugins: [
    // ...
    require("tailwindcss/nesting"),
    require("tailwindcss"),
    // ...
  ],
};

----------------------------------------

TITLE: Importing Required Components
DESCRIPTION: Imports necessary components for the documentation page including API table, examples, figures and responsive design components.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-snap-align.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Generated CSS for Dark Mode in Tailwind
DESCRIPTION: Shows the CSS generated by Tailwind for a dark mode class, demonstrating how the prefers-color-scheme media query is used to apply dark mode styles.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/styling-with-utility-classes.mdx#2025-04-18_snippet_9

LANGUAGE: css
CODE:
.dark\:bg-gray-800 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-gray-800);
  }
}

----------------------------------------

TITLE: Creating a Grid with Custom Rows - HTML
DESCRIPTION: This snippet demonstrates how to create a grid layout with a custom row count of 9 using Tailwind CSS. It can help developers define a grid structure for responsive designs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-4/index.mdx#2025-04-18_snippet_10

LANGUAGE: html
CODE:
<div class="grid grid-rows-9">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Rendering Perspective Origin API Reference Table
DESCRIPTION: JSX component that displays an API table showing all available perspective-origin utility classes and their corresponding CSS properties. Includes standard position values and custom value syntax options.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/perspective-origin.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
<ApiTable
  rows={[
    ["perspective-origin-center", "perspective-origin: center;"],
    ["perspective-origin-top", "perspective-origin: top;"],
    ["perspective-origin-top-right", "perspective-origin: top right;"],
    ["perspective-origin-right", "perspective-origin: right;"],
    ["perspective-origin-bottom-right", "perspective-origin: bottom right;"],
    ["perspective-origin-bottom", "perspective-origin: bottom;"],
    ["perspective-origin-bottom-left", "perspective-origin: bottom left;"],
    ["perspective-origin-left", "perspective-origin: left;"],
    ["perspective-origin-top-left", "perspective-origin: top left;"],
    ["perspective-origin-(<custom-property>)", "perspective-origin: var(<custom-property>);"],
    ["perspective-origin-[<value>]", "perspective-origin: <value>;"],
  ]}
/>

----------------------------------------

TITLE: Applying Tailwind Variants with @variant
DESCRIPTION: This snippet uses the `@variant` directive to apply conditional styles based on the specified variant in Tailwind, such as dark mode.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/functions-and-directives.mdx#2025-04-18_snippet_4

LANGUAGE: css
CODE:
.my-element {
  background: white;

  @variant dark {
    background: black;
  }
}

----------------------------------------

TITLE: Responsive Grid Design Component in JSX
DESCRIPTION: This snippet demonstrates the implementation of responsive design patterns for grid layouts using a ResponsiveDesign component in a Tailwind CSS setup.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-template-columns.mdx#2025-04-18_snippet_6

LANGUAGE: javascript
CODE:
<ResponsiveDesign property="grid-template-columns" defaultClass="grid grid-cols-1" featuredClass="grid-cols-6" />

----------------------------------------

TITLE: Defining CSS Variables in JSX for Tailwind CSS
DESCRIPTION: Introduces a simplified method to use CSS variables without the `var()` function, allowing direct assignment in JSX styles which can result in cleaner code. It requires a React environment and Tailwind CSS. Inputs include CSS variable definitions and style objects.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_10

LANGUAGE: js
CODE:
export function MyComponent({ company }) {
  return (
    <div
      style={{
        "--brand-color": company.brandColor,
        "--brand-hover-color": company.brandHoverColor,
      }}
      className="bg-[var(--brand-color)] hover:bg-[var(--brand-hover-color)]" // [!code --]
      className="bg-(--brand-color) hover:bg-(--brand-hover-color)" // [!code ++]
    />
  );
}

----------------------------------------

TITLE: Installing Tailwind CSS v3.2
DESCRIPTION: Command to upgrade to the latest version of Tailwind CSS via npm.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_0

LANGUAGE: sh
CODE:
npm install -D tailwindcss@latest

----------------------------------------

TITLE: Using Spaces in Arbitrary Variants with Tailwind CSS
DESCRIPTION: Illustrates how to use underscores to represent spaces in arbitrary variant selectors for more complex targeting.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_68

LANGUAGE: html
CODE:
<div class="[&_p]:mt-4">
  <p>Lorem ipsum...</p>
  <ul>
    <li>
      <p>Lorem ipsum...</p>
    </li>
    <!-- ... -->
  </ul>
</div>

----------------------------------------

TITLE: Annotating MDX Headings for Enhanced Functionality
DESCRIPTION: Demonstrates how to use mdx-annotations to inject additional props into MDX headings, optimizing the development process by avoiding raw JSX. Requires the mdx-annotations library.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2022-12-15-protocol-api-documentation-template/index.mdx#2025-04-18_snippet_3

LANGUAGE: mdx
CODE:
```mdx
## Create a message { tag: 'POST', label: '/v1/messages' }
```

LANGUAGE: jsx
CODE:
```jsx
<Heading level={2} tag="POST" label="/v1/messages">
  Create a message
</Heading>
```

----------------------------------------

TITLE: Example of Tailwind CSS min-height Utilities in HTML
DESCRIPTION: Demonstrates the usage of various min-height utility classes in HTML, including min-h-80, min-h-64, min-h-48, min-h-40, min-h-32, and min-h-24.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/min-height.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="h-20 ...">
  <div class="min-h-80 ...">min-h-80</div>
  <div class="min-h-64 ...">min-h-64</div>
  <div class="min-h-48 ...">min-h-48</div>
  <div class="min-h-40 ...">min-h-40</div>
  <div class="min-h-32 ...">min-h-32</div>
  <div class="min-h-24 ...">min-h-24</div>
</div>

----------------------------------------

TITLE: Basic HTML Select Element Example
DESCRIPTION: Example showing how to remove default browser styling from a select element using appearance-none utility class
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/appearance.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<select>
  <option>Yes</option>
  <option>No</option>
  <option>Maybe</option>
</select>

<div class="grid">
  <select class="col-start-1 row-start-1 appearance-none bg-gray-50 dark:bg-gray-800 ...">
    <option>Yes</option>
    <option>No</option>
    <option>Maybe</option>
  </select>
  <svg class="pointer-events-none col-start-1 row-start-1 ...">
    <!-- ... -->
  </svg>
</div>

----------------------------------------

TITLE: Example .gitignore File for Automatic Content Detection
DESCRIPTION: A sample .gitignore file showing directories that Tailwind CSS v4.0 will automatically exclude from scanning, as part of its new automatic content detection feature.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_3

LANGUAGE: shell
CODE:
/node_modules
/coverage
/.next/
/build

----------------------------------------

TITLE: Importing Components for Line Height Documentation
DESCRIPTION: Import statements for React components used in the line-height documentation page, including API tables and examples.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/line-height.mdx#2025-04-18_snippet_3

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { CustomizingYourSpacingScale, ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";

export const title = "line-height";
export const description = "Utilities for controlling the leading, or line height, of an element.";

----------------------------------------

TITLE: Implementing Popover Component in Vue
DESCRIPTION: Demo of implementing a popover dropdown menu using Headless UI's Popover component in Vue.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v1/index.mdx#2025-04-18_snippet_3

LANGUAGE: html
CODE:
<template>
  <Popover class="relative">
    <PopoverButton>Solutions</PopoverButton>

    <PopoverPanel class="absolute z-10">
      <div>
        <a href="/analytics">Analytics</a>
        <a href="/engagement">Engagement</a>
        <a href="/security">Security</a>
        <a href="/integrations">Integrations</a>
      </div>

      <img src="/solutions.jpg" alt="" />
    </PopoverPanel>
  </Popover>
</template>

<script>
  import { Popover, PopoverButton, PopoverPanel } from "@headlessui/vue";

  export default {
    components: { Popover, PopoverButton, PopoverPanel },
  };
</script>

----------------------------------------

TITLE: Building CSS without Input File Using Tailwind CSS CLI
DESCRIPTION: This Bash snippet shows how to use the Tailwind CSS CLI tool to build a CSS file without requiring a custom input file. By using npx tailwindcss build -o compiled.css, users can save time and simplify the build process, especially when no custom CSS is necessary.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-6/index.mdx#2025-04-18_snippet_6

LANGUAGE: bash
CODE:
npx tailwindcss build -o compiled.css

----------------------------------------

TITLE: Defining Grid Auto Columns API Table in JavaScript
DESCRIPTION: This snippet imports the necessary components and defines an API table for grid-auto-columns utilities in Tailwind CSS, detailing the utility names and their corresponding CSS properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/grid-auto-columns.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";

export const title = "grid-auto-columns";
export const description = "Utilities for controlling the size of implicitly-created grid columns.";

<ApiTable
  rows={[
    ["auto-cols-auto", "grid-auto-columns: auto;"],
    ["auto-cols-min", "grid-auto-columns: min-content;"],
    ["auto-cols-max", "grid-auto-columns: max-content;"],
    ["auto-cols-fr", "grid-auto-columns: minmax(0, 1fr);"],
    ["auto-cols-(<custom-property>)", "grid-auto-columns: var(<custom-property>);"],
    ["auto-cols-[<value>]", "grid-auto-columns: <value>;"],
  ]}
/>

----------------------------------------

TITLE: Setting Radial Gradient Sizes in Tailwind CSS - HTML
DESCRIPTION: This snippet demonstrates how to use Tailwind CSS utilities such as `mask-radial-closest-side`, `mask-radial-closest-corner`, `mask-radial-farthest-side`, and `mask-radial-farthest-corner` to set radial gradient masks. Each class controls different aspects of the mask size and shape, allowing precise design control.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-image.mdx#2025-04-18_snippet_14

LANGUAGE: html
CODE:
<!-- [!code classes:mask-radial-farthest-corner,mask-radial-farthest-side,mask-radial-closest-corner,mask-radial-closest-side] -->
<div class="mask-radial-closest-side mask-radial-from-100% mask-radial-at-[30%_30%] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-radial-closest-corner mask-radial-from-100% mask-radial-at-[30%_30%] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-radial-farthest-side mask-radial-from-100% mask-radial-at-[30%_30%] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-radial-farthest-corner mask-radial-from-100% mask-radial-at-[30%_30%] bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Importing Components for Tailwind CSS Documentation
DESCRIPTION: Imports various components used for building the documentation page, including ApiTable, Example, Figure, and ResponsiveDesign.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-style.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Defining Tailwind CSS Outline Style Utility Classes
DESCRIPTION: An API table component that lists the available Tailwind CSS utility classes for controlling outline styles and their corresponding CSS properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/outline-style.mdx#2025-04-18_snippet_1

LANGUAGE: JSX
CODE:
<ApiTable
  rows={[
    ["outline-solid", "outline-style: solid;"],
    ["outline-dashed", "outline-style: dashed;"],
    ["outline-dotted", "outline-style: dotted;"],
    ["outline-double", "outline-style: double;"],
    ["outline-none", "outline-style: none;"],
    ["outline-hidden", "outline: 2px solid transparent;\noutline-offset: 2px;"],
  ]}
/>

----------------------------------------

TITLE: Importing Tailwind CSS Utility Components
DESCRIPTION: This JavaScript snippet imports various React components that are used throughout the documentation to demonstrate border-spacing utilities. It includes components such as 'ApiTable', 'CustomizingYourSpacingScale', 'ResponsiveDesign', 'UsingACustomValue', 'Example', and 'Figure'. The dependencies are custom components and certain CSS modules, with no specific inputs or outputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-spacing.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { CustomizingYourSpacingScale, ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";

----------------------------------------

TITLE: Print Media Queries in TailwindCSS
DESCRIPTION: Example of using print variant to control content visibility when printing documents.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_46

LANGUAGE: html
CODE:
<div>
  <article class="print:hidden">
    <h1>My Secret Pizza Recipe</h1>
    <p>This recipe is a secret, and must not be shared with anyone</p>
    <!-- ... -->
  </article>
  <div class="hidden print:block">Are you seriously trying to print this? It's secret!</div>
</div>

----------------------------------------

TITLE: Importing React Components in Typescript
DESCRIPTION: This code snippet imports several React components used within the current module. These components include ApiTable, CustomizingYourTheme, ResponsiveDesign, UsingACustomValue, Example, and Figure. These components are likely custom components created for this project and are used to structure the content of the page, display API tables, examples, and figures.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { CustomizingYourTheme, ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";

----------------------------------------

TITLE: Advanced Arbitrary Peer Selectors with Placeholder in HTML
DESCRIPTION: This example shows how to use the '&' character as a placeholder to precisely control where the .peer selector appears in the final CSS selector.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_23

LANGUAGE: html
CODE:
<div>
  <input type="text" class="peer" />
  <div class="hidden peer-[:nth-of-type(3)_&]:block">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Floating Element Left TailwindCSS HTML
DESCRIPTION: Illustrates how to use the 'float-left' utility in TailwindCSS to float an element to the left side of its container. Dependencies: TailwindCSS. Key parameters: float-left utility for CSS class. Inputs: HTML element with class attribute. Outputs: Left-floated element within its container.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/float.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<!-- [!code classes:float-left] -->
<article>
  <img class="float-left ..." src="/img/mountains.jpg" />
  <p>Maybe we can live without libraries, people like you and me. ...</p>
</article>

----------------------------------------

TITLE: Importing Dependencies in Next.js/React
DESCRIPTION: Import statements for required components and resources for the blog post page.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { Example, Figure } from "@/components/example.tsx";
import { YouTubeVideo } from "@/components/media";
import Link from "next/link";
import card from "./card.jpg";
import { adamwathan } from "@/app/blog/authors";

----------------------------------------

TITLE: Configuring Transform in Tailwind CSS
DESCRIPTION: This snippet demonstrates how to configure the `transform` option in your `tailwind.config.js` file. The `transform` option allows you to transform the content of specific file types before scanning for class names, enabling Tailwind to work with templating languages like Markdown.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_26

LANGUAGE: javascript
CODE:
let remark = require("remark");

module.exports = {
  purge: {
    content: ["./src/**/*.{html,md}"],
    transform: {
      md: (content) => {
        return remark().process(content);
      },
    },
  },
  // ...
};

----------------------------------------

TITLE: Styling ::before and ::after with Tailwind CSS
DESCRIPTION: Example showing how to style a required form field label using the ::after pseudo-element to add an asterisk. Demonstrates using after: variant classes for positioning and styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_25

LANGUAGE: html
CODE:
<label>
  <span class="text-gray-700 after:ml-0.5 after:text-red-500 after:content-['*'] ...">Email</span>
  <input type="email" name="email" class="..." placeholder="you@example.com" />
</label>

----------------------------------------

TITLE: Aligning Items with Baseline Last in HTML
DESCRIPTION: This HTML snippet shows the basic usage of the `items-baseline-last` utility in Tailwind CSS within a grid layout.  It ensures that the items within the grid are aligned to the baseline of the last line of text, providing a visually consistent layout.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_12

LANGUAGE: html
CODE:
<!-- [!code classes:items-baseline-last] -->
<div class="grid grid-cols-[1fr_auto] items-baseline-last">
  <div>
    <img src="img/spencer-sharp.jpg" />
    <h4>Spencer Sharp</h4>
    <p>Working on the future of astronaut recruitment at Space Recruit.</p>
  </div>
  <p>spacerecruit.com</p>
</div>

----------------------------------------

TITLE: Percentage-based Min-width Example
DESCRIPTION: HTML example demonstrating the use of fraction-based min-width utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/min-width.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="flex ...">
  <div class="min-w-3/4 ...">min-w-3/4</div>
  <div class="w-full ...">w-full</div>
</div>

----------------------------------------

TITLE: Mask Clip Example Implementation in HTML
DESCRIPTION: Demonstrates how to apply different mask-clip utilities in HTML. Shows the implementation of mask-clip-border, mask-clip-padding, and mask-clip-content with image masking on elements with borders and padding.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-clip.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:mask-clip-border,mask-clip-padding,mask-clip-content] -->
<div class="mask-clip-border border-3 p-1.5 mask-[url(/img/circle.png)] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-clip-padding border-3 p-1.5 mask-[url(/img/circle.png)] bg-[url(/img/mountains.jpg)] ..."></div>
<div class="mask-clip-content border-3 p-1.5 mask-[url(/img/circle.png)] bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Customizing Tailwind CSS Theme for Font Weight
DESCRIPTION: This snippet provides a method to customize the Tailwind CSS theme for the font weight utility. It allows defining a new font weight value and name for better customization in the theme.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-weight.mdx#2025-04-18_snippet_4

LANGUAGE: javascript
CODE:
<CustomizingYourTheme
  utility="font"
  themeKey="font-weight"
  name="font weight"
  customValue="1000"
  customName="extrablack"
/>

----------------------------------------

TITLE: Creating Custom Variants with @custom-variant
DESCRIPTION: The `@custom-variant` directive is employed to add custom variants to Tailwind, facilitating more granular control over styles based on specific conditions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/functions-and-directives.mdx#2025-04-18_snippet_5

LANGUAGE: css
CODE:
@custom-variant theme-midnight (&:where([data-theme="midnight"] *));

----------------------------------------

TITLE: Installing Tailwind CSS via NPM - Bash
DESCRIPTION: This bash command is used for installing the latest version of Tailwind CSS using npm. It is a necessary step for users looking to upgrade to the new features available in version 3.4.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-4/index.mdx#2025-04-18_snippet_13

LANGUAGE: bash
CODE:
$ npm install tailwindcss@latest

----------------------------------------

TITLE: HTML Gradient with Color Opacity
DESCRIPTION: This HTML snippet demonstrates how to use the shorthand color opacity syntax with gradients in Tailwind CSS.  It sets the background to a gradient from red-500 with 50% opacity to the default gradient end color.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_12

LANGUAGE: html
CODE:
<div class="bg-gradient-to-r from-red-500/50"></div>

----------------------------------------

TITLE: Initializing Border Collapse Utility Table Styles
DESCRIPTION: Utility classes for controlling table border rendering, allowing developers to combine or separate adjacent cell borders using Tailwind CSS classes
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-collapse.mdx#2025-04-18_snippet_0

LANGUAGE: html
CODE:
<table class="border-collapse border border-gray-400 ...">
  <thead>
    <tr>
      <th class="border border-gray-300 ...">State</th>
      <th class="border border-gray-300 ...">City</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td class="border border-gray-300 ...">Indiana</td>
      <td class="border border-gray-300 ...">Indianapolis</td>
    </tr>
  </tbody>
</table>

----------------------------------------

TITLE: Introduction of Placeholder and Button Style Changes in CSS
DESCRIPTION: Covers small changes in Preflight defaults for placeholders and button cursors, with instructions to maintain previous styles if desired.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_13

LANGUAGE: CSS
CODE:
@layer base {
  input::placeholder,
  textarea::placeholder {
    color: var(--color-gray-400);
  }
}

LANGUAGE: CSS
CODE:
@layer base {
  button:not(:disabled),
  [role="button"]:not(:disabled) {
    cursor: pointer;
  }
}

----------------------------------------

TITLE: Defining ApiTable Component for Sepia Filters in TypeScript
DESCRIPTION: This TypeScript code snippet imports the ApiTable component along with other components and specifies utilities as rows to render a table with different sepia filter options. It requires React and Tailwind CSS for styling and component rendering.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-sepia.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";

export const title = "filter: sepia()";
export const description = "Utilities for applying sepia filters to an element.";

<ApiTable
  rows=[
    ["sepia", "filter: sepia(100%);"],
    ["sepia-<number>", "filter: sepia(<number>%);"],
    ["sepia-(<custom-property>)", "filter: sepia(var(<custom-property>));"],
    ["sepia-[<value>]", "filter: sepia(<value>);"],
  ]
/>


----------------------------------------

TITLE: Defining Backdrop Sepia Filters in React
DESCRIPTION: Defines a set of rows representing backdrop sepia utilities in a React component using the ApiTable. Each utility corresponds to a different implementation of the backdrop sepia filter with varying levels and custom properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-sepia.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";

export const title = "backdrop-filter: sepia()";
export const description = "Utilities for applying backdrop sepia filters to an element.";

<ApiTable
  rows={["backdrop-sepia", "backdrop-filter: sepia(100%);"],
    ["backdrop-sepia-<number>", "backdrop-filter: sepia(<number>%);"],
    ["backdrop-sepia-(<custom-property>)", "backdrop-filter: sepia(var(<custom-property>));"],
    ["backdrop-sepia-[<value>]", "backdrop-filter: sepia(<value>);"]}
/>


----------------------------------------

TITLE: Theme Function with Opacity in Tailwind Config
DESCRIPTION: Demonstrates how to use the theme function with opacity adjustment in the Tailwind configuration file.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_5

LANGUAGE: javascript
CODE:
module.exports = {
  content: [
    // ...
  ],
  theme: {
    extend: {
      colors: ({ theme }) => ({
        primary: theme("colors.blue.500"),
        // [!code highlight:2]
        "primary-fade": theme("colors.blue.500 / 75%"),
      }),
    },
  },
  plugins: [],
};

----------------------------------------

TITLE: Allow Background Scroll with Viewport
DESCRIPTION: Demonstrating how to use the `bg-scroll` utility, this snippet shows the scroll behavior of a background where it moves with the viewport rather than staying fixed within a container. Essential for situations where a panoramic scroll effect is desirable. Key consideration includes how the `bg-scroll` class interacts across different browser implementations.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-attachment.mdx#2025-04-18_snippet_3

LANGUAGE: HTML
CODE:
<!-- [!code classes:bg-scroll] -->
<div class="bg-[url(/img/mountains.jpg)] bg-scroll ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Generating TypeScript Configuration File
DESCRIPTION: Command to generate a Tailwind CSS configuration file in TypeScript format.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_4

LANGUAGE: sh
CODE:
npx tailwindcss init --ts

----------------------------------------

TITLE: Updating Outline Utility in HTML
DESCRIPTION: Demonstrates how to update the outline utility classes in Tailwind CSS v4, where 'outline-none' is replaced with 'outline-hidden', and how the default outline width has changed.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_6

LANGUAGE: HTML
CODE:
<input class="outline outline-2" />

LANGUAGE: HTML
CODE:
<input class="outline-2" />

LANGUAGE: HTML
CODE:
<input class="focus:outline-none" />

LANGUAGE: HTML
CODE:
<input class="focus:outline-hidden" />

----------------------------------------

TITLE: Negating Media Queries with the not-* Variant in Tailwind CSS (CSS)
DESCRIPTION: This CSS code shows the compiled CSS for the `not-supports-hanging-punctuation:px-4` class. It uses the `@supports not` query to apply the padding only if the `hanging-punctuation` property is not supported.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_22

LANGUAGE: css
CODE:
.not-supports-hanging-punctuation\:px-4 {
  @supports not (hanging-punctuation: var(--tw)) {
    padding-inline: calc(var(--spacing) * 4);
  }
}

----------------------------------------

TITLE: Component Imports Tailwind CSS Documentation
DESCRIPTION: This TypeScript snippet imports necessary components for displaying API tables, examples, and figures in the Tailwind CSS documentation. These components provide the structure and styling required to render documentation elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/field-sizing.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Initializing Blog Post Metadata in JavaScript
DESCRIPTION: Exports meta information for a blog post including title, description, date, authors, image, and excerpt content.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2024-05-30-prettier-plugin-collapse-whitespace/index.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
export const meta = {
  title: "Automatically clean up whitespace and duplicate class names",
  description:
    "We just released a new version of prettier-plugin-tailwindcss which adds support for removing unnecessary whitespace and duplicate classes when sorting.",
  date: "2024-05-31T16:30:00.000Z",
  authors: [adamwathan],
  image: card,
  excerpt: (
    <>
      We just released a new version of `prettier-plugin-tailwindcss` which adds support for removing unnecessary
      whitespace and duplicate classes when sorting.
    </>
  ),
};

----------------------------------------

TITLE: Optional Form Input with Conditional Rendering in Tailwind CSS
DESCRIPTION: Showcases using peer-optional:hidden to dynamically display or hide required indicators based on input state
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-1/index.mdx#2025-04-18_snippet_15

LANGUAGE: html
CODE:
<form>
  <div>
    <label for="email" ...>Email</label>
    <div>
      <input required class="peer ..." id="email" />
      <div class="peer-optional:hidden ...">Required</div>
    </div>
  </div>
  <div>
    <label for="name" ...>Name</label>
    <div>
      <input class="peer ..." id="name" />
      <div class="peer-optional:hidden ...">Required</div>
    </div>
  </div>
</form>

----------------------------------------

TITLE: Configuring Tailwind CSS Line Clamp Plugin
DESCRIPTION: Configuration code to add the line-clamp plugin to the Tailwind CSS configuration file.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/multi-line-truncation-with-tailwindcss-line-clamp/index.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
module.exports = {
  // ...
  plugins: [
    // ...
    require("@tailwindcss/line-clamp"),
  ],
};

----------------------------------------

TITLE: Using Theme Variables in Arbitrary Values
DESCRIPTION: Demonstrating how to reference theme variables in CSS calculations
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-alpha/index.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<div class="p-[calc(var(--spacing-6)-1px)]">
  {/* ... */}
</div>

----------------------------------------

TITLE: Defining Colors with Opacity Support
DESCRIPTION: Example of defining colors as closures to support opacity utilities in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_4

LANGUAGE: javascript
CODE:
module.exports = {
  theme: {
    colors: {
      primary: ({ opacityVariable }) => `rgba(var(--color-primary), var(${variable}, 1))`
    }
  }
}

----------------------------------------

TITLE: Customization of Font Family in CSS
DESCRIPTION: This CSS snippet demonstrates how to customize theme settings for specific font families, including feature and variation settings. It showcases the usage of the @theme and @font-face at-rules to define fonts like 'Oswald' and 'Roboto'. Dependencies include knowledge of CSS and adherence to the order of @import statements when sourcing fonts from services like Google Fonts.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-family.mdx#2025-04-18_snippet_2

LANGUAGE: css
CODE:
@theme {
  --font-display: "Oswald", "sans-serif";
  --font-display--font-feature-settings: "cv02", "cv03", "cv04", "cv11"; /* [!code highlight] */
  --font-display--font-variation-settings: "opsz" 32; /* [!code highlight] */
}

@font-face {
  font-family: Oswald;
  font-style: normal;
  font-weight: 200 700;
  font-display: swap;
  src: url("/fonts/Oswald.woff2") format("woff2");
}

@import url("https://fonts.googleapis.com/css2?family=Roboto&display=swap"); /* [!code highlight] */
@import "tailwindcss";

@theme {
  --font-roboto: "Roboto", sans-serif; /* [!code highlight] */
}

/* Note: Ensure @import statements precede other CSS declarations. */

----------------------------------------

TITLE: Styling with Pointer Variants in React JSX
DESCRIPTION: This JSX snippet shows how to style a set of radio buttons differently based on whether the user is using a touchscreen or a mouse. It uses the `pointer-coarse` variant to increase padding and adjust the grid layout on touchscreen devices.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_9

LANGUAGE: jsx
CODE:

  {
    <fieldset aria-label="Choose a memory option" className="mx-auto max-w-md">
      <div className="flex items-center justify-between">
        <div className="text-sm/6 font-medium text-gray-900 dark:text-white">RAM</div>
        <a href="#" className="text-sm/6 font-medium text-indigo-600 hover:text-indigo-500 dark:text-indigo-400">
          See performance specs
        </a>
      </div>
      <div className="mt-4 grid grid-cols-6 gap-2 max-sm:grid-cols-3 pointer-coarse:mt-6 pointer-coarse:grid-cols-3 pointer-coarse:gap-4">
        <label className="flex items-center justify-center rounded-md bg-white p-2 text-sm font-semibold text-gray-900 uppercase ring-1 ring-gray-300 not-data-focus:not-has-checked:ring-inset hover:bg-gray-50 has-checked:bg-indigo-600 has-checked:text-white has-checked:ring-0 has-checked:hover:bg-indigo-500 has-focus-visible:outline-2 has-focus-visible:outline-offset-2 has-focus-visible:outline-indigo-600 data-focus:ring-2 data-focus:ring-indigo-600 data-focus:ring-offset-2 data-focus:has-checked:ring-2 sm:flex-1 dark:bg-transparent dark:text-white dark:ring-white/20 dark:hover:bg-gray-950/50 pointer-coarse:p-4">
          <input type="radio" name="memory-option" value="4 GB" className="sr-only" />
          <span>4 GB</span>
        </label>
        <label className="flex items-center justify-center rounded-md bg-white p-2 text-sm font-semibold text-gray-900 uppercase ring-1 ring-gray-300 not-data-focus:not-has-checked:ring-inset hover:bg-gray-50 has-checked:bg-indigo-600 has-checked:text-white has-checked:ring-0 has-checked:hover:bg-indigo-500 has-focus-visible:outline-2 has-focus-visible:outline-offset-2 has-focus-visible:outline-indigo-600 data-focus:ring-2 data-focus:ring-indigo-600 data-focus:ring-offset-2 data-focus:has-checked:ring-2 sm:flex-1 dark:bg-transparent dark:text-white dark:ring-white/20 dark:hover:bg-gray-950/50 pointer-coarse:p-4">
          <input type="radio" name="memory-option" value="8 GB" className="sr-only" defaultChecked />
          <span>8 GB</span>
        </label>
        <label className="flex items-center justify-center rounded-md bg-white p-2 text-sm font-semibold text-gray-900 uppercase ring-1 ring-gray-300 not-data-focus:not-has-checked:ring-inset hover:bg-gray-50 has-checked:bg-indigo-600 has-checked:text-white has-checked:ring-0 has-checked:hover:bg-indigo-500 has-focus-visible:outline-2 has-focus-visible:outline-offset-2 has-focus-visible:outline-indigo-600 data-focus:ring-2 data-focus:ring-indigo-600 data-focus:ring-offset-2 data-focus:has-checked:ring-2 sm:flex-1 dark:bg-transparent dark:text-white dark:ring-white/20 dark:hover:bg-gray-950/50 pointer-coarse:p-4">
          <input type="radio" name="memory-option" value="16 GB" className="sr-only" />
          <span>16 GB</span>
        </label>
        <label className="flex items-center justify-center rounded-md bg-white p-2 text-sm font-semibold text-gray-900 uppercase ring-1 ring-gray-300 not-data-focus:not-has-checked:ring-inset hover:bg-gray-50 has-checked:bg-indigo-600 has-checked:text-white has-checked:ring-0 has-checked:hover:bg-indigo-500 has-focus-visible:outline-2 has-focus-visible:outline-offset-2 has-focus-visible:outline-indigo-600 data-focus:ring-2 data-focus:ring-indigo-600 data-focus:ring-offset-2 data-focus:has-checked:ring-2 sm:flex-1 dark:bg-transparent dark:text-white dark:ring-white/20 dark:hover:bg-gray-950/50 pointer-coarse:p-4">
          <input type="radio" name="memory-option" value="32 GB" className="sr-only" />
          <span>32 GB</span>
        </label>
        <label className="flex items-center justify-center rounded-md bg-white p-2 text-sm font-semibold text-gray-900 uppercase ring-1 ring-gray-300 not-data-focus:not-has-checked:ring-inset hover:bg-gray-50 has-checked:bg-indigo-600 has-checked:text-white has-checked:ring-0 has-checked:hover:bg-indigo-500 has-focus-visible:outline-2 has-focus-visible:outline-offset-2 has-focus-visible:outline-indigo-600 data-focus:ring-2 data-focus:ring-indigo-600 data-focus:ring-offset-2 data-focus:has-checked:ring-2 sm:flex-1 dark:bg-transparent dark:text-white dark:ring-white/20 dark:hover:bg-gray-950/50 pointer-coarse:p-4">
          <input type="radio" name="memory-option" value="64 GB" className="sr-only" />
          <span>64 GB</span>
        </label>
        <label className="flex items-center justify-center rounded-md bg-white p-2 text-sm font-semibold text-gray-900 uppercase ring-1 ring-gray-300 not-data-focus:not-has-checked:ring-inset hover:bg-gray-50 has-checked:bg-indigo-600 has-checked:text-white has-checked:ring-0 has-checked:hover:bg-indigo-500 has-focus-visible:outline-2 has-focus-visible:outline-offset-2 has-focus-visible:outline-indigo-600 data-focus:ring-2 data-focus:ring-indigo-600 data-focus:ring-offset-2 data-focus:has-checked:ring-2 sm:flex-1 dark:bg-transparent dark:text-white dark:ring-white/20 dark:hover:bg-gray-950/50 pointer-coarse:p-4">
          <input type="radio" name="memory-option" value="128 GB" className="sr-only" />
          <span>128 GB</span>
        </label>
      </div>
    </fieldset>
  }


----------------------------------------

TITLE: Focus State Outline Example
DESCRIPTION: Shows how to apply outline width on focus state using the focus:outline-2 utility class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/outline-width.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<button class="outline-offset-2 outline-sky-500 focus:outline-2 ...">Save Changes</button>

----------------------------------------

TITLE: Using the empty Variant in Svelte with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the empty variant in Tailwind CSS within a Svelte component. It hides list items that have no content.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_89

LANGUAGE: svelte
CODE:
<ul>
  {#each people as person}
    <li class="empty:hidden ...">{person.hobby}</li>
  {/each}
</ul>

----------------------------------------

TITLE: Configuring Container Sizes in Tailwind CSS (JavaScript)
DESCRIPTION: This JavaScript snippet is a configuration example for Tailwind CSS, demonstrating how to extend the default container sizes by adding custom values under the 'containers' key in the tailwind.config.js file. The example adds a new size '2xs' with a value of 16rem.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_27

LANGUAGE: javascript
CODE:
// tailwind.config.js
module.exports = {
  theme: {
    extend: {
      containers: {
        "2xs": "16rem",
        // etc...
      },
    },
  },
};

----------------------------------------

TITLE: Initializing Component Imports
DESCRIPTION: Import statements for required React components used in the documentation page.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/scroll-snap-stop.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Using Custom Color Utility Class in HTML
DESCRIPTION: Demonstrates how to use the automatically generated utility class for the custom mint color in HTML markup.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="bg-mint-500">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Styling Default Inputs with Tailwind CSS
DESCRIPTION: This example shows how to use the default variant in Tailwind CSS to style an input that was the default value when the page initially loaded. It applies a thicker outline to default inputs.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_94

LANGUAGE: html
CODE:
<input type="checkbox" class="default:outline-2 ..." />

----------------------------------------

TITLE: Blog Post Metadata Configuration
DESCRIPTION: JavaScript object containing metadata for the blog post including title, description, date, authors, and excerpt with React components.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-typography/index.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
export const meta = {
  title: "Introducing Tailwind CSS Typography",
  description: `Until now, trying to style an article, document, or blog post with Tailwind has been a tedious task that required a keen eye for typography and a lot of complex custom CSS. That's why today we're excited to release @tailwindcss/typography — a plugin that lets you easily style vanilla HTML content with beautiful typographic defaults.`,
  date: "2020-07-13T16:35:02.037Z",
  authors: [adamwathan],
  image,
  excerpt: (
    <>
      Until now, trying to style an article, document, or blog post with Tailwind has been a tedious task that required
      a keen eye for typography and a lot of complex custom CSS.
      <br />
      That's why today we're excited to release{" "}
      <Link href="https://github.com/tailwindcss/typography">@tailwindcss/typography</Link> — a plugin that lets you
      easily style vanilla HTML content with beautiful typographic defaults.
    </>
  ),
};

----------------------------------------

TITLE: Defining Page Metadata
DESCRIPTION: Setting the page title and description for font smoothing utilities
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-smoothing.mdx#2025-04-18_snippet_1

LANGUAGE: typescript
CODE:
export const title = "font-smoothing";
export const description = "Utilities for controlling the font smoothing of an element.";

----------------------------------------

TITLE: Vue Direct CSS Variable Usage
DESCRIPTION: Demonstrates using CSS variables directly in Vue components instead of @apply for better performance.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_28

LANGUAGE: html
CODE:
<template>
  <h1>Hello world!</h1>
</template>

<style>
  h1 {
    color: var(--text-red-500);
  }
</style>

----------------------------------------

TITLE: Importing Components for List Style Position Documentation
DESCRIPTION: Imports necessary components for displaying the list-style-position documentation page, including API tables, examples, figures, and responsive design components.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/list-style-position.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Importing Tailwind CSS Components for Color Scheme Documentation
DESCRIPTION: Importing custom components used in the color scheme documentation page, including API table, example, figure, and state targeting components
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/color-scheme.mdx#2025-04-18_snippet_0

LANGUAGE: tsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { TargetingSpecificStates } from "@/components/content.tsx";

----------------------------------------

TITLE: Generated CSS for Advanced Arbitrary Peer Selectors
DESCRIPTION: The CSS generated by Tailwind when using advanced arbitrary peer selectors with the '&' placeholder, showing the resulting selector structure.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_24

LANGUAGE: css
CODE:
.peer-\[\:nth-of-type\(3\)_\&\]\:block {
  &:is(:nth-of-type(3) :where(.peer) ~ *) {
    display: block;
  }
}

----------------------------------------

TITLE: Importing Tailwind CSS User Select Components
DESCRIPTION: Imports necessary components for rendering API table, examples, and responsive design documentation
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/user-select.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Clipping Overflowing Text in Tailwind CSS
DESCRIPTION: Shows how to use the 'text-clip' utility class to clip overflowing text at the content area limit in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-overflow.mdx#2025-04-18_snippet_4

LANGUAGE: html
CODE:
<!-- [!code classes:text-clip] -->
<p class="overflow-hidden text-clip">The longest word in any of the major...</p>

----------------------------------------

TITLE: Importing UI Components for Tailwind CSS Documentation
DESCRIPTION: Imports various UI components used for documentation presentation, including ApiTable for displaying utility classes, Example for interactive demos, and Figure for visual demonstrations.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-composite.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Configuring Gradient and Background Image Support in Tailwind
DESCRIPTION: Configuration for the new gradient and background image features in Tailwind CSS v1.7.0, defining gradient directions and color stops.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
module.exports = {
  theme: {
    backgroundImage: {
      "gradient-to-t": "linear-gradient(to top, var(--gradient-color-stops))",
      "gradient-to-tr": "linear-gradient(to top right, var(--gradient-color-stops))",
      "gradient-to-r": "linear-gradient(to right, var(--gradient-color-stops))",
      "gradient-to-br": "linear-gradient(to bottom right, var(--gradient-color-stops))",
      "gradient-to-b": "linear-gradient(to bottom, var(--gradient-color-stops))",
      "gradient-to-bl": "linear-gradient(to bottom left, var(--gradient-color-stops))",
      "gradient-to-l": "linear-gradient(to left, var(--gradient-color-stops))",
      "gradient-to-tl": "linear-gradient(to top left, var(--gradient-color-stops))"
    },
    gradientColorStops: (theme) => theme("colors")
  },
  variants: {
    backgroundImage: ["responsive"],
    gradientColorStops: ["responsive", "hover", "focus"]
  }
}

----------------------------------------

TITLE: Importing Required Components in JSX
DESCRIPTION: Import statements for required components used in the documentation page.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/overflow-wrap.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Defining title and description in Typescript
DESCRIPTION: This snippet defines the title and description variables which likely represent the title and description of the documentation page or component. These variables are exported, suggesting they are used elsewhere, possibly in the page layout or metadata.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-radius.mdx#2025-04-18_snippet_1

LANGUAGE: typescript
CODE:
export const title = "border-radius";
export const description = "Utilities for controlling the border radius of an element.";

----------------------------------------

TITLE: Using Caption Side Utility in HTML
DESCRIPTION: This code snippet demonstrates how to use the `caption-bottom` utility in HTML to control the placement of a table caption.  The caption is placed below the table.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-3/index.mdx#2025-04-18_snippet_14

LANGUAGE: html
CODE:
<table>
  <caption class="caption-bottom">
    Table 3.1: Professional wrestlers and their signature moves.
  </caption>
  <thead>
    <tr>
      <th>Wrestler</th>
      <th>Signature Move(s)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>"Stone Cold" Steve Austin</td>
      <td>Stone Cold Stunner, Lou Thesz Press</td>
    </tr>
    <tr>
      <td>Bret "The Hitman" Hart</td>
      <td>The Sharpshooter</td>
    </tr>
    <tr>
      <td>Razor Ramon</td>
      <td>Razor's Edge, Fallaway Slam</td>
    </tr>
  </tbody>
</table>

----------------------------------------

TITLE: Generated CSS for Dynamic Peer Variant
DESCRIPTION: This CSS snippet shows the generated CSS for the dynamic peer variant. The `display: block` style is applied to the sibling div based on the nth-of-type selector.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_21

LANGUAGE: css
CODE:
":nth-of-type(3) .peer ~ .peer-\[\:nth-of-type\(3\)_\&\\]\:block {
        display: block;
      }"

----------------------------------------

TITLE: Generating All CSS Variables in Tailwind CSS
DESCRIPTION: This snippet shows how to generate all CSS variables in the final output using the 'static' theme option.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_18

LANGUAGE: css
CODE:
@import "tailwindcss";

@theme static {
  --color-primary: var(--color-red-500);
  --color-secondary: var(--color-blue-500);
}

----------------------------------------

TITLE: First-letter Styling Example
DESCRIPTION: Demonstration of using first-letter pseudo-element variant for drop cap styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-2-2/index.mdx#2025-04-18_snippet_5

LANGUAGE: html
CODE:
<p class="first-letter:float-left first-letter:text-4xl first-letter:font-bold">
  The night was March 31, 1996, and it was finally time for Bret Hart to face off against Shawn Michaels in the long
  anticipated Iron Man match — a 60 minute war of endurance where the man who scored the most number of falls would walk
  away as the WWF World Heavyweight Champion.
</p>

----------------------------------------

TITLE: Using a Custom Value for Backdrop Sepia
DESCRIPTION: Demonstrates how to apply a custom sepia value using Tailwind's utility classes in a React component. This allows the user to specify the intensity of the sepia filter dynamically.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/backdrop-filter-sepia.mdx#2025-04-18_snippet_3

LANGUAGE: JSX
CODE:
<UsingACustomValue utility="backdrop-sepia" value=".25" name="backdrop sepia" />

----------------------------------------

TITLE: Applying Mask Contain in HTML with Tailwind CSS
DESCRIPTION: This example shows how to use the mask-contain utility to scale the mask image to the outer edges without cropping or stretching.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mask-size.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
<div class="mask-contain mask-[url(/img/scribble.png)] bg-[url(/img/mountains.jpg)] ..."></div>

----------------------------------------

TITLE: Importing Tailwind CSS with Preflight in CSS
DESCRIPTION: Shows how Preflight is automatically injected into the base layer when importing tailwindcss. The highlighted line indicates the Preflight import.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_0

LANGUAGE: CSS
CODE:
@layer theme, base, components, utilities;

@import "tailwindcss/theme.css" layer(theme);
@import "tailwindcss/preflight.css" layer(base);
@import "tailwindcss/utilities.css" layer(utilities);

----------------------------------------

TITLE: Importing Components and Utilities for SVG Stroke Styling in React
DESCRIPTION: This snippet imports necessary components and utilities for the SVG stroke styling documentation page. It includes custom components for API tables, examples, and figures, as well as color utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/stroke.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { CustomizingYourThemeColors, ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import colors from "./utils/colors";

----------------------------------------

TITLE: Matching Theme Values in CSS Utility
DESCRIPTION: This CSS snippet demonstrates how to resolve utility values against a set of theme keys, allowing the use of predefined values. The `--value(--theme-key-*)` syntax links utility values to predefined theme settings.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_11

LANGUAGE: css
CODE:
/* [!code filename:CSS] */
@theme {
  --tab-size-2: 2;
  --tab-size-4: 4;
  --tab-size-github: 8;
}

@utility tab-* {
  /* [!code highlight:2] */
  /* prettier-ignore */
  tab-size: --value(--tab-size-*);
}

----------------------------------------

TITLE: Implementing Safe Center Alignment in HTML with Tailwind CSS
DESCRIPTION: Example comparing regular justify-center with the new justify-center-safe utility. The safe alignment changes to start alignment when container overflows, preventing content from overflowing in both directions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4-1/index.mdx#2025-04-18_snippet_13

LANGUAGE: html
CODE:
<ul class="flex justify-center gap-2 ...">
  <li>Sales</li>
  <li>Marketing</li>
  <li>SEO</li>
  <!-- ... -->
</ul>

LANGUAGE: html
CODE:
<ul class="flex justify-center-safe gap-2 ...">
  <li>Sales</li>
  <li>Marketing</li>
  <li>SEO</li>
  <!-- ... -->
</ul>

----------------------------------------

TITLE: Defining Layout and Typography Variables in CSS
DESCRIPTION: This snippet defines CSS variables for spacing, breakpoints, container sizes, typography scales, font weights, letter spacing, line heights, and border radii.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_28

LANGUAGE: CSS
CODE:
  --spacing: 0.25rem;

  --breakpoint-sm: 40rem;
  --breakpoint-md: 48rem;
  --breakpoint-lg: 64rem;
  --breakpoint-xl: 80rem;
  --breakpoint-2xl: 96rem;

  --container-3xs: 16rem;
  --container-2xs: 18rem;
  --container-xs: 20rem;
  --container-sm: 24rem;
  --container-md: 28rem;
  --container-lg: 32rem;
  --container-xl: 36rem;
  --container-2xl: 42rem;
  --container-3xl: 48rem;
  --container-4xl: 56rem;
  --container-5xl: 64rem;
  --container-6xl: 72rem;
  --container-7xl: 80rem;

  --text-xs: 0.75rem;
  --text-xs--line-height: calc(1 / 0.75);
  --text-sm: 0.875rem;
  --text-sm--line-height: calc(1.25 / 0.875);
  --text-base: 1rem;
  --text-base--line-height: calc(1.5 / 1);
  --text-lg: 1.125rem;
  --text-lg--line-height: calc(1.75 / 1.125);
  --text-xl: 1.25rem;
  --text-xl--line-height: calc(1.75 / 1.25);
  --text-2xl: 1.5rem;
  --text-2xl--line-height: calc(2 / 1.5);
  --text-3xl: 1.875rem;
  --text-3xl--line-height: calc(2.25 / 1.875);
  --text-4xl: 2.25rem;
  --text-4xl--line-height: calc(2.5 / 2.25);
  --text-5xl: 3rem;
  --text-5xl--line-height: 1;
  --text-6xl: 3.75rem;
  --text-6xl--line-height: 1;
  --text-7xl: 4.5rem;
  --text-7xl--line-height: 1;
  --text-8xl: 6rem;
  --text-8xl--line-height: 1;
  --text-9xl: 8rem;
  --text-9xl--line-height: 1;

  --font-weight-thin: 100;
  --font-weight-extralight: 200;
  --font-weight-light: 300;
  --font-weight-normal: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;
  --font-weight-extrabold: 800;
  --font-weight-black: 900;

  --tracking-tighter: -0.05em;
  --tracking-tight: -0.025em;
  --tracking-normal: 0em;
  --tracking-wide: 0.025em;
  --tracking-wider: 0.05em;
  --tracking-widest: 0.1em;

  --leading-tight: 1.25;
  --leading-snug: 1.375;
  --leading-normal: 1.5;
  --leading-relaxed: 1.625;
  --leading-loose: 2;

  --radius-xs: 0.125rem;
  --radius-sm: 0.25rem;
  --radius-md: 0.375rem;
  --radius-lg: 0.5rem;
  --radius-xl: 0.75rem;
  --radius-2xl: 1rem;
  --radius-3xl: 1.5rem;
  --radius-4xl: 2rem;

----------------------------------------

TITLE: Meta Configuration for Blog Post in JavaScript
DESCRIPTION: Defines metadata for the blog post including title, description, date, authors, and excerpt about TailwindCSS JIT compiler.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/just-in-time-the-next-generation-of-tailwind-css/index.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
export const meta = {
  title: `Just-In-Time: The Next Generation of Tailwind CSS`,
  description: `One of the hardest constraints we've had to deal with as we've improved Tailwind CSS over the years is the generated file size in development. Today I'm super excited to share a new project that makes this constraint a thing of the past: a just-in-time compiler for Tailwind CSS.`,
  date: "2021-03-15T16:30:00.000Z",
  authors: [adamwathan],
  image,
  excerpt: (
    <>
      One of the hardest constraints we've had to deal with as we've improved Tailwind CSS over the years is the
      generated file size in development. With enough customizations to your config file, the generated CSS can reach
      10mb or more, and there's only so much CSS that build tools and even the browser itself will comfortably tolerate.
    </>
  ),
};

----------------------------------------

TITLE: Using Box Decoration Break Utilities in TypeScript
DESCRIPTION: This snippet imports various components necessary for displaying the API table and examples of box-decoration-break utilities. It provides a structured way to show how these utilities can be utilized in a project while maintaining a clear description and title.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/box-decoration-break.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

export const title = "box-decoration-break";
export const description =
  "Utilities for controlling how element fragments should be rendered across multiple lines, columns, or pages.";

<ApiTable
  rows={[
    ["box-decoration-clone", "box-decoration-break: clone"],
    ["box-decoration-slice", "box-decoration-break: slice"],
  ]}
/>

----------------------------------------

TITLE: Image with Link Component
DESCRIPTION: This HTML snippet displays an image wrapped in a link, directing the user to the Tailwind Jobs website. The `Image` component likely handles image optimization, and the `Link` component provides client-side navigation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2022-08-17-tailwind-framer-motion-template-and-tailwind-jobs/index.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<Link href="https://jobs.tailwindcss.com">
  <Image alt="Tailwind Jobs" src={tailwindJobs} />
</Link>

----------------------------------------

TITLE: Importing Components for Tailwind CSS Documentation in JSX
DESCRIPTION: Imports various custom components used for rendering the documentation page, including ApiTable, Example, Figure, and Stripes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/min-height.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { CustomizingYourSpacingScale, ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { Stripes } from "@/components/stripes.tsx";

----------------------------------------

TITLE: Importing Modules in Typescript
DESCRIPTION: This code snippet imports necessary modules for a React component. `ApiTable` and `ResponsiveDesign` are custom components used within the page. These imported components are essential for rendering the API table and demonstrating responsive design capabilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/break-before.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

export const title = "break-before";
export const description = "Utilities for controlling how a column or page should break before an element.";

----------------------------------------

TITLE: Isolated Mix Blend Mode Example
DESCRIPTION: HTML example showing how to use the isolate utility with mix-blend-multiply to control blending context.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/mix-blend-mode.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="isolate flex justify-center -space-x-14">
  <div class="bg-yellow-500 mix-blend-multiply ..."></div>
  <div class="bg-green-500 mix-blend-multiply ..."></div>
</div>

<div class="flex justify-center -space-x-14">
  <div class="bg-yellow-500 mix-blend-multiply ..."></div>
  <div class="bg-green-500 mix-blend-multiply ..."></div>
</div>

----------------------------------------

TITLE: Linear Gradient Angles in Tailwind CSS
DESCRIPTION: This HTML code demonstrates the use of linear gradient angles with utilities like `bg-linear-45` in Tailwind CSS v4.0. This creates a gradient on a 45-degree angle.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_15

LANGUAGE: html
CODE:
<!-- [!code classes:bg-linear-45] -->
<div class="bg-linear-45 from-indigo-500 via-purple-500 to-pink-500"></div>

----------------------------------------

TITLE: Clearing Right Example - Tailwind CSS
DESCRIPTION: This JSX snippet showcases the usage of the `clear-right` utility class.  It ensures the paragraph element is positioned below any right-floated elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/clear.mdx#2025-04-18_snippet_3

LANGUAGE: JSX
CODE:
  "<>
      <img
        className=\"float-left mr-6 aspect-6/5 w-2/5 rounded-lg object-cover outline -outline-offset-1 outline-black/10\"
        src=\"https://images.unsplash.com/photo-1434394354979-a235cd36269d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1000&h=1000&q=90\"
      />
      <img
        className=\"float-right mb-4 ml-6 aspect-16/9 w-1/4 rounded-lg object-cover outline -outline-offset-1 outline-black/10\"
        src=\"https://images.unsplash.com/photo-1554629947-334ff61d85dc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=formathttps://images.unsplash.com/photo-1454496522488-7a8e488e8606?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1000&h=1000&q=90\"
      />
      <p className=\"clear-right text-justify\">
        Maybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but
        what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding
        drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve
        better? Look. If you think this is about overdue fines and missing books, you'd better think again. This is
        about that kid's right to read a book without getting his mind warped! Or: maybe that turns you on, Seinfeld;
        maybe that's how y'get your kicks. You and your good-time buddies.
      </p>
    </>"

----------------------------------------

TITLE: Post Metadata Configuration with Author Info
DESCRIPTION: Example of configuring a blog post's metadata including title, description, date, and author information with image imports.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/building-the-tailwind-blog/index.mdx#2025-04-18_snippet_2

LANGUAGE: javascript
CODE:
import { bradlc } from "@/app/blog/authors";
import openGraphImage from "./card.jpeg";

export const meta = {
  title: "Introducing linting for Tailwind CSS IntelliSense",
  description: `Today we're releasing a new version of the Tailwind CSS IntelliSense extension for Visual Studio Code that adds Tailwind-specific linting to both your CSS and your markup.`,
  date: "2020-06-23T18:52:03Z",
  authors: [bradlc],
  image: openGraphImage,
  discussion: "https://github.com/tailwindcss/tailwindcss/discussions/1956",
};

----------------------------------------

TITLE: Configuring Background Clip Variants in Tailwind
DESCRIPTION: Configuration for the background-clip utility variants in Tailwind CSS v1.7.0.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_1

LANGUAGE: javascript
CODE:
module.exports = {
  variants: {
    backgroundClip: ["responsive"]
  }
}

----------------------------------------

TITLE: Importing Components for Tailwind CSS Documentation
DESCRIPTION: Imports the ApiTable and UsingACustomValue components used for rendering documentation.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transform.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { UsingACustomValue } from "@/components/content.tsx";

----------------------------------------

TITLE: Creating an API Table with Grayscale Utilities
DESCRIPTION: This snippet defines an API table with different classes to apply grayscale filters using Tailwind CSS. The table includes utility classes for specific grayscale percentages and custom grayscale values.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-grayscale.mdx#2025-04-18_snippet_1

LANGUAGE: JavaScript
CODE:
<ApiTable
  rows=[
    ["grayscale", "filter: grayscale(100%);"],
    ["grayscale-<number>", "filter: grayscale(<number>%);"],
    ["grayscale-(<custom-property>)", "filter: grayscale(var(<custom-property>));"],
    ["grayscale-[<value>]", "filter: grayscale(<value>);"],
  ]
/>

----------------------------------------

TITLE: Installing Latest Tailwind CSS via npm
DESCRIPTION: This command demonstrates how to upgrade to the latest version of Tailwind CSS using npm. It's used to install the new v3.4 release with all the new features.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-4/index.mdx#2025-04-18_snippet_2

LANGUAGE: sh
CODE:
npm install tailwindcss@latest

----------------------------------------

TITLE: Demonstrating Invisible Element with Tailwind CSS
DESCRIPTION: Provides an example of using the 'invisible' utility class to hide an element while maintaining its layout impact. Includes both JSX for rendering and the corresponding HTML structure.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/visibility.mdx#2025-04-18_snippet_3

LANGUAGE: JSX
CODE:
<Figure>

<Example>
  {
    <div className="grid grid-cols-1">
      <Stripes border className="col-start-1 row-start-1 rounded-lg" />
      <div className="col-start-1 row-start-1 grid grid-cols-3 gap-4 font-mono text-sm leading-6 font-bold text-white">
        <div className="flex items-center justify-center rounded-lg bg-cyan-500 p-4">01</div>
        <div className="invisible flex items-center justify-center rounded-lg bg-cyan-500 p-4">02</div>
        <div className="flex items-center justify-center rounded-lg bg-cyan-500 p-4">03</div>
      </div>
    </div>
  }
</Example>

```html
<!-- [!code classes:invisible] -->
<div class="grid grid-cols-3 gap-4">
  <div>01</div>
  <div class="invisible ...">02</div>
  <div>03</div>
</div>
```

</Figure>

----------------------------------------

TITLE: Configuring ARIA variants in Tailwind CSS
DESCRIPTION: This code snippet shows how to configure custom ARIA variants within the `tailwind.config.js` file. It demonstrates extending the `aria` theme to include `asc` and `desc` variants for the `sort` ARIA attribute. This allows for styling based on ARIA sort ascending and descending states.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_4

LANGUAGE: javascript
CODE:
module.exports = {
  theme: {
    extend: {
      aria: {
        asc: 'sort="ascending"',
        desc: 'sort="descending"',
      },
    },
  },
};

----------------------------------------

TITLE: Importing Components for Tailwind CSS Documentation
DESCRIPTION: Imports necessary components for rendering the documentation page, including ApiTable, Example, Figure, and ResponsiveDesign.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/word-break.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Implementing Nullable Combobox in React
DESCRIPTION: This code snippet shows how to create a nullable combobox using the Combobox component from Headless UI. By utilizing the 'nullable' prop, users can delete the current selected value without restoring the previous one.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2022-05-23-headless-ui-v1-6-tailwind-ui-team-management/index.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
function MyCombobox({ items }) {
  const [selectedItem, setSelectedItem] = useState([]);

  return (
    // [!code highlight:2]
    <Combobox value={selectedItem} onChange={setSelectedItem} nullable>
      <Combobox.Input />
      <Combobox.Options>
        {items.map((item) => (
          <Combobox.Option key={item} value={item}>
            {item}
          </Combobox.Option>
        ))}
      </Combobox.Options>
    </Combobox>
  );
}


----------------------------------------

TITLE: Max-Width Container Queries
DESCRIPTION: This HTML code demonstrates max-width container queries using the new `@max-*` variant in Tailwind CSS v4.0.  The `@max-md:grid-cols-1` class applies when the container's maximum width is medium.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v4/index.mdx#2025-04-18_snippet_12

LANGUAGE: html
CODE:
<!-- [!code filename:HTML] -->
<!-- [!code classes:@container,@max-md:grid-cols-1] -->
<div class="@container">
  <div class="grid grid-cols-3 @max-md:grid-cols-1">
    <!-- ... -->
  </div>
</div>

----------------------------------------

TITLE: Customizing Tailwind CSS Theme Colors
DESCRIPTION: This example shows how to customize theme colors specifically for borders in Tailwind CSS, allowing for more control over styling according to design requirements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-color.mdx#2025-04-18_snippet_10

LANGUAGE: jsx
CODE:
<CustomizingYourThemeColors utility="border" />

----------------------------------------

TITLE: Referencing Styles with @reference in Vue
DESCRIPTION: In Vue components, the `@reference` directive is used to import styles from a referenced stylesheet without including styles in the output, ensuring a clean use of theme variables.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/functions-and-directives.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<template>
  <h1>Hello world!</h1>
</template>

<style>
  @reference "../../app.css";

  h1 {
    @apply text-2xl font-bold text-red-500;
  }
</style>

----------------------------------------

TITLE: Tailwind CSS Basic Content Example
DESCRIPTION: This example demonstrates how to set the content of the `::after` pseudo-element using the `content-[<value>]` syntax in Tailwind CSS. The example styles a link with a small arrow icon after the text.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/content.mdx#2025-04-18_snippet_1

LANGUAGE: html
CODE:
"<!-- [!code classes:after:content-['_↗']] -->
<!-- prettier-ignore -->
<p>Higher resolution means more than just a better-quality image. With a
Retina 6K display, <a class="text-blue-600 after:content-['_↗']" href="...">
Pro Display XDR</a> gives you nearly 40 percent more screen real estate than
a 5K display.</p>"

----------------------------------------

TITLE: Using Custom Breakpoint in HTML with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the custom breakpoint defined in the overridden theme within HTML markup.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_13

LANGUAGE: html
CODE:
<div class="grid grid-cols-1 sm:grid-cols-3">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Defining Font Size API Table - JavaScript
DESCRIPTION: This snippet defines an API table that maps various font size utility classes in Tailwind CSS to their corresponding CSS values and line heights.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/font-size.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { ApiTable } from "@/components/api-table.tsx";

export const title = "font-size";
export const description = "Utilities for controlling the font size of an element.";

<ApiTable
  rows={[  
    [
      "text-xs",
      "font-size: var(--text-xs); /* 0.75rem (12px) */ \nline-height: var(--text-xs--line-height); /* calc(1 / 0.75) */",
    ],
    [
      "text-sm",
      "font-size: var(--text-sm); /* 0.875rem (14px) */ \nline-height: var(--text-sm--line-height); /* calc(1.25 / 0.875) */",
    ],
    [
      "text-base",
      "font-size: var(--text-base); /* 1rem (16px) */ \nline-height: var(--text-base--line-height); /* calc(1.5 / 1) */",
    ],
    [
      "text-lg",
      "font-size: var(--text-lg); /* 1.125rem (18px) */ \nline-height: var(--text-lg--line-height); /* calc(1.75 / 1.125) */",
    ],
    [
      "text-xl",
      "font-size: var(--text-xl); /* 1.25rem (20px) */ \nline-height: var(--text-xl--line-height); /* calc(1.75 / 1.25) */",
    ],
    [
      "text-2xl",
      "font-size: var(--text-2xl); /* 1.5rem (24px) */ \nline-height: var(--text-2xl--line-height); /* calc(2 / 1.5) */",
    ],
    [
      "text-3xl",
      "font-size: var(--text-3xl); /* 1.875rem (30px) */ \nline-height: var(--text-3xl--line-height); /* calc(2.25 / 1.875) */",
    ],
    [
      "text-4xl",
      "font-size: var(--text-4xl); /* 2.25rem (36px) */ \nline-height: var(--text-4xl--line-height); /* calc(2.5 / 2.25) */",
    ],
    [
      "text-5xl",
      "font-size: var(--text-5xl); /* 3rem (48px) */ \nline-height: var(--text-5xl--line-height); /* 1 */",
    ],
    [
      "text-6xl",
      "font-size: var(--text-6xl); /* 3.75rem (60px) */ \nline-height: var(--text-6xl--line-height); /* 1 */",
    ],
    [
      "text-7xl",
      "font-size: var(--text-7xl); /* 4.5rem (72px) */ \nline-height: var(--text-7xl--line-height); /* 1 */",
    ],
    [
      "text-8xl",
      "font-size: var(--text-8xl); /* 6rem (96px) */ \nline-height: var(--text-8xl--line-height); /* 1 */",
    ],
    [
      "text-9xl",
      "font-size: var(--text-9xl); /* 8rem (128px) */ \nline-height: var(--text-9xl--line-height); /* 1 */",
    ],
    [
      "text-(length:<custom-property>)",
      "font-size: var(<custom-property>);",
    ],
    [
      "text-[<value>]",
      "font-size: <value>;",
    ],
  ]}
/>

----------------------------------------

TITLE: Creating a Virtualized Combobox with Headless UI
DESCRIPTION: This example illustrates how to implement a virtualized combobox using Headless UI and TanStack Virtual. It utilizes state management to filter a large set of data and render only the visible options efficiently.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/headless-ui-v2/index.mdx#2025-04-18_snippet_6

LANGUAGE: jsx
CODE:
import { Combobox, ComboboxButton, ComboboxInput, ComboboxOption, ComboboxOptions } from "@headlessui/react";
import { ChevronDownIcon } from "@heroicons/react/20/solid";
import { useState } from "react";

const people = [
  { id: 1, name: "Rossie Abernathy" },
  { id: 2, name: "Juana Abshire" },
  { id: 3, name: "Leonel Abshire" },
  { id: 4, name: "Llewellyn Abshire" },
  { id: 5, name: "Ramon Abshire" },
  // ...up to 1000 people
];

function Example() {
  const [query, setQuery] = useState("");
  const [selected, setSelected] = useState(people[0]);

  const filteredPeople =
    query === ""
      ? people
      : people.filter((person) => {
          return person.name.toLowerCase().includes(query.toLowerCase());
        });

  return (
    <Combobox
      value={selected}
      // [!code highlight:2]
      virtual={{ options: filteredPeople }}
      onChange={(value) => setSelected(value)}
      onClose={() => setQuery("")}
    >
      <div>
        <ComboboxInput displayValue={(person) => person?.name} onChange={(event) => setQuery(event.target.value)} />
        <ComboboxButton>
          <ChevronDownIcon />
        </ComboboxButton>
      </div>
      <ComboboxOptions>
        // [!code highlight:6]
        {({ option: person }) => (
          <ComboboxOption key={person.id} value={person}>
            {person.name}
          </ComboboxOption>
        )}
      </ComboboxOptions>
    </Combobox>
  );
}

----------------------------------------

TITLE: Dynamic Group Variant in HTML
DESCRIPTION: This HTML snippet demonstrates the creation of dynamic group variants. It creates a `group-[.is-published]:block` class to display an element when the parent has the `is-published` class.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_18

LANGUAGE: html
CODE:
"<!-- [!code word:group-[.is-published\]\:block] -->
<div class="group is-published">
  <div class="group-[.is-published]:block hidden">Published</div>
</div>"

----------------------------------------

TITLE: Using Custom Breakpoint Variant
DESCRIPTION: Demonstrates using the custom breakpoint variant in responsive design.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/theme.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<div class="3xl:grid-cols-6 grid grid-cols-2 md:grid-cols-4">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Applying Overline Utility in HTML
DESCRIPTION: This example shows how to use the 'overline' utility class in Tailwind CSS to add an overline to text.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-line.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<!-- [!code classes:overline] -->
<p class="overline">The quick brown fox...</p>

----------------------------------------

TITLE: Next.js Module Imports and Meta Configuration
DESCRIPTION: Imports necessary modules and defines metadata for the job posting page including title, description, date, authors, and image configuration
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/hiring-a-design-engineer-and-staff-engineer/index.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { adamwathan } from "@/app/blog/authors";
import card from "./card.jpg";
import { Image } from "@/components/media";
import Link from "next/link";
import designEngineer from "./design-engineer.jpg";
import staffEngineer from "./staff-engineer.jpg";

export const meta = {
  title: "We're hiring a Design Engineer + Staff Engineer",
  description: `We just tagged the first public v4.0.0-alpha so you can start experimenting with it and help us get to a stable release later this year.`,
  date: "2024-03-19T18:00:00.000Z",
  authors: [adamwathan],
  image: card,
  excerpt: (
    <>
      We're hiring a Design Engineer and Staff Software Engineer to work on some ambitious new projects with us. Both
      roles are fully remote, with a salary of $275,000 USD.
    </>
  ),
};

----------------------------------------

TITLE: Importing Blog Post Meta Components with JavaScript
DESCRIPTION: JavaScript code for importing required components and defining metadata for the blog post, including title, description, authors and imagery.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/introducing-heroicons/index.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { steveschoger } from "@/app/blog/authors";
import card from "./card.jpg";
import heroPatternsPreview from "./heropatterns-preview.jpg";
import banner from "./banner.png";
import iconStyles from "./icon-styles.png";
import { Figure } from "@/components/figure.tsx";
import { Image } from "@/components/media";
import Link from "next/link";

export const meta = {
  title: "Introducing Heroicons.com",
  description: `Today we're launching the official Heroicons web experience, which makes it easier than ever to search for icons and quickly copy them to your clipboard as Tailwind-ready HTML or JSX.`,
  date: "2020-08-25T13:00:00.000Z",
  authors: [steveschoger],
  image: card,
  excerpt: (
    <>
      A few months back we quietly released <Link href="https://www.heroicons.com/">Heroicons</Link>, a set of free SVG
      icons we initially designed to support the components in Tailwind UI. Today we're launching the official{" "}
      <Link href="https://www.heroicons.com/">Heroicons web experience</Link>, which makes it easier than ever to search
      for icons and quickly copy them to your clipboard as Tailwind-ready HTML or JSX.
    </>
  ),
};

----------------------------------------

TITLE: Defining Metadata for Forced Color Adjust Documentation
DESCRIPTION: Exports the title and description for the documentation page about forced color adjust utilities
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/forced-color-adjust.mdx#2025-04-18_snippet_1

LANGUAGE: typescript
CODE:
export const title = "forced-color-adjust";
export const description = "Utilities for opting in and out of forced colors.";

----------------------------------------

TITLE: Defining Page Metadata for Transform Origin Documentation
DESCRIPTION: This code sets the title and description for the transform origin documentation page, providing context for the utilities being described.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transform-origin.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
export const title = "transform-origin";
export const description = "Utilities for specifying the origin for an element's transformations.";

----------------------------------------

TITLE: Configuring Deprecated Gap Utilities Removal in Tailwind CSS
DESCRIPTION: This JavaScript snippet configures Tailwind CSS to remove deprecated gap utilities. Setting the 'removeDeprecatedGapUtilities' flag to true in the 'tailwind.config.js' file prepares the project for clean migration to the latest utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_6

LANGUAGE: javascript
CODE:
module.exports = {
  future: {
    removeDeprecatedGapUtilities: true,
  },
};

----------------------------------------

TITLE: Implementing Fixed Background Image with HTML
DESCRIPTION: This HTML snippet provides an example of using the `bg-fixed` utility to fix a background image relative to the viewport, which prevents it from scrolling with the content. Key usages include a URL to load the background image onto a div with styled properties. Considerations include ensuring that the fixed background behavior is supported and displayed as expected in all target browsers.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-attachment.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<!-- [!code classes:bg-fixed] -->
<div class="bg-[url(/img/mountains.jpg)] bg-fixed ...">
  <!-- ... -->
</div>

----------------------------------------

TITLE: Defining Tailwind CSS Text Wrapping Utilities
DESCRIPTION: Defines an API table for Tailwind CSS text wrapping utilities, including text-wrap, text-nowrap, text-balance, and text-pretty, along with their corresponding CSS properties.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-wrap.mdx#2025-04-18_snippet_1

LANGUAGE: JSX
CODE:
<ApiTable
  rows={[
    ["text-wrap", "text-wrap: wrap;"],
    ["text-nowrap", "text-wrap: nowrap;"],
    ["text-balance", "text-wrap: balance;"],
    ["text-pretty", "text-wrap: pretty;"],
  ]}
/>

----------------------------------------

TITLE: Applying nth-of-type Styles in Svelte with Tailwind CSS
DESCRIPTION: This snippet demonstrates how to use the nth-of-type variant in Tailwind CSS within a Svelte component. It applies specific margin styles to elements at certain positions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/hover-focus-and-other-states.mdx#2025-04-18_snippet_87

LANGUAGE: svelte
CODE:
<nav>
  <img src="/logo.svg" alt="Vandelay Industries" />
  {#each links as link}
    <a href="#" class="mx-2 nth-of-type-3:mx-6 nth-of-type-[3n+1]:mx-7 ...">
      <!-- ... -->
    </a>
  {/each}
  <button>More</button>
</nav>

----------------------------------------

TITLE: Importing Components and Assets in JavaScript
DESCRIPTION: This snippet shows the imports for various components and assets used in the blog post, including React components and author information.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/automatic-class-sorting-with-prettier/index.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { Figure } from "@/components/figure.tsx";
import { CodeBlock } from "@/components/code-example";
import { Image } from "@/components/media";
import Link from "next/link";
import { reinink, adamwathan } from "@/app/blog/authors";
import card from "./card.jpg";
import banner from "./banner.jpg";

----------------------------------------

TITLE: Configuring Font Size with Letter Spacing
DESCRIPTION: Configuration showing how to set default letter-spacing values for different font sizes using the new tuple syntax.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_3

LANGUAGE: javascript
CODE:
module.exports = {
  theme: {
    fontSize: {
      '2xl': ['24px', {
        letterSpacing: '-0.01em'
      }],
      '3xl': ['32px', {
        letterSpacing: '-0.02em',
        lineHeight: '40px'
      }]
    }
  }
}

----------------------------------------

TITLE: Importing Components for Tailwind CSS Documentation
DESCRIPTION: Imports various React components used for creating the documentation page for transition duration utilities in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/transition-duration.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";

export const title = "transition-duration";
export const description = "Utilities for controlling the duration of CSS transitions.";

----------------------------------------

TITLE: Basic Flex Item Growing Example
DESCRIPTION: Demonstrates how to use the 'grow' utility to allow a flex item to fill available space, showing flexible layout with fixed and growing elements.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/flex-grow.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<div class="flex ...">
  <div class="size-14 flex-none ...">01</div>
  <div class="size-14 grow ...">02</div>
  <div class="size-14 flex-none ...">03</div>
</div>

----------------------------------------

TITLE: Applying List Styles with Tailwind in HTML
DESCRIPTION: Demonstrates how to style lists using Tailwind's list-style-type and list-style-position utilities after Preflight removes default styling.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/preflight.mdx#2025-04-18_snippet_6

LANGUAGE: HTML
CODE:
<ul class="list-inside list-disc">
  <li>One</li>
  <li>Two</li>
  <li>Three</li>
</ul>

----------------------------------------

TITLE: Importing Resources and Defining Metadata for Catalyst Blog Post
DESCRIPTION: This snippet imports various resources and defines metadata for the blog post introducing Catalyst. It includes imports for images, authors, and components, as well as setting up the meta object with title, description, date, and other relevant information.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/introducing-catalyst/index.mdx#2025-04-18_snippet_0

LANGUAGE: JavaScript
CODE:
import { adamwathan } from "@/app/blog/authors";
import card from "./card.png";
import catalystUiKit from "./catalyst-ui-kit.png";
import { Image, Video } from "@/components/media";
import catalystInstallation from "./catalyst-installation.jpg";
import catalystComponents from "./catalyst-components.png";
import catalystComponentsDarkMode from "./catalyst-components-dark-mode.png";
import catalystShadowDetail from "./catalyst-shadow-detail.png";
import catalystButtons from "./catalyst-buttons.png";
import catalystTable from "./catalyst-table.png";

export const meta = {
  title: "Introducing Catalyst: A modern UI kit for React",
  description: `We just released the first development preview of Catalyst, our new fully-componentized, batteries-included application UI kit for React.`,
  date: "2023-12-20T20:00:00.000Z",
  authors: [adamwathan],
  image: card,
  excerpt: (
    <>
      Today's the day — we just published the first development preview of Catalyst, our first fully-componentized,
      batteries-included application UI kit for React, just in time for your holiday hacking sessions.
    </>
  ),
};

----------------------------------------

TITLE: Creating a Case Study Page with MDX in Next.js
DESCRIPTION: This snippet shows how to structure a case study page using MDX, including metadata, custom components, and markdown content. It demonstrates the integration of MDX with Next.js for creating rich, interactive content pages.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2023-08-07-meet-studio-our-new-agency-template/index.mdx#2025-04-18_snippet_1

LANGUAGE: mdx
CODE:
import logo from "@/images/clients/phobia/logomark-dark.svg";
import imageHero from "./hero.jpg";
import imageJennyWilson from "./jenny-wilson.jpeg";

export const caseStudy = {
  client: "Phobia",
  title: "Overcome your fears, find your match",
  description:
    "Find love in the face of fear — Phobia is a dating app that matches users based on their mutual phobias so they can be scared together.",
  summary: [
    "Find love in the face of fear — Phobia is a dating app that matches users based on their mutual phobias so they can be scared together.",
    "We worked with Phobia to develop a new onboarding flow. A user is shown pictures of common phobias and we use the microphone to detect which ones make them scream, feeding the results into the matching algorithm.",
  ],
  logo,
  image: { src: imageHero },
  date: "2022-06",
  service: "App development",
  testimonial: {
    author: { name: "Jenny Wilson", role: "CPO of Phobia" },
    content:
      "The team at Studio went above and beyond with our onboarding, even finding a way to access the user's microphone without triggering one of those annoying permission dialogs.",
  },
};

export const metadata = {
  title: `${caseStudy.client} Case Study`,
  description: caseStudy.description,
};

## Overview

Noticing incredibly high churn, the team at Phobia came to the conclusion that, instead of having a
fundamentally flawed business idea, they needed to improve their onboarding process.

Previously users selected their phobias manually but this led to some users selecting things they
weren't actually afraid of to increase their matches.

To combat this, we developed a system that displays a slideshow of common phobias during
onboarding. We then use malware to surreptitiously access their microphone and detect when they
have audible reactions. We measure the pitch, volume and duration of their screams and feed that
information to the matching algorithm.

The next phase is a VR version of the onboarding flow where users are subjected to a series of
scenarios that will determine their fears. We are currently developing the first scenario, working
title: "Jumping out of a plane full of spiders".

----------------------------------------

TITLE: Rendering API Table for Background Image Utilities - React
DESCRIPTION: This snippet renders an API table component that lists various utility classes for controlling background images in Tailwind CSS, including custom values, linear gradients, radial gradients, and conic gradients.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/background-image.mdx#2025-04-18_snippet_1

LANGUAGE: JavaScript
CODE:
<ApiTable
  rows={[  
    ["bg-[<value>]", "background-image: <value>;"],  
    ["bg-(image:<custom-property>)", "background-image: var(<custom-property>);"],  
    ["bg-none", "background-image: none;"],  
    ["bg-linear-to-t", "background-image: linear-gradient(to top, var(--tw-gradient-stops));"],  
    ["bg-linear-to-tr", "background-image: linear-gradient(to top right, var(--tw-gradient-stops));"],  
    ["bg-linear-to-r", "background-image: linear-gradient(to right, var(--tw-gradient-stops));"],  
    ["bg-linear-to-br", "background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));"],  
    ["bg-linear-to-b", "background-image: linear-gradient(to bottom, var(--tw-gradient-stops));"],  
    ["bg-linear-to-bl", "background-image: linear-gradient(to bottom left, var(--tw-gradient-stops));"],  
    ["bg-linear-to-l", "background-image: linear-gradient(to left, var(--tw-gradient-stops));"],  
    ["bg-linear-to-tl", "background-image: linear-gradient(to top left, var(--tw-gradient-stops));"],  
    ["bg-linear-<angle>", "background-image: linear-gradient(<angle> in oklab, var(--tw-gradient-stops));"],  
    ["-bg-linear-<angle>", "background-image: linear-gradient(-<angle> in oklab, var(--tw-gradient-stops));"],  
    [
      "bg-linear-(<custom-property>)",
      "background-image: linear-gradient(var(--tw-gradient-stops, var(<custom-property>)));",
    ],  
    ["bg-linear-[<value>]", "background-image: linear-gradient(var(--tw-gradient-stops, <value>));"],  
    ["bg-radial", "background-image: radial-gradient(in oklab, var(--tw-gradient-stops));"],  
    [
      "bg-radial-(<custom-property>)",
      "background-image: radial-gradient(var(--tw-gradient-stops,  var(<custom-property>)));",
    ],  
    ["bg-radial-[<value>]", "background-image: radial-gradient(var(--tw-gradient-stops, <value>));"],  
    ["bg-conic-<angle>", "background-image: conic-gradient(from <angle> in oklab, var(--tw-gradient-stops));"],  
    ["-bg-conic-<angle>", "background-image: conic-gradient(from -<angle> in oklab, var(--tw-gradient-stops));"],  
    ["bg-conic-(<custom-property>)", "background-image: var(<custom-property>);"],  
    ["bg-conic-[<value>]", "background-image: <image>;"],  
    ["from-<color>", "--tw-gradient-from: <color>;"],  
    ["from-<percentage>", "--tw-gradient-from-position: <percentage>;"],  
    ["from-(<custom-property>)", "--tw-gradient-from: var(<custom-property>);"],  
    ["from-[<value>]"]  
    ["via-<color>", "--tw-gradient-via: <color>;"],  
    ["via-<percentage>", "--tw-gradient-via-position: <percentage>;"],  
    ["via-(<custom-property>)", "--tw-gradient-via: var(<custom-property>);"],  
    ["via-[<value>]"]  
    ["to-<color>", "--tw-gradient-to: <color>;"],  
    ["to-<percentage>", "--tw-gradient-to-position: <percentage>;"],  
    ["to-(<custom-property>)", "--tw-gradient-to: var(<custom-property>);"],  
    ["to-[<value>]"]
  ]}
/>

----------------------------------------

TITLE: Enabling Complex Classes in Tailwind CSS
DESCRIPTION: This JavaScript snippet shows how to enable the use of complex classes with '@apply' in Tailwind CSS by setting the 'applyComplexClasses' flag, which introduces breaking changes to previous implementations.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-1-7/index.mdx#2025-04-18_snippet_9

LANGUAGE: javascript
CODE:
module.exports = {
  experimental: {
    applyComplexClasses: true,
  },
};

----------------------------------------

TITLE: Rendering a Basic HTML Table with Border Spacing
DESCRIPTION: This snippet demonstrates how to render an HTML table with separate borders and spacing between table cell borders using Tailwind CSS utilities. The table includes headers for 'State' and 'City', followed by rows with state and city data. It interprets border-spacing utilities like 'border-spacing-2' to style the table accordingly. Input data includes state and city names, and the output is a styled HTML table.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-spacing.mdx#2025-04-18_snippet_1

LANGUAGE: HTML
CODE:
<table class="border-separate border-spacing-2 border border-gray-400 dark:border-gray-500">
  <thead>
    <tr>
      <th class="border border-gray-300 dark:border-gray-600">State</th>
      <th class="border border-gray-300 dark:border-gray-600">City</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td class="border border-gray-300 dark:border-gray-700">Indiana</td>
      <td class="border border-gray-300 dark:border-gray-700">Indianapolis</td>
    </tr>
    <tr>
      <td class="border border-gray-300 dark:border-gray-700">Ohio</td>
      <td class="border border-gray-300 dark:border-gray-700">Columbus</td>
    </tr>
    <tr>
      <td class="border border-gray-300 dark:border-gray-700">Michigan</td>
      <td class="border border-gray-300 dark:border-gray-700">Detroit</td>
    </tr>
  </tbody>
</table>

----------------------------------------

TITLE: Importing Components for Tailwind CSS Documentation
DESCRIPTION: Imports necessary components for creating the documentation page, including ApiTable, Example, Figure, and ResponsiveDesign.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/resize.mdx#2025-04-18_snippet_0

LANGUAGE: jsx
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign } from "@/components/content.tsx";

----------------------------------------

TITLE: Using Configured Data Attribute Shortcut in HTML
DESCRIPTION: This HTML snippet demonstrates the usage of the configured data attribute shortcut. It applies the `underline` style when the `data-ui` attribute contains the value `checked`.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/tailwindcss-v3-2/index.mdx#2025-04-18_snippet_12

LANGUAGE: html
CODE:
"<div data-ui="checked active" class="data-checked:underline">
  <!-- ... -->
</div>"

----------------------------------------

TITLE: Importing Components for Border Width Documentation
DESCRIPTION: Importing necessary React components and utility functions for rendering border width examples and API table
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/border-width.mdx#2025-04-18_snippet_0

LANGUAGE: typescript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import dedent from "dedent";

----------------------------------------

TITLE: Defining Hue-Rotate Filter Utilities - JavaScript
DESCRIPTION: Defines the structure for hue-rotate filter utilities, specifying different classes to represent the filter's effects based on various angle values. The utility classes allow easy application of hue rotations in Tailwind CSS.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/filter-hue-rotate.mdx#2025-04-18_snippet_0

LANGUAGE: javascript
CODE:
import { ApiTable } from "@/components/api-table.tsx";
import { Example } from "@/components/example.tsx";
import { Figure } from "@/components/figure.tsx";
import { ResponsiveDesign, UsingACustomValue } from "@/components/content.tsx";

export const title = "filter: hue-rotate()";
export const description = "Utilities for applying hue-rotate filters to an element.";

<ApiTable
  rows={[  
    ["hue-rotate-<number>", "filter: hue-rotate(<number>deg);"] ,
    ["-hue-rotate-<number>", "filter: hue-rotate(calc(<number>deg * -1));"],
    ["hue-rotate-(<custom-property>)", "filter: hue-rotate(var(<custom-property>));"],
    ["hue-rotate-[<value>]", "filter: hue-rotate(<value>);"]
  ]}
/>

----------------------------------------

TITLE: Defining Page Metadata for List Style Position Documentation
DESCRIPTION: Exports title and description metadata for the list-style-position documentation page.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/list-style-position.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
export const title = "list-style-position";
export const description = "Utilities for controlling the position of bullets and numbers in lists";

----------------------------------------

TITLE: Defining Page Metadata for Text Decoration Style Documentation
DESCRIPTION: Sets the title and description for the documentation page, focusing on text decoration style utilities.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/text-decoration-style.mdx#2025-04-18_snippet_1

LANGUAGE: JavaScript
CODE:
export const title = "text-decoration-style";
export const description = "Utilities for controlling the style of text decorations.";

----------------------------------------

TITLE: Accessing Theme Values in JavaScript
DESCRIPTION: Shows how to access CSS variable values in JavaScript using getComputedStyle.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/upgrade-guide.mdx#2025-04-18_snippet_26

LANGUAGE: javascript
CODE:
let styles = getComputedStyle(document.documentElement);
let shadow = styles.getPropertyValue("--shadow-xl");

----------------------------------------

TITLE: Responsive Object Positioning with Tailwind CSS
DESCRIPTION: This snippet demonstrates responsive design using Tailwind CSS object position utilities. It applies 'object-center' as the default class and 'object-top' as the featured class for different screen sizes.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-position.mdx#2025-04-18_snippet_7

LANGUAGE: html
CODE:
<ResponsiveDesign
  element="img"
  elementAttributes={{ src: "/img/mountains.jpg" }}
  property="object-position"
  defaultClass="object-center"
  featuredClass="object-top"
/>

----------------------------------------

TITLE: Using Custom Variant in HTML
DESCRIPTION: This HTML snippet showcases using the custom variant `theme-midnight` in HTML. The custom variant will change the background color to black.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/adding-custom-styles.mdx#2025-04-18_snippet_22

LANGUAGE: html
CODE:
<!-- [!code classes:theme-midnight:bg-black] -->
<html data-theme="midnight">
  <button class="theme-midnight:bg-black ..."></button>
</html>

----------------------------------------

TITLE: Object Fill Implementation in HTML
DESCRIPTION: Example showing how to use object-fill utility to stretch content to fit its container, potentially changing aspect ratio.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/docs/object-fit.mdx#2025-04-18_snippet_2

LANGUAGE: html
CODE:
<img class="h-48 w-96 object-fill ..." src="/img/mountains.jpg" />

----------------------------------------

TITLE: Configuring Animated Markers with Framer Motion
DESCRIPTION: Shows how to create animated markers with configurable positions, offsets, and delays using Framer Motion variants and transitions.
SOURCE: https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/blog/2024-09-12-radiant-a-beautiful-new-marketing-site-template/index.mdx#2025-04-18_snippet_1

LANGUAGE: jsx
CODE:
function Marker({
  src,
  top,
  offset,
  delay,
}: {
  src: string
  top: number
  offset: number
  delay: number
}) {
  return (
    <motion.div
      variants={{
        idle: { scale: 0, opacity: 0, rotateX: 0, rotate: 0, y: 0 },
        active: { y: [-20, 0, 4, 0], scale: [0.75, 1], opacity: [0, 1] },
      }}
      transition={{ duration: 0.25, delay, ease: 'easeOut' }}
      style={{ '--offset': `${offset}px`, top } as React.CSSProperties}
      className="absolute left-[calc(50%+var(--offset))] size-[38px] drop-shadow-[0_3px_1px_rgba(0,0,0,.15)]"
    >
      /* ... */
    </motion.div>
  )
}